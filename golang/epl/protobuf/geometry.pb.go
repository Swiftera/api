// Code generated by protoc-gen-go. DO NOT EDIT.
// source: epl/protobuf/geometry.proto

package protobuf // import "github.com/geo-grpc/api/golang/epl/protobuf"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// type of geometry operators
type Encoding int32

const (
	Encoding_UNKNOWN_ENCODING Encoding = 0
	Encoding_WKB              Encoding = 1
	Encoding_WKT              Encoding = 2
	Encoding_GEOJSON          Encoding = 3
	Encoding_ESRI_SHAPE       Encoding = 4
	Encoding_ENVELOPE         Encoding = 5
)

var Encoding_name = map[int32]string{
	0: "UNKNOWN_ENCODING",
	1: "WKB",
	2: "WKT",
	3: "GEOJSON",
	4: "ESRI_SHAPE",
	5: "ENVELOPE",
}
var Encoding_value = map[string]int32{
	"UNKNOWN_ENCODING": 0,
	"WKB":              1,
	"WKT":              2,
	"GEOJSON":          3,
	"ESRI_SHAPE":       4,
	"ENVELOPE":         5,
}

func (x Encoding) String() string {
	return proto.EnumName(Encoding_name, int32(x))
}
func (Encoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{0}
}

//
// type of geometry operators
type OperatorType int32

const (
	OperatorType_UNKNOWN_OPERATOR           OperatorType = 0
	OperatorType_PROJECT                    OperatorType = 1
	OperatorType_EXPORT_TO_JSON             OperatorType = 2
	OperatorType_IMPORT_FROM_JSON           OperatorType = 3
	OperatorType_EXPORT_TO_ESRI_SHAPE       OperatorType = 4
	OperatorType_IMPORT_FROM_ESRI_SHAPE     OperatorType = 5
	OperatorType_UNION                      OperatorType = 6
	OperatorType_DIFFERENCE                 OperatorType = 7
	OperatorType_PROXIMITY_2D               OperatorType = 8
	OperatorType_RELATE                     OperatorType = 9
	OperatorType_EQUALS                     OperatorType = 10
	OperatorType_DISJOINT                   OperatorType = 11
	OperatorType_INTERSECTS                 OperatorType = 12
	OperatorType_WITHIN                     OperatorType = 13
	OperatorType_CONTAINS                   OperatorType = 14
	OperatorType_CROSSES                    OperatorType = 15
	OperatorType_TOUCHES                    OperatorType = 16
	OperatorType_OVERLAPS                   OperatorType = 17
	OperatorType_BUFFER                     OperatorType = 18
	OperatorType_DISTANCE                   OperatorType = 19
	OperatorType_INTERSECTION               OperatorType = 20
	OperatorType_CLIP                       OperatorType = 21
	OperatorType_CUT                        OperatorType = 22
	OperatorType_DENSIFY_BY_LENGTH          OperatorType = 23
	OperatorType_DENSIFY_BY_ANGLE           OperatorType = 24
	OperatorType_LABEL_POINT                OperatorType = 25
	OperatorType_GEODESIC_BUFFER            OperatorType = 26
	OperatorType_GEODETIC_DENSIFY_BY_LENGTH OperatorType = 27
	OperatorType_GEODETIC_LENGTH            OperatorType = 29
	OperatorType_GEODETIC_AREA              OperatorType = 30
	OperatorType_SIMPLIFY                   OperatorType = 31
	OperatorType_SIMPLIFY_OGC               OperatorType = 32
	OperatorType_OFFSET                     OperatorType = 33
	OperatorType_GENERALIZE                 OperatorType = 34
	OperatorType_GENERALIZE_BY_AREA         OperatorType = 35
	OperatorType_EXPORT_TO_WKB              OperatorType = 36
	OperatorType_IMPORT_FROM_WKB            OperatorType = 37
	OperatorType_EXPORT_TO_WKT              OperatorType = 38
	OperatorType_IMPORT_FROM_WKT            OperatorType = 39
	OperatorType_IMPORT_FROM_GEOJSON        OperatorType = 40
	OperatorType_EXPORT_TO_GEOJSON          OperatorType = 41
	OperatorType_SYMMETRIC_DIFFERENCE       OperatorType = 42
	OperatorType_CONVEX_HULL                OperatorType = 43
	OperatorType_BOUNDARY                   OperatorType = 44
	OperatorType_RANDOM_POINTS              OperatorType = 45
	OperatorType_ENCLOSING_CIRCLE           OperatorType = 46
)

var OperatorType_name = map[int32]string{
	0:  "UNKNOWN_OPERATOR",
	1:  "PROJECT",
	2:  "EXPORT_TO_JSON",
	3:  "IMPORT_FROM_JSON",
	4:  "EXPORT_TO_ESRI_SHAPE",
	5:  "IMPORT_FROM_ESRI_SHAPE",
	6:  "UNION",
	7:  "DIFFERENCE",
	8:  "PROXIMITY_2D",
	9:  "RELATE",
	10: "EQUALS",
	11: "DISJOINT",
	12: "INTERSECTS",
	13: "WITHIN",
	14: "CONTAINS",
	15: "CROSSES",
	16: "TOUCHES",
	17: "OVERLAPS",
	18: "BUFFER",
	19: "DISTANCE",
	20: "INTERSECTION",
	21: "CLIP",
	22: "CUT",
	23: "DENSIFY_BY_LENGTH",
	24: "DENSIFY_BY_ANGLE",
	25: "LABEL_POINT",
	26: "GEODESIC_BUFFER",
	27: "GEODETIC_DENSIFY_BY_LENGTH",
	29: "GEODETIC_LENGTH",
	30: "GEODETIC_AREA",
	31: "SIMPLIFY",
	32: "SIMPLIFY_OGC",
	33: "OFFSET",
	34: "GENERALIZE",
	35: "GENERALIZE_BY_AREA",
	36: "EXPORT_TO_WKB",
	37: "IMPORT_FROM_WKB",
	38: "EXPORT_TO_WKT",
	39: "IMPORT_FROM_WKT",
	40: "IMPORT_FROM_GEOJSON",
	41: "EXPORT_TO_GEOJSON",
	42: "SYMMETRIC_DIFFERENCE",
	43: "CONVEX_HULL",
	44: "BOUNDARY",
	45: "RANDOM_POINTS",
	46: "ENCLOSING_CIRCLE",
}
var OperatorType_value = map[string]int32{
	"UNKNOWN_OPERATOR":           0,
	"PROJECT":                    1,
	"EXPORT_TO_JSON":             2,
	"IMPORT_FROM_JSON":           3,
	"EXPORT_TO_ESRI_SHAPE":       4,
	"IMPORT_FROM_ESRI_SHAPE":     5,
	"UNION":                      6,
	"DIFFERENCE":                 7,
	"PROXIMITY_2D":               8,
	"RELATE":                     9,
	"EQUALS":                     10,
	"DISJOINT":                   11,
	"INTERSECTS":                 12,
	"WITHIN":                     13,
	"CONTAINS":                   14,
	"CROSSES":                    15,
	"TOUCHES":                    16,
	"OVERLAPS":                   17,
	"BUFFER":                     18,
	"DISTANCE":                   19,
	"INTERSECTION":               20,
	"CLIP":                       21,
	"CUT":                        22,
	"DENSIFY_BY_LENGTH":          23,
	"DENSIFY_BY_ANGLE":           24,
	"LABEL_POINT":                25,
	"GEODESIC_BUFFER":            26,
	"GEODETIC_DENSIFY_BY_LENGTH": 27,
	"GEODETIC_LENGTH":            29,
	"GEODETIC_AREA":              30,
	"SIMPLIFY":                   31,
	"SIMPLIFY_OGC":               32,
	"OFFSET":                     33,
	"GENERALIZE":                 34,
	"GENERALIZE_BY_AREA":         35,
	"EXPORT_TO_WKB":              36,
	"IMPORT_FROM_WKB":            37,
	"EXPORT_TO_WKT":              38,
	"IMPORT_FROM_WKT":            39,
	"IMPORT_FROM_GEOJSON":        40,
	"EXPORT_TO_GEOJSON":          41,
	"SYMMETRIC_DIFFERENCE":       42,
	"CONVEX_HULL":                43,
	"BOUNDARY":                   44,
	"RANDOM_POINTS":              45,
	"ENCLOSING_CIRCLE":           46,
}

func (x OperatorType) String() string {
	return proto.EnumName(OperatorType_name, int32(x))
}
func (OperatorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{1}
}

type GeometryRequest_OffsetParams_OffsetJoinType int32

const (
	GeometryRequest_OffsetParams_ROUND  GeometryRequest_OffsetParams_OffsetJoinType = 0
	GeometryRequest_OffsetParams_BEVEL  GeometryRequest_OffsetParams_OffsetJoinType = 1
	GeometryRequest_OffsetParams_MITER  GeometryRequest_OffsetParams_OffsetJoinType = 2
	GeometryRequest_OffsetParams_SQUARE GeometryRequest_OffsetParams_OffsetJoinType = 3
)

var GeometryRequest_OffsetParams_OffsetJoinType_name = map[int32]string{
	0: "ROUND",
	1: "BEVEL",
	2: "MITER",
	3: "SQUARE",
}
var GeometryRequest_OffsetParams_OffsetJoinType_value = map[string]int32{
	"ROUND":  0,
	"BEVEL":  1,
	"MITER":  2,
	"SQUARE": 3,
}

func (x GeometryRequest_OffsetParams_OffsetJoinType) String() string {
	return proto.EnumName(GeometryRequest_OffsetParams_OffsetJoinType_name, int32(x))
}
func (GeometryRequest_OffsetParams_OffsetJoinType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 8, 0}
}

type FileRequestChunk_FileType int32

const (
	FileRequestChunk_SHAPEFILE FileRequestChunk_FileType = 0
)

var FileRequestChunk_FileType_name = map[int32]string{
	0: "SHAPEFILE",
}
var FileRequestChunk_FileType_value = map[string]int32{
	"SHAPEFILE": 0,
}

func (x FileRequestChunk_FileType) String() string {
	return proto.EnumName(FileRequestChunk_FileType_name, int32(x))
}
func (FileRequestChunk_FileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{5, 0}
}

type GeometryData struct {
	GeometryId int64  `protobuf:"varint,1,opt,name=geometry_id,json=geometryId,proto3" json:"geometry_id,omitempty"`
	FeatureId  string `protobuf:"bytes,2,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	// oneof block
	Wkt                  string                `protobuf:"bytes,3,opt,name=wkt,proto3" json:"wkt,omitempty"`
	Geojson              string                `protobuf:"bytes,4,opt,name=geojson,proto3" json:"geojson,omitempty"`
	Wkb                  []byte                `protobuf:"bytes,5,opt,name=wkb,proto3" json:"wkb,omitempty"`
	EsriShape            []byte                `protobuf:"bytes,6,opt,name=esri_shape,json=esriShape,proto3" json:"esri_shape,omitempty"`
	Sr                   *SpatialReferenceData `protobuf:"bytes,7,opt,name=sr,proto3" json:"sr,omitempty"`
	Envelope             *EnvelopeData         `protobuf:"bytes,8,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GeometryData) Reset()         { *m = GeometryData{} }
func (m *GeometryData) String() string { return proto.CompactTextString(m) }
func (*GeometryData) ProtoMessage()    {}
func (*GeometryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{0}
}
func (m *GeometryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryData.Unmarshal(m, b)
}
func (m *GeometryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryData.Marshal(b, m, deterministic)
}
func (dst *GeometryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryData.Merge(dst, src)
}
func (m *GeometryData) XXX_Size() int {
	return xxx_messageInfo_GeometryData.Size(m)
}
func (m *GeometryData) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryData.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryData proto.InternalMessageInfo

func (m *GeometryData) GetGeometryId() int64 {
	if m != nil {
		return m.GeometryId
	}
	return 0
}

func (m *GeometryData) GetFeatureId() string {
	if m != nil {
		return m.FeatureId
	}
	return ""
}

func (m *GeometryData) GetWkt() string {
	if m != nil {
		return m.Wkt
	}
	return ""
}

func (m *GeometryData) GetGeojson() string {
	if m != nil {
		return m.Geojson
	}
	return ""
}

func (m *GeometryData) GetWkb() []byte {
	if m != nil {
		return m.Wkb
	}
	return nil
}

func (m *GeometryData) GetEsriShape() []byte {
	if m != nil {
		return m.EsriShape
	}
	return nil
}

func (m *GeometryData) GetSr() *SpatialReferenceData {
	if m != nil {
		return m.Sr
	}
	return nil
}

func (m *GeometryData) GetEnvelope() *EnvelopeData {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type SpatialReferenceData struct {
	Wkid                 int32    `protobuf:"varint,1,opt,name=wkid,proto3" json:"wkid,omitempty"`
	Proj4                string   `protobuf:"bytes,2,opt,name=proj4,proto3" json:"proj4,omitempty"`
	EsriWkt              string   `protobuf:"bytes,3,opt,name=esri_wkt,json=esriWkt,proto3" json:"esri_wkt,omitempty"`
	OgcWkt               string   `protobuf:"bytes,4,opt,name=ogc_wkt,json=ogcWkt,proto3" json:"ogc_wkt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpatialReferenceData) Reset()         { *m = SpatialReferenceData{} }
func (m *SpatialReferenceData) String() string { return proto.CompactTextString(m) }
func (*SpatialReferenceData) ProtoMessage()    {}
func (*SpatialReferenceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{1}
}
func (m *SpatialReferenceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpatialReferenceData.Unmarshal(m, b)
}
func (m *SpatialReferenceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpatialReferenceData.Marshal(b, m, deterministic)
}
func (dst *SpatialReferenceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpatialReferenceData.Merge(dst, src)
}
func (m *SpatialReferenceData) XXX_Size() int {
	return xxx_messageInfo_SpatialReferenceData.Size(m)
}
func (m *SpatialReferenceData) XXX_DiscardUnknown() {
	xxx_messageInfo_SpatialReferenceData.DiscardUnknown(m)
}

var xxx_messageInfo_SpatialReferenceData proto.InternalMessageInfo

func (m *SpatialReferenceData) GetWkid() int32 {
	if m != nil {
		return m.Wkid
	}
	return 0
}

func (m *SpatialReferenceData) GetProj4() string {
	if m != nil {
		return m.Proj4
	}
	return ""
}

func (m *SpatialReferenceData) GetEsriWkt() string {
	if m != nil {
		return m.EsriWkt
	}
	return ""
}

func (m *SpatialReferenceData) GetOgcWkt() string {
	if m != nil {
		return m.OgcWkt
	}
	return ""
}

type EnvelopeData struct {
	Xmin                 float64               `protobuf:"fixed64,1,opt,name=xmin,proto3" json:"xmin,omitempty"`
	Ymin                 float64               `protobuf:"fixed64,2,opt,name=ymin,proto3" json:"ymin,omitempty"`
	Xmax                 float64               `protobuf:"fixed64,3,opt,name=xmax,proto3" json:"xmax,omitempty"`
	Ymax                 float64               `protobuf:"fixed64,4,opt,name=ymax,proto3" json:"ymax,omitempty"`
	Sr                   *SpatialReferenceData `protobuf:"bytes,5,opt,name=sr,proto3" json:"sr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EnvelopeData) Reset()         { *m = EnvelopeData{} }
func (m *EnvelopeData) String() string { return proto.CompactTextString(m) }
func (*EnvelopeData) ProtoMessage()    {}
func (*EnvelopeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{2}
}
func (m *EnvelopeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvelopeData.Unmarshal(m, b)
}
func (m *EnvelopeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvelopeData.Marshal(b, m, deterministic)
}
func (dst *EnvelopeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvelopeData.Merge(dst, src)
}
func (m *EnvelopeData) XXX_Size() int {
	return xxx_messageInfo_EnvelopeData.Size(m)
}
func (m *EnvelopeData) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvelopeData.DiscardUnknown(m)
}

var xxx_messageInfo_EnvelopeData proto.InternalMessageInfo

func (m *EnvelopeData) GetXmin() float64 {
	if m != nil {
		return m.Xmin
	}
	return 0
}

func (m *EnvelopeData) GetYmin() float64 {
	if m != nil {
		return m.Ymin
	}
	return 0
}

func (m *EnvelopeData) GetXmax() float64 {
	if m != nil {
		return m.Xmax
	}
	return 0
}

func (m *EnvelopeData) GetYmax() float64 {
	if m != nil {
		return m.Ymax
	}
	return 0
}

func (m *EnvelopeData) GetSr() *SpatialReferenceData {
	if m != nil {
		return m.Sr
	}
	return nil
}

type GeometryRequest struct {
	//    oneof primary_geoms {
	Geometry             *GeometryData         `protobuf:"bytes,1,opt,name=geometry,proto3" json:"geometry,omitempty"`
	LeftGeometry         *GeometryData         `protobuf:"bytes,2,opt,name=left_geometry,json=leftGeometry,proto3" json:"left_geometry,omitempty"`
	GeometryRequest      *GeometryRequest      `protobuf:"bytes,3,opt,name=geometry_request,json=geometryRequest,proto3" json:"geometry_request,omitempty"`
	LeftGeometryRequest  *GeometryRequest      `protobuf:"bytes,4,opt,name=left_geometry_request,json=leftGeometryRequest,proto3" json:"left_geometry_request,omitempty"`
	RightGeometry        *GeometryData         `protobuf:"bytes,5,opt,name=right_geometry,json=rightGeometry,proto3" json:"right_geometry,omitempty"`
	RightGeometryRequest *GeometryRequest      `protobuf:"bytes,6,opt,name=right_geometry_request,json=rightGeometryRequest,proto3" json:"right_geometry_request,omitempty"`
	Operator             OperatorType          `protobuf:"varint,7,opt,name=operator,proto3,enum=epl.protobuf.OperatorType" json:"operator,omitempty"`
	ResultEncoding       Encoding              `protobuf:"varint,8,opt,name=result_encoding,json=resultEncoding,proto3,enum=epl.protobuf.Encoding" json:"result_encoding,omitempty"`
	OperationSr          *SpatialReferenceData `protobuf:"bytes,9,opt,name=operation_sr,json=operationSr,proto3" json:"operation_sr,omitempty"`
	ResultSr             *SpatialReferenceData `protobuf:"bytes,10,opt,name=result_sr,json=resultSr,proto3" json:"result_sr,omitempty"`
	//    oneof params {
	BufferParams           *GeometryRequest_BufferParams           `protobuf:"bytes,11,opt,name=buffer_params,json=bufferParams,proto3" json:"buffer_params,omitempty"`
	ConvexParams           *GeometryRequest_ConvexParams           `protobuf:"bytes,12,opt,name=convex_params,json=convexParams,proto3" json:"convex_params,omitempty"`
	RelateParams           *GeometryRequest_RelateParams           `protobuf:"bytes,13,opt,name=relate_params,json=relateParams,proto3" json:"relate_params,omitempty"`
	RandomPointsParams     *GeometryRequest_RandomPointsParams     `protobuf:"bytes,14,opt,name=random_points_params,json=randomPointsParams,proto3" json:"random_points_params,omitempty"`
	GeneralizeParams       *GeometryRequest_GeneralizeParams       `protobuf:"bytes,15,opt,name=generalize_params,json=generalizeParams,proto3" json:"generalize_params,omitempty"`
	IntersectionParams     *GeometryRequest_IntersectionParams     `protobuf:"bytes,16,opt,name=intersection_params,json=intersectionParams,proto3" json:"intersection_params,omitempty"`
	OffsetParams           *GeometryRequest_OffsetParams           `protobuf:"bytes,17,opt,name=offset_params,json=offsetParams,proto3" json:"offset_params,omitempty"`
	CutParams              *GeometryRequest_CutParams              `protobuf:"bytes,18,opt,name=cut_params,json=cutParams,proto3" json:"cut_params,omitempty"`
	ClipParams             *GeometryRequest_ClipParams             `protobuf:"bytes,19,opt,name=clip_params,json=clipParams,proto3" json:"clip_params,omitempty"`
	DensifyParams          *GeometryRequest_DensifyParams          `protobuf:"bytes,20,opt,name=densify_params,json=densifyParams,proto3" json:"densify_params,omitempty"`
	SimplifyParams         *GeometryRequest_SimplifyParams         `protobuf:"bytes,21,opt,name=simplify_params,json=simplifyParams,proto3" json:"simplify_params,omitempty"`
	GeneralizeByAreaParams *GeometryRequest_GeneralizeByAreaParams `protobuf:"bytes,22,opt,name=generalize_by_area_params,json=generalizeByAreaParams,proto3" json:"generalize_by_area_params,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                `json:"-"`
	XXX_unrecognized       []byte                                  `json:"-"`
	XXX_sizecache          int32                                   `json:"-"`
}

func (m *GeometryRequest) Reset()         { *m = GeometryRequest{} }
func (m *GeometryRequest) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest) ProtoMessage()    {}
func (*GeometryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3}
}
func (m *GeometryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest.Unmarshal(m, b)
}
func (m *GeometryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest.Merge(dst, src)
}
func (m *GeometryRequest) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest.Size(m)
}
func (m *GeometryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest proto.InternalMessageInfo

func (m *GeometryRequest) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *GeometryRequest) GetLeftGeometry() *GeometryData {
	if m != nil {
		return m.LeftGeometry
	}
	return nil
}

func (m *GeometryRequest) GetGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.GeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetLeftGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.LeftGeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetRightGeometry() *GeometryData {
	if m != nil {
		return m.RightGeometry
	}
	return nil
}

func (m *GeometryRequest) GetRightGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.RightGeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetOperator() OperatorType {
	if m != nil {
		return m.Operator
	}
	return OperatorType_UNKNOWN_OPERATOR
}

func (m *GeometryRequest) GetResultEncoding() Encoding {
	if m != nil {
		return m.ResultEncoding
	}
	return Encoding_UNKNOWN_ENCODING
}

func (m *GeometryRequest) GetOperationSr() *SpatialReferenceData {
	if m != nil {
		return m.OperationSr
	}
	return nil
}

func (m *GeometryRequest) GetResultSr() *SpatialReferenceData {
	if m != nil {
		return m.ResultSr
	}
	return nil
}

func (m *GeometryRequest) GetBufferParams() *GeometryRequest_BufferParams {
	if m != nil {
		return m.BufferParams
	}
	return nil
}

func (m *GeometryRequest) GetConvexParams() *GeometryRequest_ConvexParams {
	if m != nil {
		return m.ConvexParams
	}
	return nil
}

func (m *GeometryRequest) GetRelateParams() *GeometryRequest_RelateParams {
	if m != nil {
		return m.RelateParams
	}
	return nil
}

func (m *GeometryRequest) GetRandomPointsParams() *GeometryRequest_RandomPointsParams {
	if m != nil {
		return m.RandomPointsParams
	}
	return nil
}

func (m *GeometryRequest) GetGeneralizeParams() *GeometryRequest_GeneralizeParams {
	if m != nil {
		return m.GeneralizeParams
	}
	return nil
}

func (m *GeometryRequest) GetIntersectionParams() *GeometryRequest_IntersectionParams {
	if m != nil {
		return m.IntersectionParams
	}
	return nil
}

func (m *GeometryRequest) GetOffsetParams() *GeometryRequest_OffsetParams {
	if m != nil {
		return m.OffsetParams
	}
	return nil
}

func (m *GeometryRequest) GetCutParams() *GeometryRequest_CutParams {
	if m != nil {
		return m.CutParams
	}
	return nil
}

func (m *GeometryRequest) GetClipParams() *GeometryRequest_ClipParams {
	if m != nil {
		return m.ClipParams
	}
	return nil
}

func (m *GeometryRequest) GetDensifyParams() *GeometryRequest_DensifyParams {
	if m != nil {
		return m.DensifyParams
	}
	return nil
}

func (m *GeometryRequest) GetSimplifyParams() *GeometryRequest_SimplifyParams {
	if m != nil {
		return m.SimplifyParams
	}
	return nil
}

func (m *GeometryRequest) GetGeneralizeByAreaParams() *GeometryRequest_GeneralizeByAreaParams {
	if m != nil {
		return m.GeneralizeByAreaParams
	}
	return nil
}

type GeometryRequest_BufferParams struct {
	Distance                float64  `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	MaxDeviation            float64  `protobuf:"fixed64,2,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	UnionResult             bool     `protobuf:"varint,3,opt,name=union_result,json=unionResult,proto3" json:"union_result,omitempty"`
	MaxVerticesInFullCircle int32    `protobuf:"varint,4,opt,name=max_vertices_in_full_circle,json=maxVerticesInFullCircle,proto3" json:"max_vertices_in_full_circle,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *GeometryRequest_BufferParams) Reset()         { *m = GeometryRequest_BufferParams{} }
func (m *GeometryRequest_BufferParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_BufferParams) ProtoMessage()    {}
func (*GeometryRequest_BufferParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 0}
}
func (m *GeometryRequest_BufferParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_BufferParams.Unmarshal(m, b)
}
func (m *GeometryRequest_BufferParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_BufferParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_BufferParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_BufferParams.Merge(dst, src)
}
func (m *GeometryRequest_BufferParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_BufferParams.Size(m)
}
func (m *GeometryRequest_BufferParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_BufferParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_BufferParams proto.InternalMessageInfo

func (m *GeometryRequest_BufferParams) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *GeometryRequest_BufferParams) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *GeometryRequest_BufferParams) GetUnionResult() bool {
	if m != nil {
		return m.UnionResult
	}
	return false
}

func (m *GeometryRequest_BufferParams) GetMaxVerticesInFullCircle() int32 {
	if m != nil {
		return m.MaxVerticesInFullCircle
	}
	return 0
}

type GeometryRequest_GeodeticBufferParams struct {
	Distance                float64  `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	MaxDeviation            float64  `protobuf:"fixed64,2,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	UnionResult             bool     `protobuf:"varint,3,opt,name=union_result,json=unionResult,proto3" json:"union_result,omitempty"`
	MaxVerticesInFullCircle int32    `protobuf:"varint,4,opt,name=max_vertices_in_full_circle,json=maxVerticesInFullCircle,proto3" json:"max_vertices_in_full_circle,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *GeometryRequest_GeodeticBufferParams) Reset()         { *m = GeometryRequest_GeodeticBufferParams{} }
func (m *GeometryRequest_GeodeticBufferParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_GeodeticBufferParams) ProtoMessage()    {}
func (*GeometryRequest_GeodeticBufferParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 1}
}
func (m *GeometryRequest_GeodeticBufferParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_GeodeticBufferParams.Unmarshal(m, b)
}
func (m *GeometryRequest_GeodeticBufferParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_GeodeticBufferParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_GeodeticBufferParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_GeodeticBufferParams.Merge(dst, src)
}
func (m *GeometryRequest_GeodeticBufferParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_GeodeticBufferParams.Size(m)
}
func (m *GeometryRequest_GeodeticBufferParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_GeodeticBufferParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_GeodeticBufferParams proto.InternalMessageInfo

func (m *GeometryRequest_GeodeticBufferParams) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *GeometryRequest_GeodeticBufferParams) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *GeometryRequest_GeodeticBufferParams) GetUnionResult() bool {
	if m != nil {
		return m.UnionResult
	}
	return false
}

func (m *GeometryRequest_GeodeticBufferParams) GetMaxVerticesInFullCircle() int32 {
	if m != nil {
		return m.MaxVerticesInFullCircle
	}
	return 0
}

type GeometryRequest_ConvexParams struct {
	Merge                bool     `protobuf:"varint,1,opt,name=merge,proto3" json:"merge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_ConvexParams) Reset()         { *m = GeometryRequest_ConvexParams{} }
func (m *GeometryRequest_ConvexParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_ConvexParams) ProtoMessage()    {}
func (*GeometryRequest_ConvexParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 2}
}
func (m *GeometryRequest_ConvexParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_ConvexParams.Unmarshal(m, b)
}
func (m *GeometryRequest_ConvexParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_ConvexParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_ConvexParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_ConvexParams.Merge(dst, src)
}
func (m *GeometryRequest_ConvexParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_ConvexParams.Size(m)
}
func (m *GeometryRequest_ConvexParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_ConvexParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_ConvexParams proto.InternalMessageInfo

func (m *GeometryRequest_ConvexParams) GetMerge() bool {
	if m != nil {
		return m.Merge
	}
	return false
}

type GeometryRequest_RelateParams struct {
	De_9Im               string   `protobuf:"bytes,1,opt,name=de_9im,json=de9im,proto3" json:"de_9im,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_RelateParams) Reset()         { *m = GeometryRequest_RelateParams{} }
func (m *GeometryRequest_RelateParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_RelateParams) ProtoMessage()    {}
func (*GeometryRequest_RelateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 3}
}
func (m *GeometryRequest_RelateParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_RelateParams.Unmarshal(m, b)
}
func (m *GeometryRequest_RelateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_RelateParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_RelateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_RelateParams.Merge(dst, src)
}
func (m *GeometryRequest_RelateParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_RelateParams.Size(m)
}
func (m *GeometryRequest_RelateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_RelateParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_RelateParams proto.InternalMessageInfo

func (m *GeometryRequest_RelateParams) GetDe_9Im() string {
	if m != nil {
		return m.De_9Im
	}
	return ""
}

type GeometryRequest_RandomPointsParams struct {
	PointsPerSquareKm    float64  `protobuf:"fixed64,1,opt,name=points_per_square_km,json=pointsPerSquareKm,proto3" json:"points_per_square_km,omitempty"`
	Seed                 int64    `protobuf:"varint,2,opt,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_RandomPointsParams) Reset()         { *m = GeometryRequest_RandomPointsParams{} }
func (m *GeometryRequest_RandomPointsParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_RandomPointsParams) ProtoMessage()    {}
func (*GeometryRequest_RandomPointsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 4}
}
func (m *GeometryRequest_RandomPointsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_RandomPointsParams.Unmarshal(m, b)
}
func (m *GeometryRequest_RandomPointsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_RandomPointsParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_RandomPointsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_RandomPointsParams.Merge(dst, src)
}
func (m *GeometryRequest_RandomPointsParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_RandomPointsParams.Size(m)
}
func (m *GeometryRequest_RandomPointsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_RandomPointsParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_RandomPointsParams proto.InternalMessageInfo

func (m *GeometryRequest_RandomPointsParams) GetPointsPerSquareKm() float64 {
	if m != nil {
		return m.PointsPerSquareKm
	}
	return 0
}

func (m *GeometryRequest_RandomPointsParams) GetSeed() int64 {
	if m != nil {
		return m.Seed
	}
	return 0
}

type GeometryRequest_GeneralizeParams struct {
	MaxDeviation         float64  `protobuf:"fixed64,1,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	RemoveDegenerates    bool     `protobuf:"varint,2,opt,name=remove_degenerates,json=removeDegenerates,proto3" json:"remove_degenerates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_GeneralizeParams) Reset()         { *m = GeometryRequest_GeneralizeParams{} }
func (m *GeometryRequest_GeneralizeParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_GeneralizeParams) ProtoMessage()    {}
func (*GeometryRequest_GeneralizeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 5}
}
func (m *GeometryRequest_GeneralizeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_GeneralizeParams.Unmarshal(m, b)
}
func (m *GeometryRequest_GeneralizeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_GeneralizeParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_GeneralizeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_GeneralizeParams.Merge(dst, src)
}
func (m *GeometryRequest_GeneralizeParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_GeneralizeParams.Size(m)
}
func (m *GeometryRequest_GeneralizeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_GeneralizeParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_GeneralizeParams proto.InternalMessageInfo

func (m *GeometryRequest_GeneralizeParams) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *GeometryRequest_GeneralizeParams) GetRemoveDegenerates() bool {
	if m != nil {
		return m.RemoveDegenerates
	}
	return false
}

type GeometryRequest_GeneralizeByAreaParams struct {
	PercentReduction     float64  `protobuf:"fixed64,1,opt,name=percent_reduction,json=percentReduction,proto3" json:"percent_reduction,omitempty"`
	RemoveDegenerates    bool     `protobuf:"varint,2,opt,name=remove_degenerates,json=removeDegenerates,proto3" json:"remove_degenerates,omitempty"`
	MaxPointCount        int32    `protobuf:"varint,3,opt,name=max_point_count,json=maxPointCount,proto3" json:"max_point_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_GeneralizeByAreaParams) Reset() {
	*m = GeometryRequest_GeneralizeByAreaParams{}
}
func (m *GeometryRequest_GeneralizeByAreaParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_GeneralizeByAreaParams) ProtoMessage()    {}
func (*GeometryRequest_GeneralizeByAreaParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 6}
}
func (m *GeometryRequest_GeneralizeByAreaParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_GeneralizeByAreaParams.Unmarshal(m, b)
}
func (m *GeometryRequest_GeneralizeByAreaParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_GeneralizeByAreaParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_GeneralizeByAreaParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_GeneralizeByAreaParams.Merge(dst, src)
}
func (m *GeometryRequest_GeneralizeByAreaParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_GeneralizeByAreaParams.Size(m)
}
func (m *GeometryRequest_GeneralizeByAreaParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_GeneralizeByAreaParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_GeneralizeByAreaParams proto.InternalMessageInfo

func (m *GeometryRequest_GeneralizeByAreaParams) GetPercentReduction() float64 {
	if m != nil {
		return m.PercentReduction
	}
	return 0
}

func (m *GeometryRequest_GeneralizeByAreaParams) GetRemoveDegenerates() bool {
	if m != nil {
		return m.RemoveDegenerates
	}
	return false
}

func (m *GeometryRequest_GeneralizeByAreaParams) GetMaxPointCount() int32 {
	if m != nil {
		return m.MaxPointCount
	}
	return 0
}

type GeometryRequest_IntersectionParams struct {
	DimensionMask        int32    `protobuf:"varint,1,opt,name=dimension_mask,json=dimensionMask,proto3" json:"dimension_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_IntersectionParams) Reset()         { *m = GeometryRequest_IntersectionParams{} }
func (m *GeometryRequest_IntersectionParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_IntersectionParams) ProtoMessage()    {}
func (*GeometryRequest_IntersectionParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 7}
}
func (m *GeometryRequest_IntersectionParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_IntersectionParams.Unmarshal(m, b)
}
func (m *GeometryRequest_IntersectionParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_IntersectionParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_IntersectionParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_IntersectionParams.Merge(dst, src)
}
func (m *GeometryRequest_IntersectionParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_IntersectionParams.Size(m)
}
func (m *GeometryRequest_IntersectionParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_IntersectionParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_IntersectionParams proto.InternalMessageInfo

func (m *GeometryRequest_IntersectionParams) GetDimensionMask() int32 {
	if m != nil {
		return m.DimensionMask
	}
	return 0
}

type GeometryRequest_OffsetParams struct {
	Distance             float64                                     `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	JoinType             GeometryRequest_OffsetParams_OffsetJoinType `protobuf:"varint,2,opt,name=join_type,json=joinType,proto3,enum=epl.protobuf.GeometryRequest_OffsetParams_OffsetJoinType" json:"join_type,omitempty"`
	BevelRatio           float64                                     `protobuf:"fixed64,3,opt,name=bevel_ratio,json=bevelRatio,proto3" json:"bevel_ratio,omitempty"`
	FlattenError         float64                                     `protobuf:"fixed64,4,opt,name=flatten_error,json=flattenError,proto3" json:"flatten_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *GeometryRequest_OffsetParams) Reset()         { *m = GeometryRequest_OffsetParams{} }
func (m *GeometryRequest_OffsetParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_OffsetParams) ProtoMessage()    {}
func (*GeometryRequest_OffsetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 8}
}
func (m *GeometryRequest_OffsetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_OffsetParams.Unmarshal(m, b)
}
func (m *GeometryRequest_OffsetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_OffsetParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_OffsetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_OffsetParams.Merge(dst, src)
}
func (m *GeometryRequest_OffsetParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_OffsetParams.Size(m)
}
func (m *GeometryRequest_OffsetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_OffsetParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_OffsetParams proto.InternalMessageInfo

func (m *GeometryRequest_OffsetParams) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *GeometryRequest_OffsetParams) GetJoinType() GeometryRequest_OffsetParams_OffsetJoinType {
	if m != nil {
		return m.JoinType
	}
	return GeometryRequest_OffsetParams_ROUND
}

func (m *GeometryRequest_OffsetParams) GetBevelRatio() float64 {
	if m != nil {
		return m.BevelRatio
	}
	return 0
}

func (m *GeometryRequest_OffsetParams) GetFlattenError() float64 {
	if m != nil {
		return m.FlattenError
	}
	return 0
}

type GeometryRequest_CutParams struct {
	ConsiderTouch        bool     `protobuf:"varint,1,opt,name=consider_touch,json=considerTouch,proto3" json:"consider_touch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_CutParams) Reset()         { *m = GeometryRequest_CutParams{} }
func (m *GeometryRequest_CutParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_CutParams) ProtoMessage()    {}
func (*GeometryRequest_CutParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 9}
}
func (m *GeometryRequest_CutParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_CutParams.Unmarshal(m, b)
}
func (m *GeometryRequest_CutParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_CutParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_CutParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_CutParams.Merge(dst, src)
}
func (m *GeometryRequest_CutParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_CutParams.Size(m)
}
func (m *GeometryRequest_CutParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_CutParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_CutParams proto.InternalMessageInfo

func (m *GeometryRequest_CutParams) GetConsiderTouch() bool {
	if m != nil {
		return m.ConsiderTouch
	}
	return false
}

type GeometryRequest_ClipParams struct {
	Envelope             *EnvelopeData `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GeometryRequest_ClipParams) Reset()         { *m = GeometryRequest_ClipParams{} }
func (m *GeometryRequest_ClipParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_ClipParams) ProtoMessage()    {}
func (*GeometryRequest_ClipParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 10}
}
func (m *GeometryRequest_ClipParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_ClipParams.Unmarshal(m, b)
}
func (m *GeometryRequest_ClipParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_ClipParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_ClipParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_ClipParams.Merge(dst, src)
}
func (m *GeometryRequest_ClipParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_ClipParams.Size(m)
}
func (m *GeometryRequest_ClipParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_ClipParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_ClipParams proto.InternalMessageInfo

func (m *GeometryRequest_ClipParams) GetEnvelope() *EnvelopeData {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type GeometryRequest_DensifyParams struct {
	MaxLength            float64  `protobuf:"fixed64,1,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_DensifyParams) Reset()         { *m = GeometryRequest_DensifyParams{} }
func (m *GeometryRequest_DensifyParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_DensifyParams) ProtoMessage()    {}
func (*GeometryRequest_DensifyParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 11}
}
func (m *GeometryRequest_DensifyParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_DensifyParams.Unmarshal(m, b)
}
func (m *GeometryRequest_DensifyParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_DensifyParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_DensifyParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_DensifyParams.Merge(dst, src)
}
func (m *GeometryRequest_DensifyParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_DensifyParams.Size(m)
}
func (m *GeometryRequest_DensifyParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_DensifyParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_DensifyParams proto.InternalMessageInfo

func (m *GeometryRequest_DensifyParams) GetMaxLength() float64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

type GeometryRequest_SimplifyParams struct {
	Force                bool     `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeometryRequest_SimplifyParams) Reset()         { *m = GeometryRequest_SimplifyParams{} }
func (m *GeometryRequest_SimplifyParams) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest_SimplifyParams) ProtoMessage()    {}
func (*GeometryRequest_SimplifyParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{3, 12}
}
func (m *GeometryRequest_SimplifyParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest_SimplifyParams.Unmarshal(m, b)
}
func (m *GeometryRequest_SimplifyParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest_SimplifyParams.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest_SimplifyParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest_SimplifyParams.Merge(dst, src)
}
func (m *GeometryRequest_SimplifyParams) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest_SimplifyParams.Size(m)
}
func (m *GeometryRequest_SimplifyParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest_SimplifyParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest_SimplifyParams proto.InternalMessageInfo

func (m *GeometryRequest_SimplifyParams) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type GeometryResponse struct {
	Geometry             *GeometryData  `protobuf:"bytes,1,opt,name=geometry,proto3" json:"geometry,omitempty"`
	SpatialRelationship  bool           `protobuf:"varint,2,opt,name=spatial_relationship,json=spatialRelationship,proto3" json:"spatial_relationship,omitempty"`
	Measure              float64        `protobuf:"fixed64,3,opt,name=measure,proto3" json:"measure,omitempty"`
	RelateMap            map[int64]bool `protobuf:"bytes,4,rep,name=relate_map,json=relateMap,proto3" json:"relate_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Envelope             *EnvelopeData  `protobuf:"bytes,5,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GeometryResponse) Reset()         { *m = GeometryResponse{} }
func (m *GeometryResponse) String() string { return proto.CompactTextString(m) }
func (*GeometryResponse) ProtoMessage()    {}
func (*GeometryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{4}
}
func (m *GeometryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryResponse.Unmarshal(m, b)
}
func (m *GeometryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryResponse.Marshal(b, m, deterministic)
}
func (dst *GeometryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryResponse.Merge(dst, src)
}
func (m *GeometryResponse) XXX_Size() int {
	return xxx_messageInfo_GeometryResponse.Size(m)
}
func (m *GeometryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryResponse proto.InternalMessageInfo

func (m *GeometryResponse) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *GeometryResponse) GetSpatialRelationship() bool {
	if m != nil {
		return m.SpatialRelationship
	}
	return false
}

func (m *GeometryResponse) GetMeasure() float64 {
	if m != nil {
		return m.Measure
	}
	return 0
}

func (m *GeometryResponse) GetRelateMap() map[int64]bool {
	if m != nil {
		return m.RelateMap
	}
	return nil
}

func (m *GeometryResponse) GetEnvelope() *EnvelopeData {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type FileRequestChunk struct {
	NestedRequest        *GeometryRequest      `protobuf:"bytes,1,opt,name=nested_request,json=nestedRequest,proto3" json:"nested_request,omitempty"`
	ResultEncodingType   Encoding              `protobuf:"varint,2,opt,name=result_encoding_type,json=resultEncodingType,proto3,enum=epl.protobuf.Encoding" json:"result_encoding_type,omitempty"`
	InputSr              *SpatialReferenceData `protobuf:"bytes,3,opt,name=input_sr,json=inputSr,proto3" json:"input_sr,omitempty"`
	ResultSr             *SpatialReferenceData `protobuf:"bytes,5,opt,name=result_sr,json=resultSr,proto3" json:"result_sr,omitempty"`
	Data                 []byte                `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Size                 int64                 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Offset               int64                 `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	FileName             string                `protobuf:"bytes,9,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	IsLastChunk          bool                  `protobuf:"varint,10,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FileRequestChunk) Reset()         { *m = FileRequestChunk{} }
func (m *FileRequestChunk) String() string { return proto.CompactTextString(m) }
func (*FileRequestChunk) ProtoMessage()    {}
func (*FileRequestChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_b4722fa9ce50d56c, []int{5}
}
func (m *FileRequestChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRequestChunk.Unmarshal(m, b)
}
func (m *FileRequestChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRequestChunk.Marshal(b, m, deterministic)
}
func (dst *FileRequestChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRequestChunk.Merge(dst, src)
}
func (m *FileRequestChunk) XXX_Size() int {
	return xxx_messageInfo_FileRequestChunk.Size(m)
}
func (m *FileRequestChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRequestChunk.DiscardUnknown(m)
}

var xxx_messageInfo_FileRequestChunk proto.InternalMessageInfo

func (m *FileRequestChunk) GetNestedRequest() *GeometryRequest {
	if m != nil {
		return m.NestedRequest
	}
	return nil
}

func (m *FileRequestChunk) GetResultEncodingType() Encoding {
	if m != nil {
		return m.ResultEncodingType
	}
	return Encoding_UNKNOWN_ENCODING
}

func (m *FileRequestChunk) GetInputSr() *SpatialReferenceData {
	if m != nil {
		return m.InputSr
	}
	return nil
}

func (m *FileRequestChunk) GetResultSr() *SpatialReferenceData {
	if m != nil {
		return m.ResultSr
	}
	return nil
}

func (m *FileRequestChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileRequestChunk) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileRequestChunk) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FileRequestChunk) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileRequestChunk) GetIsLastChunk() bool {
	if m != nil {
		return m.IsLastChunk
	}
	return false
}

func init() {
	proto.RegisterType((*GeometryData)(nil), "epl.protobuf.GeometryData")
	proto.RegisterType((*SpatialReferenceData)(nil), "epl.protobuf.SpatialReferenceData")
	proto.RegisterType((*EnvelopeData)(nil), "epl.protobuf.EnvelopeData")
	proto.RegisterType((*GeometryRequest)(nil), "epl.protobuf.GeometryRequest")
	proto.RegisterType((*GeometryRequest_BufferParams)(nil), "epl.protobuf.GeometryRequest.BufferParams")
	proto.RegisterType((*GeometryRequest_GeodeticBufferParams)(nil), "epl.protobuf.GeometryRequest.GeodeticBufferParams")
	proto.RegisterType((*GeometryRequest_ConvexParams)(nil), "epl.protobuf.GeometryRequest.ConvexParams")
	proto.RegisterType((*GeometryRequest_RelateParams)(nil), "epl.protobuf.GeometryRequest.RelateParams")
	proto.RegisterType((*GeometryRequest_RandomPointsParams)(nil), "epl.protobuf.GeometryRequest.RandomPointsParams")
	proto.RegisterType((*GeometryRequest_GeneralizeParams)(nil), "epl.protobuf.GeometryRequest.GeneralizeParams")
	proto.RegisterType((*GeometryRequest_GeneralizeByAreaParams)(nil), "epl.protobuf.GeometryRequest.GeneralizeByAreaParams")
	proto.RegisterType((*GeometryRequest_IntersectionParams)(nil), "epl.protobuf.GeometryRequest.IntersectionParams")
	proto.RegisterType((*GeometryRequest_OffsetParams)(nil), "epl.protobuf.GeometryRequest.OffsetParams")
	proto.RegisterType((*GeometryRequest_CutParams)(nil), "epl.protobuf.GeometryRequest.CutParams")
	proto.RegisterType((*GeometryRequest_ClipParams)(nil), "epl.protobuf.GeometryRequest.ClipParams")
	proto.RegisterType((*GeometryRequest_DensifyParams)(nil), "epl.protobuf.GeometryRequest.DensifyParams")
	proto.RegisterType((*GeometryRequest_SimplifyParams)(nil), "epl.protobuf.GeometryRequest.SimplifyParams")
	proto.RegisterType((*GeometryResponse)(nil), "epl.protobuf.GeometryResponse")
	proto.RegisterMapType((map[int64]bool)(nil), "epl.protobuf.GeometryResponse.RelateMapEntry")
	proto.RegisterType((*FileRequestChunk)(nil), "epl.protobuf.FileRequestChunk")
	proto.RegisterEnum("epl.protobuf.Encoding", Encoding_name, Encoding_value)
	proto.RegisterEnum("epl.protobuf.OperatorType", OperatorType_name, OperatorType_value)
	proto.RegisterEnum("epl.protobuf.GeometryRequest_OffsetParams_OffsetJoinType", GeometryRequest_OffsetParams_OffsetJoinType_name, GeometryRequest_OffsetParams_OffsetJoinType_value)
	proto.RegisterEnum("epl.protobuf.FileRequestChunk_FileType", FileRequestChunk_FileType_name, FileRequestChunk_FileType_value)
}

func init() {
	proto.RegisterFile("epl/protobuf/geometry.proto", fileDescriptor_geometry_b4722fa9ce50d56c)
}

var fileDescriptor_geometry_b4722fa9ce50d56c = []byte{
	// 2208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4f, 0x77, 0xdb, 0xc6,
	0x11, 0x37, 0x29, 0x51, 0x22, 0x87, 0x7f, 0xb4, 0x5a, 0xd1, 0x32, 0x4d, 0x3f, 0x27, 0x8a, 0x12,
	0x3b, 0xaa, 0x1d, 0x4b, 0xad, 0x9a, 0xd7, 0x57, 0xb7, 0xc9, 0xcb, 0xa3, 0x48, 0x88, 0x82, 0x4d,
	0x01, 0xf4, 0x02, 0x92, 0xac, 0xf4, 0xf5, 0xe1, 0x41, 0xe0, 0x92, 0x82, 0x85, 0x7f, 0x01, 0x40,
	0x85, 0xf2, 0x17, 0xe8, 0xa9, 0x97, 0x5e, 0x7a, 0xe9, 0xa9, 0x9f, 0xa0, 0xc7, 0x9e, 0x7a, 0xec,
	0x97, 0xe8, 0x97, 0xe9, 0xdb, 0xc5, 0x82, 0x02, 0x25, 0xc7, 0xa6, 0x73, 0xcb, 0x6d, 0xe7, 0xb7,
	0x33, 0xbf, 0x9d, 0x99, 0x1d, 0x0c, 0x67, 0x09, 0x0f, 0x68, 0xe0, 0xec, 0x04, 0xa1, 0x1f, 0xfb,
	0x67, 0xe3, 0xe1, 0xce, 0x88, 0xfa, 0x2e, 0x8d, 0xc3, 0xab, 0x6d, 0x8e, 0xe0, 0x0a, 0x0d, 0x9c,
	0xed, 0x74, 0x73, 0xf3, 0xef, 0x79, 0xa8, 0x74, 0x85, 0x42, 0xc7, 0x8c, 0x4d, 0xfc, 0x29, 0x94,
	0x53, 0x03, 0xc3, 0x1e, 0x34, 0x72, 0x1b, 0xb9, 0xad, 0x05, 0x02, 0x29, 0x24, 0x0f, 0xf0, 0x43,
	0x80, 0x21, 0x35, 0xe3, 0x71, 0x48, 0xd9, 0x7e, 0x7e, 0x23, 0xb7, 0x55, 0x22, 0x25, 0x81, 0xc8,
	0x03, 0x8c, 0x60, 0xe1, 0xc7, 0x8b, 0xb8, 0xb1, 0xc0, 0x71, 0xb6, 0xc4, 0x0d, 0x58, 0x1e, 0x51,
	0xff, 0x4d, 0xe4, 0x7b, 0x8d, 0x45, 0x8e, 0xa6, 0x62, 0xa2, 0x7b, 0xd6, 0x28, 0x6c, 0xe4, 0xb6,
	0x2a, 0x4c, 0xf7, 0x8c, 0x91, 0xd3, 0x28, 0xb4, 0x8d, 0xe8, 0xdc, 0x0c, 0x68, 0x63, 0x89, 0x6f,
	0x94, 0x18, 0xa2, 0x31, 0x00, 0xef, 0x42, 0x3e, 0x0a, 0x1b, 0xcb, 0x1b, 0xb9, 0xad, 0xf2, 0xee,
	0xe6, 0x76, 0x36, 0x90, 0x6d, 0x2d, 0x30, 0x63, 0xdb, 0x74, 0x08, 0x1d, 0xd2, 0x90, 0x7a, 0x16,
	0x65, 0xc1, 0x90, 0x7c, 0x14, 0xe2, 0xdf, 0x41, 0x91, 0x7a, 0x97, 0xd4, 0xf1, 0x03, 0xda, 0x28,
	0x72, 0xcb, 0xe6, 0xac, 0xa5, 0x24, 0x76, 0xb9, 0xc5, 0x54, 0x77, 0x33, 0x86, 0xfa, 0xbb, 0x38,
	0x31, 0x86, 0xc5, 0x1f, 0x2f, 0x44, 0x66, 0x0a, 0x84, 0xaf, 0x71, 0x1d, 0x0a, 0x41, 0xe8, 0xbf,
	0xf9, 0x5a, 0xa4, 0x23, 0x11, 0xf0, 0x7d, 0x28, 0xf2, 0x60, 0xae, 0xf3, 0xb1, 0xcc, 0xe4, 0x93,
	0x8b, 0x18, 0xdf, 0x83, 0x65, 0x7f, 0x64, 0xf1, 0x9d, 0x24, 0x27, 0x4b, 0xfe, 0xc8, 0x3a, 0xb9,
	0x88, 0x37, 0xff, 0x96, 0x83, 0x4a, 0xd6, 0x21, 0x76, 0xdc, 0xc4, 0xb5, 0x3d, 0x7e, 0x5c, 0x8e,
	0xf0, 0x35, 0xc3, 0xae, 0x18, 0x96, 0x4f, 0xb0, 0x2b, 0x81, 0x4d, 0x5c, 0x73, 0xc2, 0x0f, 0xe2,
	0x7a, 0xe6, 0x24, 0xd1, 0x33, 0x27, 0xfc, 0x08, 0xae, 0x67, 0x4e, 0x44, 0x0a, 0x0b, 0x1f, 0x93,
	0xc2, 0xcd, 0xbf, 0x36, 0x60, 0x25, 0x2d, 0x12, 0x42, 0x7f, 0x18, 0xd3, 0x28, 0x66, 0x69, 0x4d,
	0x8b, 0x82, 0xfb, 0x76, 0x2b, 0xad, 0xd9, 0xaa, 0x22, 0x53, 0x5d, 0xfc, 0x1d, 0x54, 0x1d, 0x3a,
	0x8c, 0x8d, 0xa9, 0x71, 0xfe, 0x83, 0xc6, 0x15, 0x66, 0x90, 0x22, 0xf8, 0x00, 0xd0, 0xb4, 0x40,
	0xc3, 0xc4, 0x19, 0x1e, 0x74, 0x79, 0xf7, 0xe1, 0xbb, 0x39, 0x84, 0xc7, 0x64, 0x65, 0x74, 0x23,
	0x84, 0x57, 0x70, 0x77, 0xc6, 0x95, 0x29, 0xdd, 0xe2, 0x3c, 0x74, 0x6b, 0x59, 0xaf, 0x52, 0xca,
	0x16, 0xd4, 0x42, 0x7b, 0x74, 0x9e, 0x09, 0xaf, 0xf0, 0xc1, 0xf0, 0xaa, 0xdc, 0x62, 0x1a, 0x9f,
	0x06, 0xeb, 0xb3, 0x14, 0x53, 0xb7, 0x96, 0xe6, 0x71, 0xab, 0x3e, 0xc3, 0x96, 0xb9, 0x2d, 0x3f,
	0xa0, 0xa1, 0x19, 0xfb, 0xc9, 0xe7, 0x53, 0xbb, 0xe9, 0x91, 0x2a, 0x76, 0xf5, 0xab, 0x80, 0x92,
	0xa9, 0x2e, 0xfe, 0x0e, 0x56, 0x42, 0x1a, 0x8d, 0x9d, 0xd8, 0xa0, 0x9e, 0xe5, 0x0f, 0x6c, 0x6f,
	0xc4, 0xbf, 0xa1, 0xda, 0xee, 0xfa, 0xcd, 0x6f, 0x28, 0xd9, 0x25, 0xb5, 0x44, 0x3d, 0x95, 0xb1,
	0x04, 0x95, 0x84, 0xcc, 0xf6, 0x3d, 0x23, 0x0a, 0x1b, 0xa5, 0xb9, 0x0b, 0xaf, 0x3c, 0xb5, 0xd3,
	0x98, 0x1f, 0x25, 0xe1, 0x47, 0x14, 0x36, 0x60, 0x6e, 0x8e, 0x62, 0x62, 0xa4, 0x85, 0x58, 0x85,
	0xea, 0xd9, 0x78, 0x38, 0xa4, 0xa1, 0x11, 0x98, 0xa1, 0xe9, 0x46, 0x8d, 0x32, 0x27, 0x79, 0xf2,
	0xde, 0x64, 0x6e, 0xef, 0x71, 0x93, 0x3e, 0xb7, 0x20, 0x95, 0xb3, 0x8c, 0xc4, 0x08, 0x2d, 0xdf,
	0xbb, 0xa4, 0x93, 0x94, 0xb0, 0x32, 0x0f, 0x61, 0x9b, 0x9b, 0xa4, 0x84, 0x56, 0x46, 0x62, 0x84,
	0x21, 0x75, 0xcc, 0x98, 0xa6, 0x84, 0xd5, 0x79, 0x08, 0x09, 0x37, 0x49, 0x09, 0xc3, 0x8c, 0x84,
	0xcf, 0xa0, 0x1e, 0x9a, 0xde, 0xc0, 0x77, 0x8d, 0xc0, 0xb7, 0xbd, 0x38, 0x4a, 0x79, 0x6b, 0x9c,
	0xf7, 0xd7, 0x1f, 0xe0, 0xe5, 0x96, 0x7d, 0x6e, 0x28, 0xd8, 0x71, 0x78, 0x0b, 0xc3, 0x7f, 0x82,
	0xd5, 0x11, 0xf5, 0x68, 0x68, 0x3a, 0xf6, 0xdb, 0xa9, 0xe3, 0x2b, 0xfc, 0x80, 0xed, 0xf7, 0x1f,
	0xd0, 0x9d, 0x9a, 0x09, 0x7a, 0x34, 0xba, 0x81, 0x60, 0x13, 0xd6, 0x6c, 0x2f, 0xa6, 0x61, 0x44,
	0x2d, 0x5e, 0x3e, 0x82, 0x1e, 0xcd, 0xe3, 0xbf, 0x9c, 0x31, 0x4c, 0xfd, 0xb7, 0x6f, 0x61, 0x2c,
	0xe9, 0xfe, 0x70, 0x18, 0xd1, 0x38, 0x25, 0x5f, 0x9d, 0x27, 0xe9, 0x2a, 0x37, 0x49, 0x93, 0xee,
	0x67, 0x24, 0xbc, 0x0f, 0x60, 0x8d, 0xa7, 0x6c, 0x98, 0xb3, 0x7d, 0xf9, 0x81, 0x9a, 0x18, 0xa7,
	0x54, 0x25, 0x2b, 0x5d, 0x62, 0x19, 0xca, 0x96, 0x63, 0x07, 0x29, 0xd1, 0x1a, 0x27, 0xda, 0xfa,
	0x00, 0x91, 0x63, 0x07, 0x82, 0x09, 0xac, 0xe9, 0x1a, 0x13, 0xa8, 0x0d, 0xa8, 0x17, 0xd9, 0xc3,
	0xab, 0x94, 0xad, 0xce, 0xd9, 0x9e, 0xbe, 0x9f, 0xad, 0x93, 0xd8, 0x08, 0xc2, 0xea, 0x20, 0x2b,
	0xe2, 0x23, 0x58, 0x89, 0x6c, 0x37, 0x70, 0x32, 0xa4, 0x77, 0x39, 0xe9, 0x57, 0xef, 0x27, 0xd5,
	0x84, 0x91, 0x60, 0xad, 0x45, 0x33, 0x32, 0xf6, 0xe1, 0x7e, 0xa6, 0x9c, 0xce, 0xae, 0x0c, 0x33,
	0xa4, 0x66, 0x7a, 0xc0, 0x3a, 0x3f, 0xe0, 0xeb, 0x79, 0xcb, 0x6a, 0xef, 0xaa, 0x15, 0x52, 0x53,
	0x1c, 0xb4, 0x3e, 0x7a, 0x27, 0xde, 0xfc, 0x57, 0x0e, 0x2a, 0xd9, 0x8f, 0x1c, 0x37, 0xa1, 0x38,
	0xb0, 0xa3, 0xd8, 0xf4, 0x2c, 0x2a, 0x7e, 0x72, 0xa7, 0x32, 0xfe, 0x1c, 0xaa, 0xae, 0x39, 0x31,
	0x06, 0xf4, 0xd2, 0xe6, 0x7d, 0x49, 0xfc, 0xfe, 0x56, 0x5c, 0x73, 0xd2, 0x49, 0x31, 0xfc, 0x19,
	0x54, 0xc6, 0x1e, 0xab, 0xd6, 0xa4, 0xf5, 0xf0, 0x9f, 0xa6, 0x22, 0x29, 0x73, 0x8c, 0x70, 0x08,
	0x7f, 0x03, 0x0f, 0x18, 0xcf, 0x25, 0x0d, 0x63, 0xdb, 0xa2, 0x91, 0x61, 0x7b, 0xc6, 0x70, 0xec,
	0x38, 0x86, 0x65, 0x87, 0x96, 0x43, 0xf9, 0xaf, 0x4f, 0x81, 0xdc, 0x73, 0xcd, 0xc9, 0xb1, 0xd0,
	0x90, 0xbd, 0xfd, 0xb1, 0xe3, 0xb4, 0xf9, 0x76, 0xf3, 0xdf, 0x39, 0xa8, 0x77, 0xa9, 0x3f, 0xa0,
	0xb1, 0x6d, 0xfd, 0xc2, 0x5c, 0xff, 0x02, 0x2a, 0xd9, 0x06, 0xc8, 0xc6, 0x26, 0x97, 0x86, 0xa3,
	0xc4, 0xdd, 0x22, 0x49, 0x84, 0xe6, 0x23, 0xa8, 0x64, 0xbb, 0x1a, 0xbe, 0x0b, 0x4b, 0x03, 0x6a,
	0x3c, 0xb7, 0x5d, 0xae, 0x56, 0x22, 0x85, 0x01, 0x7d, 0x6e, 0xbb, 0xcd, 0x53, 0xc0, 0xb7, 0x9b,
	0x14, 0xde, 0x81, 0x7a, 0xda, 0xed, 0x68, 0x68, 0x44, 0x3f, 0x8c, 0xcd, 0x90, 0x1a, 0x17, 0xae,
	0x48, 0xc8, 0x6a, 0xb2, 0xd7, 0xa7, 0xa1, 0xc6, 0x77, 0x5e, 0xba, 0x6c, 0x46, 0x8a, 0x28, 0x4d,
	0x06, 0xd9, 0x05, 0xc2, 0xd7, 0xcd, 0x21, 0xa0, 0x9b, 0xed, 0xe9, 0x76, 0x06, 0x73, 0xef, 0xc8,
	0xe0, 0x33, 0xc0, 0x21, 0x75, 0xfd, 0x4b, 0x6a, 0x0c, 0x68, 0x52, 0x71, 0x31, 0x8d, 0x38, 0x75,
	0x91, 0xac, 0x26, 0x3b, 0x9d, 0xeb, 0x8d, 0xe6, 0x3f, 0x72, 0xb0, 0xfe, 0xee, 0x82, 0xc5, 0x4f,
	0x61, 0x35, 0xa0, 0xa1, 0x45, 0xbd, 0xd8, 0x08, 0xe9, 0x60, 0x6c, 0x65, 0x8e, 0x44, 0x62, 0x83,
	0xa4, 0xf8, 0x47, 0x1e, 0x8b, 0x1f, 0xc3, 0x0a, 0x0b, 0x85, 0xe7, 0xc2, 0xb0, 0xfc, 0xb1, 0x97,
	0x5c, 0x75, 0x81, 0xb0, 0x08, 0x79, 0x36, 0xdb, 0x0c, 0x6c, 0xfe, 0x11, 0xf0, 0xed, 0x36, 0x8a,
	0x1f, 0x41, 0x6d, 0x60, 0xbb, 0xac, 0x1b, 0xf8, 0x9e, 0xe1, 0x9a, 0xd1, 0x85, 0x98, 0x84, 0xab,
	0x53, 0xf4, 0xd0, 0x8c, 0x2e, 0x9a, 0x7f, 0xc9, 0x43, 0x25, 0xdb, 0x27, 0xdf, 0x5b, 0x9e, 0xc7,
	0x50, 0x7a, 0xe3, 0xdb, 0x9e, 0x11, 0x5f, 0x05, 0x94, 0xfb, 0x5d, 0xdb, 0x7d, 0x3e, 0x7f, 0x0b,
	0x16, 0xc2, 0x0b, 0xdf, 0xf6, 0x92, 0xf1, 0xe5, 0x8d, 0x58, 0xb1, 0xc7, 0xcc, 0x19, 0xbd, 0xa4,
	0x8e, 0xc1, 0x07, 0x09, 0x31, 0x1b, 0x03, 0x87, 0x08, 0x43, 0xd8, 0xad, 0x0e, 0x1d, 0x33, 0x8e,
	0xa9, 0x67, 0xd0, 0x30, 0xf4, 0x43, 0x31, 0x2a, 0x57, 0x04, 0x28, 0x31, 0x6c, 0xf3, 0x5b, 0xa8,
	0xcd, 0x9e, 0x80, 0x4b, 0x50, 0x20, 0xea, 0x91, 0xd2, 0x41, 0x77, 0xd8, 0x72, 0x4f, 0x3a, 0x96,
	0x7a, 0x28, 0xc7, 0x96, 0x87, 0xb2, 0x2e, 0x11, 0x94, 0xc7, 0x00, 0x4b, 0xda, 0xab, 0xa3, 0x16,
	0x91, 0xd0, 0x42, 0x73, 0x17, 0x4a, 0xd3, 0x16, 0xcf, 0xb2, 0x67, 0xf9, 0x5e, 0x64, 0x0f, 0x68,
	0x68, 0xc4, 0xfe, 0xd8, 0x3a, 0x17, 0xb5, 0x5f, 0x4d, 0x51, 0x9d, 0x81, 0xcd, 0x0e, 0xc0, 0x75,
	0x37, 0x9f, 0x79, 0xc2, 0xe4, 0xe6, 0x7f, 0xc2, 0x34, 0xb7, 0xa1, 0x3a, 0xd3, 0xc5, 0xd9, 0xf3,
	0x8a, 0xdd, 0xbc, 0x43, 0xbd, 0x51, 0x7c, 0x2e, 0x6e, 0xa1, 0xe4, 0x9a, 0x93, 0x1e, 0x07, 0x9a,
	0x8f, 0xa1, 0x36, 0xdb, 0xa0, 0xd9, 0x17, 0x3a, 0xf4, 0x43, 0x6b, 0xfa, 0x85, 0x72, 0x61, 0xf3,
	0x7f, 0x79, 0xf6, 0x81, 0xa4, 0x17, 0x12, 0x05, 0xbe, 0x17, 0xd1, 0x9f, 0xfd, 0x20, 0xf8, 0x0d,
	0xd4, 0xa3, 0x64, 0x76, 0x33, 0xf8, 0xf8, 0x62, 0xfb, 0x5e, 0x74, 0x6e, 0x07, 0xa2, 0x7c, 0xd7,
	0xa2, 0x74, 0xae, 0xbb, 0xde, 0x62, 0x2f, 0x4a, 0x97, 0x9a, 0xd1, 0x38, 0xa4, 0xe2, 0x4a, 0x53,
	0x11, 0xf7, 0x00, 0xc4, 0x10, 0xe5, 0x9a, 0x41, 0x63, 0x71, 0x63, 0x61, 0xab, 0xbc, 0xfb, 0xec,
	0xa7, 0x2a, 0x29, 0x71, 0x5c, 0x8c, 0x50, 0x87, 0x66, 0x20, 0x79, 0x0c, 0x2e, 0x85, 0xa9, 0x3c,
	0x93, 0xf7, 0xc2, 0x47, 0xe4, 0xfd, 0x1b, 0xa8, 0xcd, 0x92, 0xb2, 0x97, 0xee, 0x05, 0xbd, 0x12,
	0xaf, 0x69, 0xb6, 0x64, 0x99, 0xbd, 0x34, 0x9d, 0x31, 0x15, 0x71, 0x26, 0xc2, 0x1f, 0xf2, 0xbf,
	0xcf, 0x6d, 0xfe, 0x67, 0x01, 0xd0, 0xbe, 0xed, 0x50, 0x51, 0xea, 0xed, 0xf3, 0xb1, 0x77, 0x81,
	0x3b, 0x50, 0xf3, 0x68, 0x14, 0xd3, 0xc1, 0xf4, 0x35, 0x90, 0x9b, 0xe7, 0x35, 0x50, 0x4d, 0x8c,
	0xd2, 0x67, 0xc0, 0x01, 0xd4, 0x6f, 0x8c, 0xf3, 0xd9, 0x4f, 0xee, 0xa7, 0x66, 0x7a, 0x3c, 0x3b,
	0xd3, 0xf3, 0x2f, 0xe0, 0x5b, 0x28, 0xda, 0x5e, 0x30, 0xe6, 0xf3, 0xf8, 0xc2, 0xdc, 0xf3, 0xf8,
	0x32, 0xb7, 0xb9, 0x39, 0xcf, 0x17, 0x7e, 0xc6, 0x3c, 0x8f, 0x61, 0x71, 0x60, 0xc6, 0xa6, 0xf8,
	0x8b, 0x80, 0xaf, 0x79, 0x2b, 0xb7, 0xdf, 0x52, 0xfe, 0xc0, 0x61, 0xad, 0xdc, 0x7e, 0x4b, 0xf1,
	0x3a, 0x2c, 0x25, 0xf3, 0x19, 0x7f, 0xb7, 0x2c, 0x10, 0x21, 0xe1, 0x07, 0x50, 0x1a, 0xda, 0x0e,
	0x35, 0x3c, 0xd3, 0xa5, 0xfc, 0x51, 0x52, 0x22, 0x45, 0x06, 0x28, 0xa6, 0x4b, 0xf1, 0x26, 0x54,
	0xed, 0xc8, 0x70, 0xcc, 0x28, 0x36, 0x2c, 0x96, 0x7d, 0xfe, 0xe2, 0x28, 0x92, 0xb2, 0x1d, 0xf5,
	0x4c, 0x71, 0x21, 0x9b, 0xf7, 0xa1, 0xc8, 0x2e, 0x89, 0x27, 0xa3, 0x0a, 0x25, 0xed, 0xa0, 0xd5,
	0x97, 0xf6, 0xe5, 0x9e, 0x84, 0xee, 0x3c, 0xf9, 0x33, 0x14, 0xa7, 0xef, 0x9f, 0x3a, 0xa0, 0x23,
	0xe5, 0xa5, 0xa2, 0x9e, 0x28, 0x86, 0xa4, 0xb4, 0xd5, 0x8e, 0xac, 0x74, 0xd1, 0x1d, 0xbc, 0x0c,
	0x0b, 0x27, 0x2f, 0xf7, 0x50, 0x2e, 0x59, 0xe8, 0x28, 0x8f, 0xcb, 0xb0, 0xdc, 0x95, 0xd4, 0x17,
	0x9a, 0xaa, 0xa0, 0x05, 0x5c, 0x03, 0x90, 0x34, 0x22, 0x1b, 0x9c, 0x14, 0x2d, 0xe2, 0x0a, 0x14,
	0x25, 0xe5, 0x58, 0xea, 0xa9, 0x7d, 0x09, 0x15, 0x9e, 0xfc, 0x77, 0x09, 0x2a, 0xd9, 0xe7, 0x5a,
	0xf6, 0x0c, 0xb5, 0x2f, 0x91, 0x96, 0xae, 0x12, 0x74, 0x87, 0x31, 0xf6, 0x89, 0xfa, 0x42, 0x6a,
	0xeb, 0x28, 0x87, 0x31, 0xd4, 0xa4, 0xd7, 0x7d, 0x95, 0xe8, 0x86, 0xae, 0x1a, 0xfc, 0x94, 0x3c,
	0x33, 0x93, 0x0f, 0x39, 0xb6, 0x4f, 0xd4, 0x43, 0x43, 0x9c, 0xdd, 0x80, 0xfa, 0xb5, 0xe6, 0x8c,
	0x17, 0x4d, 0x58, 0xcf, 0xea, 0x67, 0xf6, 0x0a, 0xac, 0xf5, 0x1d, 0x29, 0xb2, 0xaa, 0xa0, 0x25,
	0xe6, 0x7c, 0x47, 0xde, 0xdf, 0x97, 0x88, 0xa4, 0xb4, 0x25, 0xb4, 0x8c, 0x11, 0x54, 0xfa, 0x44,
	0x7d, 0x2d, 0x1f, 0xca, 0xfa, 0xa9, 0xb1, 0xdb, 0x41, 0x45, 0xd6, 0x1c, 0x89, 0xd4, 0x6b, 0xe9,
	0x12, 0x2a, 0xb1, 0xb5, 0xf4, 0xea, 0xa8, 0xd5, 0xd3, 0x10, 0xb0, 0x30, 0x3b, 0xb2, 0xf6, 0x42,
	0x95, 0x15, 0x1d, 0x95, 0x19, 0x8f, 0xac, 0xe8, 0x12, 0xd1, 0xa4, 0xb6, 0xae, 0xa1, 0x0a, 0xd3,
	0x3c, 0x91, 0xf5, 0x03, 0x59, 0x41, 0x55, 0xa6, 0xd9, 0x56, 0x15, 0xbd, 0x25, 0x2b, 0x1a, 0xaa,
	0xb1, 0x48, 0xdb, 0x44, 0xd5, 0x34, 0x49, 0x43, 0x2b, 0x4c, 0xd0, 0xd5, 0xa3, 0xf6, 0x81, 0xa4,
	0x21, 0xc4, 0xf4, 0xd4, 0x63, 0x89, 0xf4, 0x5a, 0x7d, 0x0d, 0xad, 0x32, 0x86, 0xbd, 0x23, 0xe6,
	0x19, 0xc2, 0xe2, 0x2c, 0xbd, 0xc5, 0x7c, 0x5c, 0x63, 0x3e, 0x4e, 0xcf, 0x62, 0x51, 0xd4, 0x71,
	0x11, 0x16, 0xdb, 0x3d, 0xb9, 0x8f, 0xee, 0xb2, 0x2b, 0x6a, 0x1f, 0xe9, 0x68, 0x1d, 0xdf, 0x85,
	0xd5, 0x8e, 0xa4, 0x68, 0xf2, 0xfe, 0xa9, 0xb1, 0x77, 0x6a, 0xf4, 0x24, 0xa5, 0xab, 0x1f, 0xa0,
	0x7b, 0x2c, 0x8d, 0x19, 0xb8, 0xa5, 0x74, 0x7b, 0x12, 0x6a, 0xe0, 0x15, 0x28, 0xf7, 0x5a, 0x7b,
	0x52, 0xcf, 0xe8, 0xf3, 0x70, 0xee, 0xe3, 0x35, 0x58, 0xe9, 0x4a, 0x6a, 0x47, 0xd2, 0xe4, 0xb6,
	0x21, 0xbc, 0x68, 0xe2, 0x4f, 0xa0, 0xc9, 0x41, 0x5d, 0x6e, 0x1b, 0xb7, 0xb9, 0x1f, 0x4c, 0x8d,
	0xd8, 0xbe, 0x00, 0x1f, 0xe2, 0x55, 0xa8, 0x4e, 0xc1, 0x16, 0x91, 0x5a, 0xe8, 0x13, 0x16, 0x8d,
	0x26, 0x1f, 0xf6, 0x7b, 0xf2, 0xfe, 0x29, 0xfa, 0x94, 0x45, 0x93, 0x4a, 0x86, 0xda, 0x6d, 0xa3,
	0x0d, 0x16, 0xb9, 0xba, 0xbf, 0xaf, 0x49, 0x3a, 0xfa, 0x8c, 0xe5, 0xb5, 0x2b, 0x29, 0x12, 0x69,
	0xf5, 0xe4, 0xef, 0x25, 0xb4, 0x89, 0xd7, 0x01, 0x5f, 0xcb, 0x3c, 0x04, 0xc6, 0xf9, 0x39, 0x3b,
	0xe6, 0xba, 0x10, 0x58, 0xb5, 0x7e, 0xc1, 0xdc, 0xc9, 0x56, 0x00, 0x03, 0x1f, 0xdd, 0xd4, 0xd3,
	0xd1, 0xe3, 0xdb, 0x7a, 0x3a, 0xfa, 0x12, 0xdf, 0x83, 0xb5, 0x2c, 0x98, 0x56, 0xfb, 0x16, 0xcb,
	0xeb, 0x35, 0x41, 0x0a, 0xff, 0x8a, 0x15, 0xa2, 0x76, 0x7a, 0x78, 0x28, 0xe9, 0x84, 0x25, 0xe7,
	0xba, 0xa2, 0x9e, 0xb0, 0xdc, 0xb6, 0x55, 0xe5, 0x58, 0x7a, 0x6d, 0x1c, 0x1c, 0xf5, 0x7a, 0xe8,
	0x29, 0x0b, 0x7f, 0x8f, 0xfd, 0x1c, 0xb7, 0xc8, 0x29, 0xfa, 0x8a, 0x39, 0x44, 0x5a, 0x4a, 0x47,
	0x3d, 0x4c, 0x72, 0xaf, 0xa1, 0x67, 0xec, 0x8e, 0x24, 0xa5, 0xdd, 0x53, 0x35, 0x59, 0xe9, 0x1a,
	0x6d, 0x99, 0xb4, 0x7b, 0x12, 0xda, 0xde, 0x3b, 0x01, 0x64, 0xf9, 0xee, 0x4c, 0xdb, 0xd9, 0xab,
	0xa6, 0x1d, 0xb4, 0xcf, 0x90, 0x7e, 0xee, 0xfb, 0xa7, 0x23, 0x3b, 0x3e, 0x1f, 0x9f, 0x6d, 0x5b,
	0xbe, 0xbb, 0x33, 0xa2, 0xfe, 0xb3, 0x51, 0x18, 0x58, 0x3b, 0x66, 0x60, 0xef, 0x8c, 0x7c, 0xc7,
	0xf4, 0x46, 0x3b, 0xd9, 0xbf, 0x5a, 0xff, 0x99, 0x5f, 0xec, 0x1e, 0xf6, 0xf7, 0xce, 0x96, 0x38,
	0xf0, 0xdb, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x60, 0xdb, 0x2c, 0xa6, 0x88, 0x15, 0x00, 0x00,
}
