// Code generated by protoc-gen-go. DO NOT EDIT.
// source: epl/protobuf/geometry.proto

package protobuf // import "github.com/geo-grpc/api/golang/epl/protobuf"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// type of geometry operators
type GeometryEncodingType int32

const (
	GeometryEncodingType_unknown       GeometryEncodingType = 0
	GeometryEncodingType_wkb           GeometryEncodingType = 1
	GeometryEncodingType_wkt           GeometryEncodingType = 2
	GeometryEncodingType_geojson       GeometryEncodingType = 3
	GeometryEncodingType_esrishape     GeometryEncodingType = 4
	GeometryEncodingType_envelope_type GeometryEncodingType = 5
)

var GeometryEncodingType_name = map[int32]string{
	0: "unknown",
	1: "wkb",
	2: "wkt",
	3: "geojson",
	4: "esrishape",
	5: "envelope_type",
}
var GeometryEncodingType_value = map[string]int32{
	"unknown":       0,
	"wkb":           1,
	"wkt":           2,
	"geojson":       3,
	"esrishape":     4,
	"envelope_type": 5,
}

func (x GeometryEncodingType) String() string {
	return proto.EnumName(GeometryEncodingType_name, int32(x))
}
func (GeometryEncodingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{0}
}

//
// type of geometry operators
type ServiceOperatorType int32

const (
	ServiceOperatorType_Project                   ServiceOperatorType = 0
	ServiceOperatorType_ExportToJson              ServiceOperatorType = 1
	ServiceOperatorType_ImportFromJson            ServiceOperatorType = 2
	ServiceOperatorType_ImportMapGeometryFromJson ServiceOperatorType = 3
	ServiceOperatorType_ExportToESRIShape         ServiceOperatorType = 4
	ServiceOperatorType_ImportFromESRIShape       ServiceOperatorType = 5
	// Union = 6; // union two or more geometries
	ServiceOperatorType_Difference              ServiceOperatorType = 7
	ServiceOperatorType_Proximity2D             ServiceOperatorType = 8
	ServiceOperatorType_Relate                  ServiceOperatorType = 9
	ServiceOperatorType_Equals                  ServiceOperatorType = 10
	ServiceOperatorType_Disjoint                ServiceOperatorType = 11
	ServiceOperatorType_Intersects              ServiceOperatorType = 12
	ServiceOperatorType_Within                  ServiceOperatorType = 13
	ServiceOperatorType_Contains                ServiceOperatorType = 14
	ServiceOperatorType_Crosses                 ServiceOperatorType = 15
	ServiceOperatorType_Touches                 ServiceOperatorType = 16
	ServiceOperatorType_Overlaps                ServiceOperatorType = 17
	ServiceOperatorType_Buffer                  ServiceOperatorType = 18
	ServiceOperatorType_Distance                ServiceOperatorType = 19
	ServiceOperatorType_Intersection            ServiceOperatorType = 20
	ServiceOperatorType_Clip                    ServiceOperatorType = 21
	ServiceOperatorType_Cut                     ServiceOperatorType = 22
	ServiceOperatorType_DensifyByLength         ServiceOperatorType = 23
	ServiceOperatorType_GeodesicBuffer          ServiceOperatorType = 26
	ServiceOperatorType_GeodeticDensifyByLength ServiceOperatorType = 27
	// ShapePreservingDensify = 28;
	ServiceOperatorType_GeodeticLength      ServiceOperatorType = 29
	ServiceOperatorType_Simplify            ServiceOperatorType = 31
	ServiceOperatorType_SimplifyOGC         ServiceOperatorType = 32
	ServiceOperatorType_Offset              ServiceOperatorType = 33
	ServiceOperatorType_Generalize          ServiceOperatorType = 34
	ServiceOperatorType_GeneralizeByArea    ServiceOperatorType = 35
	ServiceOperatorType_ExportToWkb         ServiceOperatorType = 36
	ServiceOperatorType_ImportFromWkb       ServiceOperatorType = 37
	ServiceOperatorType_ExportToWkt         ServiceOperatorType = 38
	ServiceOperatorType_ImportFromWkt       ServiceOperatorType = 39
	ServiceOperatorType_ImportFromGeoJson   ServiceOperatorType = 40
	ServiceOperatorType_ExportToGeoJson     ServiceOperatorType = 41
	ServiceOperatorType_SymmetricDifference ServiceOperatorType = 42
	ServiceOperatorType_ConvexHull          ServiceOperatorType = 43
	ServiceOperatorType_Boundary            ServiceOperatorType = 44
	ServiceOperatorType_RandomPoints        ServiceOperatorType = 45
	ServiceOperatorType_EnclosingCircle     ServiceOperatorType = 46
)

var ServiceOperatorType_name = map[int32]string{
	0:  "Project",
	1:  "ExportToJson",
	2:  "ImportFromJson",
	3:  "ImportMapGeometryFromJson",
	4:  "ExportToESRIShape",
	5:  "ImportFromESRIShape",
	7:  "Difference",
	8:  "Proximity2D",
	9:  "Relate",
	10: "Equals",
	11: "Disjoint",
	12: "Intersects",
	13: "Within",
	14: "Contains",
	15: "Crosses",
	16: "Touches",
	17: "Overlaps",
	18: "Buffer",
	19: "Distance",
	20: "Intersection",
	21: "Clip",
	22: "Cut",
	23: "DensifyByLength",
	26: "GeodesicBuffer",
	27: "GeodeticDensifyByLength",
	29: "GeodeticLength",
	31: "Simplify",
	32: "SimplifyOGC",
	33: "Offset",
	34: "Generalize",
	35: "GeneralizeByArea",
	36: "ExportToWkb",
	37: "ImportFromWkb",
	38: "ExportToWkt",
	39: "ImportFromWkt",
	40: "ImportFromGeoJson",
	41: "ExportToGeoJson",
	42: "SymmetricDifference",
	43: "ConvexHull",
	44: "Boundary",
	45: "RandomPoints",
	46: "EnclosingCircle",
}
var ServiceOperatorType_value = map[string]int32{
	"Project":                   0,
	"ExportToJson":              1,
	"ImportFromJson":            2,
	"ImportMapGeometryFromJson": 3,
	"ExportToESRIShape":         4,
	"ImportFromESRIShape":       5,
	"Difference":                7,
	"Proximity2D":               8,
	"Relate":                    9,
	"Equals":                    10,
	"Disjoint":                  11,
	"Intersects":                12,
	"Within":                    13,
	"Contains":                  14,
	"Crosses":                   15,
	"Touches":                   16,
	"Overlaps":                  17,
	"Buffer":                    18,
	"Distance":                  19,
	"Intersection":              20,
	"Clip":                      21,
	"Cut":                       22,
	"DensifyByLength":           23,
	"GeodesicBuffer":            26,
	"GeodeticDensifyByLength":   27,
	"GeodeticLength":            29,
	"Simplify":                  31,
	"SimplifyOGC":               32,
	"Offset":                    33,
	"Generalize":                34,
	"GeneralizeByArea":          35,
	"ExportToWkb":               36,
	"ImportFromWkb":             37,
	"ExportToWkt":               38,
	"ImportFromWkt":             39,
	"ImportFromGeoJson":         40,
	"ExportToGeoJson":           41,
	"SymmetricDifference":       42,
	"ConvexHull":                43,
	"Boundary":                  44,
	"RandomPoints":              45,
	"EnclosingCircle":           46,
}

func (x ServiceOperatorType) String() string {
	return proto.EnumName(ServiceOperatorType_name, int32(x))
}
func (ServiceOperatorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{1}
}

type OffsetJoinType int32

const (
	OffsetJoinType_Round  OffsetJoinType = 0
	OffsetJoinType_Bevel  OffsetJoinType = 1
	OffsetJoinType_Miter  OffsetJoinType = 2
	OffsetJoinType_Square OffsetJoinType = 3
)

var OffsetJoinType_name = map[int32]string{
	0: "Round",
	1: "Bevel",
	2: "Miter",
	3: "Square",
}
var OffsetJoinType_value = map[string]int32{
	"Round":  0,
	"Bevel":  1,
	"Miter":  2,
	"Square": 3,
}

func (x OffsetJoinType) String() string {
	return proto.EnumName(OffsetJoinType_name, int32(x))
}
func (OffsetJoinType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{2}
}

type FileType int32

const (
	FileType_Shapefile FileType = 0
)

var FileType_name = map[int32]string{
	0: "Shapefile",
}
var FileType_value = map[string]int32{
	"Shapefile": 0,
}

func (x FileType) String() string {
	return proto.EnumName(FileType_name, int32(x))
}
func (FileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{3}
}

type GeometryData struct {
	GeometryId int64  `protobuf:"varint,1,opt,name=geometry_id,json=geometryId,proto3" json:"geometry_id,omitempty"`
	FeatureId  string `protobuf:"bytes,2,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	// oneof block
	Wkt                  string                `protobuf:"bytes,3,opt,name=wkt,proto3" json:"wkt,omitempty"`
	Geojson              string                `protobuf:"bytes,4,opt,name=geojson,proto3" json:"geojson,omitempty"`
	Wkb                  []byte                `protobuf:"bytes,5,opt,name=wkb,proto3" json:"wkb,omitempty"`
	EsriShape            []byte                `protobuf:"bytes,6,opt,name=esri_shape,json=esriShape,proto3" json:"esri_shape,omitempty"`
	SpatialReference     *SpatialReferenceData `protobuf:"bytes,7,opt,name=spatial_reference,json=spatialReference,proto3" json:"spatial_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GeometryData) Reset()         { *m = GeometryData{} }
func (m *GeometryData) String() string { return proto.CompactTextString(m) }
func (*GeometryData) ProtoMessage()    {}
func (*GeometryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{0}
}
func (m *GeometryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryData.Unmarshal(m, b)
}
func (m *GeometryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryData.Marshal(b, m, deterministic)
}
func (dst *GeometryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryData.Merge(dst, src)
}
func (m *GeometryData) XXX_Size() int {
	return xxx_messageInfo_GeometryData.Size(m)
}
func (m *GeometryData) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryData.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryData proto.InternalMessageInfo

func (m *GeometryData) GetGeometryId() int64 {
	if m != nil {
		return m.GeometryId
	}
	return 0
}

func (m *GeometryData) GetFeatureId() string {
	if m != nil {
		return m.FeatureId
	}
	return ""
}

func (m *GeometryData) GetWkt() string {
	if m != nil {
		return m.Wkt
	}
	return ""
}

func (m *GeometryData) GetGeojson() string {
	if m != nil {
		return m.Geojson
	}
	return ""
}

func (m *GeometryData) GetWkb() []byte {
	if m != nil {
		return m.Wkb
	}
	return nil
}

func (m *GeometryData) GetEsriShape() []byte {
	if m != nil {
		return m.EsriShape
	}
	return nil
}

func (m *GeometryData) GetSpatialReference() *SpatialReferenceData {
	if m != nil {
		return m.SpatialReference
	}
	return nil
}

type SpatialReferenceData struct {
	Proj4 string `protobuf:"bytes,1,opt,name=proj4,proto3" json:"proj4,omitempty"`
	// String that is a wkt, wkid, esri_wkt, or a proj4 string
	EsriWkt string `protobuf:"bytes,2,opt,name=esri_wkt,json=esriWkt,proto3" json:"esri_wkt,omitempty"`
	// type is either 'wkid', 'esri_wkt'
	Wkid                 int32    `protobuf:"varint,3,opt,name=wkid,proto3" json:"wkid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpatialReferenceData) Reset()         { *m = SpatialReferenceData{} }
func (m *SpatialReferenceData) String() string { return proto.CompactTextString(m) }
func (*SpatialReferenceData) ProtoMessage()    {}
func (*SpatialReferenceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{1}
}
func (m *SpatialReferenceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpatialReferenceData.Unmarshal(m, b)
}
func (m *SpatialReferenceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpatialReferenceData.Marshal(b, m, deterministic)
}
func (dst *SpatialReferenceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpatialReferenceData.Merge(dst, src)
}
func (m *SpatialReferenceData) XXX_Size() int {
	return xxx_messageInfo_SpatialReferenceData.Size(m)
}
func (m *SpatialReferenceData) XXX_DiscardUnknown() {
	xxx_messageInfo_SpatialReferenceData.DiscardUnknown(m)
}

var xxx_messageInfo_SpatialReferenceData proto.InternalMessageInfo

func (m *SpatialReferenceData) GetProj4() string {
	if m != nil {
		return m.Proj4
	}
	return ""
}

func (m *SpatialReferenceData) GetEsriWkt() string {
	if m != nil {
		return m.EsriWkt
	}
	return ""
}

func (m *SpatialReferenceData) GetWkid() int32 {
	if m != nil {
		return m.Wkid
	}
	return 0
}

type GeometryResponse struct {
	// oneof
	Geometry             *GeometryData  `protobuf:"bytes,1,opt,name=geometry,proto3" json:"geometry,omitempty"`
	SpatialRelationship  bool           `protobuf:"varint,2,opt,name=spatial_relationship,json=spatialRelationship,proto3" json:"spatial_relationship,omitempty"`
	Measure              float64        `protobuf:"fixed64,3,opt,name=measure,proto3" json:"measure,omitempty"`
	RelateMap            map[int64]bool `protobuf:"bytes,4,rep,name=relate_map,json=relateMap,proto3" json:"relate_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Envelope             *EnvelopeData  `protobuf:"bytes,5,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GeometryResponse) Reset()         { *m = GeometryResponse{} }
func (m *GeometryResponse) String() string { return proto.CompactTextString(m) }
func (*GeometryResponse) ProtoMessage()    {}
func (*GeometryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{2}
}
func (m *GeometryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryResponse.Unmarshal(m, b)
}
func (m *GeometryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryResponse.Marshal(b, m, deterministic)
}
func (dst *GeometryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryResponse.Merge(dst, src)
}
func (m *GeometryResponse) XXX_Size() int {
	return xxx_messageInfo_GeometryResponse.Size(m)
}
func (m *GeometryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryResponse proto.InternalMessageInfo

func (m *GeometryResponse) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *GeometryResponse) GetSpatialRelationship() bool {
	if m != nil {
		return m.SpatialRelationship
	}
	return false
}

func (m *GeometryResponse) GetMeasure() float64 {
	if m != nil {
		return m.Measure
	}
	return 0
}

func (m *GeometryResponse) GetRelateMap() map[int64]bool {
	if m != nil {
		return m.RelateMap
	}
	return nil
}

func (m *GeometryResponse) GetEnvelope() *EnvelopeData {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type FileRequestChunk struct {
	NestedRequest          *GeometryRequest      `protobuf:"bytes,1,opt,name=nested_request,json=nestedRequest,proto3" json:"nested_request,omitempty"`
	ResultsEncodingType    GeometryEncodingType  `protobuf:"varint,2,opt,name=results_encoding_type,json=resultsEncodingType,proto3,enum=epl.protobuf.GeometryEncodingType" json:"results_encoding_type,omitempty"`
	InputSpatialReference  *SpatialReferenceData `protobuf:"bytes,3,opt,name=input_spatial_reference,json=inputSpatialReference,proto3" json:"input_spatial_reference,omitempty"`
	ResultSpatialReference *SpatialReferenceData `protobuf:"bytes,5,opt,name=result_spatial_reference,json=resultSpatialReference,proto3" json:"result_spatial_reference,omitempty"`
	Data                   []byte                `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Size                   int64                 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Offset                 int64                 `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	FileName               string                `protobuf:"bytes,9,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	IsLastChunk            bool                  `protobuf:"varint,10,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *FileRequestChunk) Reset()         { *m = FileRequestChunk{} }
func (m *FileRequestChunk) String() string { return proto.CompactTextString(m) }
func (*FileRequestChunk) ProtoMessage()    {}
func (*FileRequestChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{3}
}
func (m *FileRequestChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRequestChunk.Unmarshal(m, b)
}
func (m *FileRequestChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRequestChunk.Marshal(b, m, deterministic)
}
func (dst *FileRequestChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRequestChunk.Merge(dst, src)
}
func (m *FileRequestChunk) XXX_Size() int {
	return xxx_messageInfo_FileRequestChunk.Size(m)
}
func (m *FileRequestChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRequestChunk.DiscardUnknown(m)
}

var xxx_messageInfo_FileRequestChunk proto.InternalMessageInfo

func (m *FileRequestChunk) GetNestedRequest() *GeometryRequest {
	if m != nil {
		return m.NestedRequest
	}
	return nil
}

func (m *FileRequestChunk) GetResultsEncodingType() GeometryEncodingType {
	if m != nil {
		return m.ResultsEncodingType
	}
	return GeometryEncodingType_unknown
}

func (m *FileRequestChunk) GetInputSpatialReference() *SpatialReferenceData {
	if m != nil {
		return m.InputSpatialReference
	}
	return nil
}

func (m *FileRequestChunk) GetResultSpatialReference() *SpatialReferenceData {
	if m != nil {
		return m.ResultSpatialReference
	}
	return nil
}

func (m *FileRequestChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileRequestChunk) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileRequestChunk) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FileRequestChunk) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileRequestChunk) GetIsLastChunk() bool {
	if m != nil {
		return m.IsLastChunk
	}
	return false
}

type BufferParams struct {
	Distance                float64  `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	MaxDeviation            float64  `protobuf:"fixed64,2,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	UnionResult             bool     `protobuf:"varint,3,opt,name=union_result,json=unionResult,proto3" json:"union_result,omitempty"`
	MaxVerticesInFullCircle int32    `protobuf:"varint,4,opt,name=max_vertices_in_full_circle,json=maxVerticesInFullCircle,proto3" json:"max_vertices_in_full_circle,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *BufferParams) Reset()         { *m = BufferParams{} }
func (m *BufferParams) String() string { return proto.CompactTextString(m) }
func (*BufferParams) ProtoMessage()    {}
func (*BufferParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{4}
}
func (m *BufferParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BufferParams.Unmarshal(m, b)
}
func (m *BufferParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BufferParams.Marshal(b, m, deterministic)
}
func (dst *BufferParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BufferParams.Merge(dst, src)
}
func (m *BufferParams) XXX_Size() int {
	return xxx_messageInfo_BufferParams.Size(m)
}
func (m *BufferParams) XXX_DiscardUnknown() {
	xxx_messageInfo_BufferParams.DiscardUnknown(m)
}

var xxx_messageInfo_BufferParams proto.InternalMessageInfo

func (m *BufferParams) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *BufferParams) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *BufferParams) GetUnionResult() bool {
	if m != nil {
		return m.UnionResult
	}
	return false
}

func (m *BufferParams) GetMaxVerticesInFullCircle() int32 {
	if m != nil {
		return m.MaxVerticesInFullCircle
	}
	return 0
}

type GeodeticBufferParams struct {
	Distance                float64  `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	MaxDeviation            float64  `protobuf:"fixed64,2,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	UnionResult             bool     `protobuf:"varint,3,opt,name=union_result,json=unionResult,proto3" json:"union_result,omitempty"`
	MaxVerticesInFullCircle int32    `protobuf:"varint,4,opt,name=max_vertices_in_full_circle,json=maxVerticesInFullCircle,proto3" json:"max_vertices_in_full_circle,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *GeodeticBufferParams) Reset()         { *m = GeodeticBufferParams{} }
func (m *GeodeticBufferParams) String() string { return proto.CompactTextString(m) }
func (*GeodeticBufferParams) ProtoMessage()    {}
func (*GeodeticBufferParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{5}
}
func (m *GeodeticBufferParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeodeticBufferParams.Unmarshal(m, b)
}
func (m *GeodeticBufferParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeodeticBufferParams.Marshal(b, m, deterministic)
}
func (dst *GeodeticBufferParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeodeticBufferParams.Merge(dst, src)
}
func (m *GeodeticBufferParams) XXX_Size() int {
	return xxx_messageInfo_GeodeticBufferParams.Size(m)
}
func (m *GeodeticBufferParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeodeticBufferParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeodeticBufferParams proto.InternalMessageInfo

func (m *GeodeticBufferParams) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *GeodeticBufferParams) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *GeodeticBufferParams) GetUnionResult() bool {
	if m != nil {
		return m.UnionResult
	}
	return false
}

func (m *GeodeticBufferParams) GetMaxVerticesInFullCircle() int32 {
	if m != nil {
		return m.MaxVerticesInFullCircle
	}
	return 0
}

type ConvexParams struct {
	Merge                bool     `protobuf:"varint,1,opt,name=merge,proto3" json:"merge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConvexParams) Reset()         { *m = ConvexParams{} }
func (m *ConvexParams) String() string { return proto.CompactTextString(m) }
func (*ConvexParams) ProtoMessage()    {}
func (*ConvexParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{6}
}
func (m *ConvexParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvexParams.Unmarshal(m, b)
}
func (m *ConvexParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvexParams.Marshal(b, m, deterministic)
}
func (dst *ConvexParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvexParams.Merge(dst, src)
}
func (m *ConvexParams) XXX_Size() int {
	return xxx_messageInfo_ConvexParams.Size(m)
}
func (m *ConvexParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvexParams.DiscardUnknown(m)
}

var xxx_messageInfo_ConvexParams proto.InternalMessageInfo

func (m *ConvexParams) GetMerge() bool {
	if m != nil {
		return m.Merge
	}
	return false
}

type RelateParams struct {
	De_9Im               string   `protobuf:"bytes,1,opt,name=de_9im,json=de9im,proto3" json:"de_9im,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelateParams) Reset()         { *m = RelateParams{} }
func (m *RelateParams) String() string { return proto.CompactTextString(m) }
func (*RelateParams) ProtoMessage()    {}
func (*RelateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{7}
}
func (m *RelateParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelateParams.Unmarshal(m, b)
}
func (m *RelateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelateParams.Marshal(b, m, deterministic)
}
func (dst *RelateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelateParams.Merge(dst, src)
}
func (m *RelateParams) XXX_Size() int {
	return xxx_messageInfo_RelateParams.Size(m)
}
func (m *RelateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_RelateParams.DiscardUnknown(m)
}

var xxx_messageInfo_RelateParams proto.InternalMessageInfo

func (m *RelateParams) GetDe_9Im() string {
	if m != nil {
		return m.De_9Im
	}
	return ""
}

type RandomPointsParams struct {
	PointsPerSquareKm    float64  `protobuf:"fixed64,1,opt,name=points_per_square_km,json=pointsPerSquareKm,proto3" json:"points_per_square_km,omitempty"`
	Seed                 int64    `protobuf:"varint,2,opt,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RandomPointsParams) Reset()         { *m = RandomPointsParams{} }
func (m *RandomPointsParams) String() string { return proto.CompactTextString(m) }
func (*RandomPointsParams) ProtoMessage()    {}
func (*RandomPointsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{8}
}
func (m *RandomPointsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandomPointsParams.Unmarshal(m, b)
}
func (m *RandomPointsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandomPointsParams.Marshal(b, m, deterministic)
}
func (dst *RandomPointsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomPointsParams.Merge(dst, src)
}
func (m *RandomPointsParams) XXX_Size() int {
	return xxx_messageInfo_RandomPointsParams.Size(m)
}
func (m *RandomPointsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomPointsParams.DiscardUnknown(m)
}

var xxx_messageInfo_RandomPointsParams proto.InternalMessageInfo

func (m *RandomPointsParams) GetPointsPerSquareKm() float64 {
	if m != nil {
		return m.PointsPerSquareKm
	}
	return 0
}

func (m *RandomPointsParams) GetSeed() int64 {
	if m != nil {
		return m.Seed
	}
	return 0
}

type GeneralizeParams struct {
	MaxDeviation         float64  `protobuf:"fixed64,1,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	RemoveDegenerates    bool     `protobuf:"varint,2,opt,name=remove_degenerates,json=removeDegenerates,proto3" json:"remove_degenerates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralizeParams) Reset()         { *m = GeneralizeParams{} }
func (m *GeneralizeParams) String() string { return proto.CompactTextString(m) }
func (*GeneralizeParams) ProtoMessage()    {}
func (*GeneralizeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{9}
}
func (m *GeneralizeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralizeParams.Unmarshal(m, b)
}
func (m *GeneralizeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralizeParams.Marshal(b, m, deterministic)
}
func (dst *GeneralizeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralizeParams.Merge(dst, src)
}
func (m *GeneralizeParams) XXX_Size() int {
	return xxx_messageInfo_GeneralizeParams.Size(m)
}
func (m *GeneralizeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralizeParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralizeParams proto.InternalMessageInfo

func (m *GeneralizeParams) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *GeneralizeParams) GetRemoveDegenerates() bool {
	if m != nil {
		return m.RemoveDegenerates
	}
	return false
}

type GeneralizeByAreaParams struct {
	PercentReduction     float64  `protobuf:"fixed64,1,opt,name=percent_reduction,json=percentReduction,proto3" json:"percent_reduction,omitempty"`
	RemoveDegenerates    bool     `protobuf:"varint,2,opt,name=remove_degenerates,json=removeDegenerates,proto3" json:"remove_degenerates,omitempty"`
	MaxPointCount        int32    `protobuf:"varint,3,opt,name=max_point_count,json=maxPointCount,proto3" json:"max_point_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralizeByAreaParams) Reset()         { *m = GeneralizeByAreaParams{} }
func (m *GeneralizeByAreaParams) String() string { return proto.CompactTextString(m) }
func (*GeneralizeByAreaParams) ProtoMessage()    {}
func (*GeneralizeByAreaParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{10}
}
func (m *GeneralizeByAreaParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralizeByAreaParams.Unmarshal(m, b)
}
func (m *GeneralizeByAreaParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralizeByAreaParams.Marshal(b, m, deterministic)
}
func (dst *GeneralizeByAreaParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralizeByAreaParams.Merge(dst, src)
}
func (m *GeneralizeByAreaParams) XXX_Size() int {
	return xxx_messageInfo_GeneralizeByAreaParams.Size(m)
}
func (m *GeneralizeByAreaParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralizeByAreaParams.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralizeByAreaParams proto.InternalMessageInfo

func (m *GeneralizeByAreaParams) GetPercentReduction() float64 {
	if m != nil {
		return m.PercentReduction
	}
	return 0
}

func (m *GeneralizeByAreaParams) GetRemoveDegenerates() bool {
	if m != nil {
		return m.RemoveDegenerates
	}
	return false
}

func (m *GeneralizeByAreaParams) GetMaxPointCount() int32 {
	if m != nil {
		return m.MaxPointCount
	}
	return 0
}

type IntersectionParams struct {
	DimensionMask        int32    `protobuf:"varint,1,opt,name=dimension_mask,json=dimensionMask,proto3" json:"dimension_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntersectionParams) Reset()         { *m = IntersectionParams{} }
func (m *IntersectionParams) String() string { return proto.CompactTextString(m) }
func (*IntersectionParams) ProtoMessage()    {}
func (*IntersectionParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{11}
}
func (m *IntersectionParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntersectionParams.Unmarshal(m, b)
}
func (m *IntersectionParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntersectionParams.Marshal(b, m, deterministic)
}
func (dst *IntersectionParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntersectionParams.Merge(dst, src)
}
func (m *IntersectionParams) XXX_Size() int {
	return xxx_messageInfo_IntersectionParams.Size(m)
}
func (m *IntersectionParams) XXX_DiscardUnknown() {
	xxx_messageInfo_IntersectionParams.DiscardUnknown(m)
}

var xxx_messageInfo_IntersectionParams proto.InternalMessageInfo

func (m *IntersectionParams) GetDimensionMask() int32 {
	if m != nil {
		return m.DimensionMask
	}
	return 0
}

type OffsetParams struct {
	Distance             float64        `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	JoinType             OffsetJoinType `protobuf:"varint,2,opt,name=join_type,json=joinType,proto3,enum=epl.protobuf.OffsetJoinType" json:"join_type,omitempty"`
	BevelRatio           float64        `protobuf:"fixed64,3,opt,name=bevel_ratio,json=bevelRatio,proto3" json:"bevel_ratio,omitempty"`
	FlattenError         float64        `protobuf:"fixed64,4,opt,name=flatten_error,json=flattenError,proto3" json:"flatten_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OffsetParams) Reset()         { *m = OffsetParams{} }
func (m *OffsetParams) String() string { return proto.CompactTextString(m) }
func (*OffsetParams) ProtoMessage()    {}
func (*OffsetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{12}
}
func (m *OffsetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OffsetParams.Unmarshal(m, b)
}
func (m *OffsetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OffsetParams.Marshal(b, m, deterministic)
}
func (dst *OffsetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OffsetParams.Merge(dst, src)
}
func (m *OffsetParams) XXX_Size() int {
	return xxx_messageInfo_OffsetParams.Size(m)
}
func (m *OffsetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_OffsetParams.DiscardUnknown(m)
}

var xxx_messageInfo_OffsetParams proto.InternalMessageInfo

func (m *OffsetParams) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *OffsetParams) GetJoinType() OffsetJoinType {
	if m != nil {
		return m.JoinType
	}
	return OffsetJoinType_Round
}

func (m *OffsetParams) GetBevelRatio() float64 {
	if m != nil {
		return m.BevelRatio
	}
	return 0
}

func (m *OffsetParams) GetFlattenError() float64 {
	if m != nil {
		return m.FlattenError
	}
	return 0
}

type CutParams struct {
	ConsiderTouch        bool     `protobuf:"varint,1,opt,name=consider_touch,json=considerTouch,proto3" json:"consider_touch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CutParams) Reset()         { *m = CutParams{} }
func (m *CutParams) String() string { return proto.CompactTextString(m) }
func (*CutParams) ProtoMessage()    {}
func (*CutParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{13}
}
func (m *CutParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CutParams.Unmarshal(m, b)
}
func (m *CutParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CutParams.Marshal(b, m, deterministic)
}
func (dst *CutParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CutParams.Merge(dst, src)
}
func (m *CutParams) XXX_Size() int {
	return xxx_messageInfo_CutParams.Size(m)
}
func (m *CutParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CutParams.DiscardUnknown(m)
}

var xxx_messageInfo_CutParams proto.InternalMessageInfo

func (m *CutParams) GetConsiderTouch() bool {
	if m != nil {
		return m.ConsiderTouch
	}
	return false
}

type ClipParams struct {
	Envelope             *EnvelopeData `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClipParams) Reset()         { *m = ClipParams{} }
func (m *ClipParams) String() string { return proto.CompactTextString(m) }
func (*ClipParams) ProtoMessage()    {}
func (*ClipParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{14}
}
func (m *ClipParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClipParams.Unmarshal(m, b)
}
func (m *ClipParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClipParams.Marshal(b, m, deterministic)
}
func (dst *ClipParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClipParams.Merge(dst, src)
}
func (m *ClipParams) XXX_Size() int {
	return xxx_messageInfo_ClipParams.Size(m)
}
func (m *ClipParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ClipParams.DiscardUnknown(m)
}

var xxx_messageInfo_ClipParams proto.InternalMessageInfo

func (m *ClipParams) GetEnvelope() *EnvelopeData {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type DensifyParams struct {
	MaxLength            float64  `protobuf:"fixed64,1,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DensifyParams) Reset()         { *m = DensifyParams{} }
func (m *DensifyParams) String() string { return proto.CompactTextString(m) }
func (*DensifyParams) ProtoMessage()    {}
func (*DensifyParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{15}
}
func (m *DensifyParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DensifyParams.Unmarshal(m, b)
}
func (m *DensifyParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DensifyParams.Marshal(b, m, deterministic)
}
func (dst *DensifyParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DensifyParams.Merge(dst, src)
}
func (m *DensifyParams) XXX_Size() int {
	return xxx_messageInfo_DensifyParams.Size(m)
}
func (m *DensifyParams) XXX_DiscardUnknown() {
	xxx_messageInfo_DensifyParams.DiscardUnknown(m)
}

var xxx_messageInfo_DensifyParams proto.InternalMessageInfo

func (m *DensifyParams) GetMaxLength() float64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

type SimplifyParams struct {
	Force                bool     `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimplifyParams) Reset()         { *m = SimplifyParams{} }
func (m *SimplifyParams) String() string { return proto.CompactTextString(m) }
func (*SimplifyParams) ProtoMessage()    {}
func (*SimplifyParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{16}
}
func (m *SimplifyParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimplifyParams.Unmarshal(m, b)
}
func (m *SimplifyParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimplifyParams.Marshal(b, m, deterministic)
}
func (dst *SimplifyParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimplifyParams.Merge(dst, src)
}
func (m *SimplifyParams) XXX_Size() int {
	return xxx_messageInfo_SimplifyParams.Size(m)
}
func (m *SimplifyParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SimplifyParams.DiscardUnknown(m)
}

var xxx_messageInfo_SimplifyParams proto.InternalMessageInfo

func (m *SimplifyParams) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type GeometryRequest struct {
	//    oneof primary_geoms {
	Geometry                  *GeometryData         `protobuf:"bytes,1,opt,name=geometry,proto3" json:"geometry,omitempty"`
	LeftGeometry              *GeometryData         `protobuf:"bytes,2,opt,name=left_geometry,json=leftGeometry,proto3" json:"left_geometry,omitempty"`
	GeometryRequest           *GeometryRequest      `protobuf:"bytes,3,opt,name=geometry_request,json=geometryRequest,proto3" json:"geometry_request,omitempty"`
	LeftGeometryRequest       *GeometryRequest      `protobuf:"bytes,4,opt,name=left_geometry_request,json=leftGeometryRequest,proto3" json:"left_geometry_request,omitempty"`
	RightGeometry             *GeometryData         `protobuf:"bytes,5,opt,name=right_geometry,json=rightGeometry,proto3" json:"right_geometry,omitempty"`
	RightGeometryRequest      *GeometryRequest      `protobuf:"bytes,6,opt,name=right_geometry_request,json=rightGeometryRequest,proto3" json:"right_geometry_request,omitempty"`
	OperatorType              ServiceOperatorType   `protobuf:"varint,7,opt,name=operator_type,json=operatorType,proto3,enum=epl.protobuf.ServiceOperatorType" json:"operator_type,omitempty"`
	ResultsEncodingType       GeometryEncodingType  `protobuf:"varint,8,opt,name=results_encoding_type,json=resultsEncodingType,proto3,enum=epl.protobuf.GeometryEncodingType" json:"results_encoding_type,omitempty"`
	OperationSpatialReference *SpatialReferenceData `protobuf:"bytes,9,opt,name=operation_spatial_reference,json=operationSpatialReference,proto3" json:"operation_spatial_reference,omitempty"`
	ResultSpatialReference    *SpatialReferenceData `protobuf:"bytes,10,opt,name=result_spatial_reference,json=resultSpatialReference,proto3" json:"result_spatial_reference,omitempty"`
	//    oneof params {
	BufferParams           *BufferParams           `protobuf:"bytes,11,opt,name=buffer_params,json=bufferParams,proto3" json:"buffer_params,omitempty"`
	ConvexParams           *ConvexParams           `protobuf:"bytes,12,opt,name=convex_params,json=convexParams,proto3" json:"convex_params,omitempty"`
	RelateParams           *RelateParams           `protobuf:"bytes,13,opt,name=relate_params,json=relateParams,proto3" json:"relate_params,omitempty"`
	RandomPointsParams     *RandomPointsParams     `protobuf:"bytes,14,opt,name=random_points_params,json=randomPointsParams,proto3" json:"random_points_params,omitempty"`
	GeneralizeParams       *GeneralizeParams       `protobuf:"bytes,15,opt,name=generalize_params,json=generalizeParams,proto3" json:"generalize_params,omitempty"`
	IntersectionParams     *IntersectionParams     `protobuf:"bytes,16,opt,name=intersection_params,json=intersectionParams,proto3" json:"intersection_params,omitempty"`
	OffsetParams           *OffsetParams           `protobuf:"bytes,17,opt,name=offset_params,json=offsetParams,proto3" json:"offset_params,omitempty"`
	CutParams              *CutParams              `protobuf:"bytes,18,opt,name=cut_params,json=cutParams,proto3" json:"cut_params,omitempty"`
	ClipParams             *ClipParams             `protobuf:"bytes,19,opt,name=clip_params,json=clipParams,proto3" json:"clip_params,omitempty"`
	DensifyParams          *DensifyParams          `protobuf:"bytes,20,opt,name=densify_params,json=densifyParams,proto3" json:"densify_params,omitempty"`
	SimplifyParams         *SimplifyParams         `protobuf:"bytes,21,opt,name=simplify_params,json=simplifyParams,proto3" json:"simplify_params,omitempty"`
	GeneralizeByAreaParams *GeneralizeByAreaParams `protobuf:"bytes,22,opt,name=generalize_by_area_params,json=generalizeByAreaParams,proto3" json:"generalize_by_area_params,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *GeometryRequest) Reset()         { *m = GeometryRequest{} }
func (m *GeometryRequest) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest) ProtoMessage()    {}
func (*GeometryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{17}
}
func (m *GeometryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest.Unmarshal(m, b)
}
func (m *GeometryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest.Marshal(b, m, deterministic)
}
func (dst *GeometryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest.Merge(dst, src)
}
func (m *GeometryRequest) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest.Size(m)
}
func (m *GeometryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest proto.InternalMessageInfo

func (m *GeometryRequest) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *GeometryRequest) GetLeftGeometry() *GeometryData {
	if m != nil {
		return m.LeftGeometry
	}
	return nil
}

func (m *GeometryRequest) GetGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.GeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetLeftGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.LeftGeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetRightGeometry() *GeometryData {
	if m != nil {
		return m.RightGeometry
	}
	return nil
}

func (m *GeometryRequest) GetRightGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.RightGeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetOperatorType() ServiceOperatorType {
	if m != nil {
		return m.OperatorType
	}
	return ServiceOperatorType_Project
}

func (m *GeometryRequest) GetResultsEncodingType() GeometryEncodingType {
	if m != nil {
		return m.ResultsEncodingType
	}
	return GeometryEncodingType_unknown
}

func (m *GeometryRequest) GetOperationSpatialReference() *SpatialReferenceData {
	if m != nil {
		return m.OperationSpatialReference
	}
	return nil
}

func (m *GeometryRequest) GetResultSpatialReference() *SpatialReferenceData {
	if m != nil {
		return m.ResultSpatialReference
	}
	return nil
}

func (m *GeometryRequest) GetBufferParams() *BufferParams {
	if m != nil {
		return m.BufferParams
	}
	return nil
}

func (m *GeometryRequest) GetConvexParams() *ConvexParams {
	if m != nil {
		return m.ConvexParams
	}
	return nil
}

func (m *GeometryRequest) GetRelateParams() *RelateParams {
	if m != nil {
		return m.RelateParams
	}
	return nil
}

func (m *GeometryRequest) GetRandomPointsParams() *RandomPointsParams {
	if m != nil {
		return m.RandomPointsParams
	}
	return nil
}

func (m *GeometryRequest) GetGeneralizeParams() *GeneralizeParams {
	if m != nil {
		return m.GeneralizeParams
	}
	return nil
}

func (m *GeometryRequest) GetIntersectionParams() *IntersectionParams {
	if m != nil {
		return m.IntersectionParams
	}
	return nil
}

func (m *GeometryRequest) GetOffsetParams() *OffsetParams {
	if m != nil {
		return m.OffsetParams
	}
	return nil
}

func (m *GeometryRequest) GetCutParams() *CutParams {
	if m != nil {
		return m.CutParams
	}
	return nil
}

func (m *GeometryRequest) GetClipParams() *ClipParams {
	if m != nil {
		return m.ClipParams
	}
	return nil
}

func (m *GeometryRequest) GetDensifyParams() *DensifyParams {
	if m != nil {
		return m.DensifyParams
	}
	return nil
}

func (m *GeometryRequest) GetSimplifyParams() *SimplifyParams {
	if m != nil {
		return m.SimplifyParams
	}
	return nil
}

func (m *GeometryRequest) GetGeneralizeByAreaParams() *GeneralizeByAreaParams {
	if m != nil {
		return m.GeneralizeByAreaParams
	}
	return nil
}

type EnvelopeData struct {
	Xmin                 float64               `protobuf:"fixed64,1,opt,name=xmin,proto3" json:"xmin,omitempty"`
	Ymin                 float64               `protobuf:"fixed64,2,opt,name=ymin,proto3" json:"ymin,omitempty"`
	Xmax                 float64               `protobuf:"fixed64,3,opt,name=xmax,proto3" json:"xmax,omitempty"`
	Ymax                 float64               `protobuf:"fixed64,4,opt,name=ymax,proto3" json:"ymax,omitempty"`
	SpatialReference     *SpatialReferenceData `protobuf:"bytes,5,opt,name=spatial_reference,json=spatialReference,proto3" json:"spatial_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EnvelopeData) Reset()         { *m = EnvelopeData{} }
func (m *EnvelopeData) String() string { return proto.CompactTextString(m) }
func (*EnvelopeData) ProtoMessage()    {}
func (*EnvelopeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_geometry_e3575641701fdc19, []int{18}
}
func (m *EnvelopeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvelopeData.Unmarshal(m, b)
}
func (m *EnvelopeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvelopeData.Marshal(b, m, deterministic)
}
func (dst *EnvelopeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvelopeData.Merge(dst, src)
}
func (m *EnvelopeData) XXX_Size() int {
	return xxx_messageInfo_EnvelopeData.Size(m)
}
func (m *EnvelopeData) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvelopeData.DiscardUnknown(m)
}

var xxx_messageInfo_EnvelopeData proto.InternalMessageInfo

func (m *EnvelopeData) GetXmin() float64 {
	if m != nil {
		return m.Xmin
	}
	return 0
}

func (m *EnvelopeData) GetYmin() float64 {
	if m != nil {
		return m.Ymin
	}
	return 0
}

func (m *EnvelopeData) GetXmax() float64 {
	if m != nil {
		return m.Xmax
	}
	return 0
}

func (m *EnvelopeData) GetYmax() float64 {
	if m != nil {
		return m.Ymax
	}
	return 0
}

func (m *EnvelopeData) GetSpatialReference() *SpatialReferenceData {
	if m != nil {
		return m.SpatialReference
	}
	return nil
}

func init() {
	proto.RegisterType((*GeometryData)(nil), "epl.protobuf.GeometryData")
	proto.RegisterType((*SpatialReferenceData)(nil), "epl.protobuf.SpatialReferenceData")
	proto.RegisterType((*GeometryResponse)(nil), "epl.protobuf.GeometryResponse")
	proto.RegisterMapType((map[int64]bool)(nil), "epl.protobuf.GeometryResponse.RelateMapEntry")
	proto.RegisterType((*FileRequestChunk)(nil), "epl.protobuf.FileRequestChunk")
	proto.RegisterType((*BufferParams)(nil), "epl.protobuf.BufferParams")
	proto.RegisterType((*GeodeticBufferParams)(nil), "epl.protobuf.GeodeticBufferParams")
	proto.RegisterType((*ConvexParams)(nil), "epl.protobuf.ConvexParams")
	proto.RegisterType((*RelateParams)(nil), "epl.protobuf.RelateParams")
	proto.RegisterType((*RandomPointsParams)(nil), "epl.protobuf.RandomPointsParams")
	proto.RegisterType((*GeneralizeParams)(nil), "epl.protobuf.GeneralizeParams")
	proto.RegisterType((*GeneralizeByAreaParams)(nil), "epl.protobuf.GeneralizeByAreaParams")
	proto.RegisterType((*IntersectionParams)(nil), "epl.protobuf.IntersectionParams")
	proto.RegisterType((*OffsetParams)(nil), "epl.protobuf.OffsetParams")
	proto.RegisterType((*CutParams)(nil), "epl.protobuf.CutParams")
	proto.RegisterType((*ClipParams)(nil), "epl.protobuf.ClipParams")
	proto.RegisterType((*DensifyParams)(nil), "epl.protobuf.DensifyParams")
	proto.RegisterType((*SimplifyParams)(nil), "epl.protobuf.SimplifyParams")
	proto.RegisterType((*GeometryRequest)(nil), "epl.protobuf.GeometryRequest")
	proto.RegisterType((*EnvelopeData)(nil), "epl.protobuf.EnvelopeData")
	proto.RegisterEnum("epl.protobuf.GeometryEncodingType", GeometryEncodingType_name, GeometryEncodingType_value)
	proto.RegisterEnum("epl.protobuf.ServiceOperatorType", ServiceOperatorType_name, ServiceOperatorType_value)
	proto.RegisterEnum("epl.protobuf.OffsetJoinType", OffsetJoinType_name, OffsetJoinType_value)
	proto.RegisterEnum("epl.protobuf.FileType", FileType_name, FileType_value)
}

func init() {
	proto.RegisterFile("epl/protobuf/geometry.proto", fileDescriptor_geometry_e3575641701fdc19)
}

var fileDescriptor_geometry_e3575641701fdc19 = []byte{
	// 2069 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xdf, 0x72, 0x1b, 0xb7,
	0xf5, 0xf6, 0x4a, 0xa2, 0x44, 0x1e, 0x2e, 0x29, 0x08, 0xa2, 0x24, 0xda, 0xfa, 0xf9, 0x17, 0x79,
	0x63, 0xbb, 0xaa, 0x5d, 0x4b, 0x53, 0xb7, 0x93, 0xa9, 0xdb, 0x74, 0x3c, 0xd1, 0x1f, 0x3b, 0x4a,
	0xec, 0x5a, 0x59, 0x79, 0xe2, 0x69, 0xda, 0x99, 0x9d, 0xe5, 0xee, 0x21, 0x05, 0x6b, 0xff, 0x19,
	0xc0, 0xca, 0x64, 0x9e, 0xa5, 0x57, 0xbd, 0xed, 0x45, 0x7b, 0xd9, 0x77, 0xe9, 0x23, 0xb4, 0x0f,
	0xd0, 0x8b, 0x5e, 0x74, 0x80, 0x5d, 0x90, 0x4b, 0x8a, 0x9e, 0x28, 0xc9, 0x55, 0xef, 0x80, 0x0f,
	0x07, 0xdf, 0x9e, 0x03, 0xe0, 0xe0, 0x3b, 0x58, 0xd8, 0xc6, 0x2c, 0xda, 0xcf, 0x78, 0x2a, 0xd3,
	0x5e, 0xde, 0xdf, 0x1f, 0x60, 0x1a, 0xa3, 0xe4, 0xa3, 0x3d, 0x8d, 0x50, 0x1b, 0xb3, 0x68, 0xcf,
	0x0c, 0x3a, 0xff, 0xb1, 0xc0, 0x7e, 0x5e, 0x1a, 0x1c, 0xf9, 0xd2, 0xa7, 0x1f, 0x41, 0xd3, 0x4c,
	0xf0, 0x58, 0xd8, 0xb5, 0x76, 0xac, 0xdd, 0x45, 0x17, 0x0c, 0x74, 0x12, 0xd2, 0xdb, 0x00, 0x7d,
	0xf4, 0x65, 0xce, 0x51, 0x8d, 0x2f, 0xec, 0x58, 0xbb, 0x0d, 0xb7, 0x51, 0x22, 0x27, 0x21, 0x25,
	0xb0, 0xf8, 0xfe, 0x42, 0x76, 0x17, 0x35, 0xae, 0x9a, 0xb4, 0x0b, 0x2b, 0x03, 0x4c, 0xdf, 0x8a,
	0x34, 0xe9, 0x2e, 0x69, 0xd4, 0x74, 0x0b, 0xdb, 0x5e, 0xb7, 0xb6, 0x63, 0xed, 0xda, 0xca, 0xb6,
	0xa7, 0xc8, 0x51, 0x70, 0xe6, 0x89, 0x73, 0x3f, 0xc3, 0xee, 0xb2, 0x1e, 0x68, 0x28, 0xe4, 0x4c,
	0x01, 0xf4, 0x15, 0xac, 0x89, 0xcc, 0x97, 0xcc, 0x8f, 0x3c, 0x8e, 0x7d, 0xe4, 0x98, 0x04, 0xd8,
	0x5d, 0xd9, 0xb1, 0x76, 0x9b, 0x8f, 0x9d, 0xbd, 0x6a, 0x5c, 0x7b, 0x67, 0x85, 0x99, 0x6b, 0xac,
	0x54, 0x6c, 0x2e, 0x11, 0x33, 0xa8, 0xf3, 0x07, 0xe8, 0xcc, 0xb3, 0xa4, 0x1d, 0xa8, 0x65, 0x3c,
	0x7d, 0xfb, 0x4b, 0x1d, 0x7f, 0xc3, 0x2d, 0x3a, 0xf4, 0x26, 0xd4, 0xb5, 0x77, 0x2a, 0xc0, 0x22,
	0xf0, 0x15, 0xd5, 0x7f, 0x73, 0x21, 0x29, 0x85, 0xa5, 0xf7, 0x17, 0x2c, 0xd4, 0x71, 0xd7, 0x5c,
	0xdd, 0x76, 0xfe, 0xb1, 0x00, 0xc4, 0xac, 0xad, 0x8b, 0x22, 0x4b, 0x13, 0x81, 0xf4, 0x13, 0xa8,
	0x9b, 0xc5, 0xd4, 0xe4, 0xcd, 0xc7, 0xb7, 0xa6, 0x3d, 0xaf, 0xee, 0x86, 0x3b, 0xb6, 0xa5, 0x3f,
	0x87, 0xce, 0x24, 0xf4, 0xc8, 0x97, 0x2c, 0x4d, 0xc4, 0x39, 0xcb, 0xb4, 0x1f, 0x75, 0x77, 0x7d,
	0x1c, 0xd9, 0x64, 0x48, 0x2d, 0x7c, 0x8c, 0xbe, 0xc8, 0x39, 0x6a, 0xb7, 0x2c, 0xd7, 0x74, 0xe9,
	0x0b, 0x00, 0x4d, 0x82, 0x5e, 0xec, 0x67, 0xdd, 0xa5, 0x9d, 0xc5, 0xdd, 0xe6, 0xe3, 0x47, 0xf3,
	0xdd, 0x30, 0x8e, 0xef, 0x69, 0x6a, 0x7c, 0xe9, 0x67, 0xc7, 0x89, 0x82, 0x1b, 0xdc, 0xf4, 0x55,
	0x48, 0x98, 0x5c, 0x62, 0x94, 0x66, 0xa8, 0xf7, 0xf2, 0x4a, 0x48, 0xc7, 0xe5, 0x68, 0x11, 0x92,
	0xb1, 0xbd, 0xf5, 0x29, 0xb4, 0xa7, 0x49, 0xd5, 0x81, 0xb8, 0xc0, 0x51, 0x79, 0xe8, 0x54, 0x53,
	0x6d, 0xc4, 0xa5, 0x1f, 0xe5, 0x58, 0xc6, 0x59, 0x74, 0x7e, 0xbd, 0xf0, 0x2b, 0xcb, 0xf9, 0xe7,
	0x22, 0x90, 0x67, 0x2c, 0x42, 0x17, 0xdf, 0xe5, 0x28, 0xe4, 0xe1, 0x79, 0x9e, 0x5c, 0xd0, 0x23,
	0x68, 0x27, 0x28, 0x24, 0x86, 0x1e, 0x2f, 0xe0, 0x72, 0x8d, 0x6f, 0x7f, 0x28, 0x38, 0x6d, 0xe4,
	0xb6, 0x8a, 0x49, 0x65, 0x97, 0x7e, 0x0d, 0x1b, 0x1c, 0x45, 0x1e, 0x49, 0xe1, 0x61, 0x12, 0xa4,
	0x21, 0x4b, 0x06, 0x9e, 0x1c, 0x65, 0x85, 0x13, 0xed, 0xd9, 0xa3, 0x66, 0xc8, 0x8e, 0x4b, 0xd3,
	0xd7, 0xa3, 0x0c, 0xdd, 0xf5, 0x92, 0xa0, 0x0a, 0xd2, 0x6f, 0x60, 0x8b, 0x25, 0x59, 0x2e, 0xbd,
	0xab, 0x87, 0x78, 0xf1, 0xda, 0x87, 0x78, 0x43, 0x53, 0xcc, 0x0e, 0xd1, 0x3f, 0x42, 0xb7, 0xf8,
	0xe4, 0x1c, 0xf2, 0xda, 0xb5, 0xc9, 0x37, 0x0b, 0x8e, 0x2b, 0xec, 0x14, 0x96, 0x42, 0x5f, 0xfa,
	0x65, 0x46, 0xea, 0xb6, 0xc2, 0x04, 0xfb, 0xb6, 0xc8, 0xbf, 0x45, 0x57, 0xb7, 0xe9, 0x26, 0x2c,
	0xa7, 0xfd, 0xbe, 0x40, 0xd9, 0xad, 0x6b, 0xb4, 0xec, 0xd1, 0x6d, 0x68, 0xf4, 0x59, 0x84, 0x5e,
	0xe2, 0xc7, 0xd8, 0x6d, 0xe8, 0xd4, 0xa9, 0x2b, 0xe0, 0x77, 0x7e, 0x8c, 0xd4, 0x81, 0x16, 0x13,
	0x5e, 0xe4, 0x0b, 0xe9, 0x05, 0x6a, 0x17, 0xbb, 0xa0, 0xf7, 0xba, 0xc9, 0xc4, 0x0b, 0xbf, 0xdc,
	0x58, 0xe7, 0x6f, 0x16, 0xd8, 0x07, 0x79, 0xbf, 0x8f, 0xfc, 0xd4, 0xe7, 0x7e, 0x2c, 0xe8, 0x2d,
	0xa8, 0x87, 0x4c, 0x48, 0x5f, 0xc5, 0x67, 0xe9, 0xd3, 0x3d, 0xee, 0xd3, 0x8f, 0xa1, 0x15, 0xfb,
	0x43, 0x2f, 0xc4, 0x4b, 0xa6, 0xb3, 0x41, 0xef, 0x9b, 0xe5, 0xda, 0xb1, 0x3f, 0x3c, 0x32, 0x18,
	0xbd, 0x03, 0x76, 0x9e, 0xb0, 0x34, 0xf1, 0x8a, 0x90, 0xf5, 0x0e, 0xd4, 0xdd, 0xa6, 0xc6, 0x5c,
	0x0d, 0xd1, 0x4f, 0x61, 0x5b, 0xf1, 0x5c, 0x22, 0x97, 0x2c, 0x40, 0xe1, 0xb1, 0xc4, 0xeb, 0xe7,
	0x51, 0xe4, 0x05, 0x8c, 0x07, 0x11, 0xea, 0xdb, 0xac, 0xe6, 0x6e, 0xc5, 0xfe, 0xf0, 0xeb, 0xd2,
	0xe2, 0x24, 0x79, 0x96, 0x47, 0xd1, 0xa1, 0x1e, 0x76, 0xfe, 0x6e, 0x41, 0xe7, 0x39, 0xa6, 0x21,
	0x4a, 0x16, 0xfc, 0x8f, 0xb9, 0x7e, 0x17, 0xec, 0xc3, 0x34, 0xb9, 0xc4, 0x61, 0xe9, 0x71, 0x07,
	0x6a, 0x31, 0xf2, 0x41, 0xe1, 0x6e, 0xdd, 0x2d, 0x3a, 0xce, 0x3d, 0xb0, 0x8b, 0xfc, 0x2d, 0xad,
	0x36, 0x60, 0x39, 0x44, 0xef, 0x09, 0x8b, 0xcd, 0xad, 0x19, 0xe2, 0x13, 0x16, 0x3b, 0xbf, 0x07,
	0xea, 0xfa, 0x49, 0x98, 0xc6, 0xa7, 0x29, 0x4b, 0xa4, 0x28, 0x8d, 0xf7, 0xa1, 0x93, 0xe9, 0xbe,
	0x97, 0x21, 0xf7, 0xc4, 0xbb, 0xdc, 0xe7, 0xe8, 0x5d, 0xc4, 0xe5, 0x82, 0xac, 0x15, 0x63, 0xa7,
	0xc8, 0xcf, 0xf4, 0xc8, 0x97, 0xb1, 0x3e, 0x6e, 0x88, 0x85, 0xe2, 0xa8, 0xe3, 0x86, 0x18, 0x3a,
	0x7d, 0x75, 0xc1, 0x26, 0xc8, 0xfd, 0x88, 0x7d, 0x6b, 0xbc, 0xb8, 0xb2, 0x82, 0xd6, 0x9c, 0x15,
	0x7c, 0x04, 0x94, 0x63, 0x9c, 0x5e, 0xa2, 0x17, 0xe2, 0x40, 0x33, 0x48, 0x14, 0xe5, 0x1d, 0xb3,
	0x56, 0x8c, 0x1c, 0x4d, 0x06, 0x9c, 0x3f, 0x59, 0xb0, 0x39, 0xf9, 0xd0, 0xc1, 0xe8, 0x33, 0x8e,
	0x7e, 0xf9, 0xb9, 0x87, 0xb0, 0x96, 0x21, 0x0f, 0x30, 0x91, 0x1e, 0xc7, 0x30, 0x0f, 0x2a, 0x9f,
	0x24, 0xe5, 0x80, 0x6b, 0xf0, 0xef, 0xf9, 0x59, 0x7a, 0x1f, 0x56, 0x55, 0x28, 0x7a, 0x2d, 0xbc,
	0x20, 0xcd, 0x13, 0x59, 0xea, 0x8b, 0x8a, 0x50, 0xaf, 0xe6, 0xa1, 0x02, 0x9d, 0xdf, 0x00, 0x3d,
	0x49, 0x24, 0x72, 0x81, 0xfa, 0x33, 0xa5, 0x67, 0xf7, 0xa0, 0x1d, 0xb2, 0x18, 0x13, 0xa1, 0x4e,
	0x4a, 0xec, 0x8b, 0x0b, 0xed, 0x56, 0xcd, 0x6d, 0x8d, 0xd1, 0x97, 0xbe, 0xb8, 0x70, 0xfe, 0x62,
	0x81, 0xfd, 0x4a, 0x67, 0xe9, 0x35, 0x8e, 0xe7, 0x13, 0x68, 0xbc, 0x4d, 0x59, 0x52, 0xbd, 0x0d,
	0xff, 0x6f, 0xfa, 0x5a, 0x29, 0xa8, 0xbe, 0x48, 0x59, 0xa2, 0xef, 0xc1, 0xfa, 0xdb, 0xb2, 0xa5,
	0x0a, 0x8b, 0x1e, 0x5e, 0x62, 0xe4, 0x71, 0xb5, 0x05, 0xa5, 0x22, 0x81, 0x86, 0x5c, 0x85, 0xa8,
	0x8d, 0xeb, 0x47, 0xbe, 0x94, 0x98, 0x78, 0xc8, 0x79, 0xca, 0xf5, 0x21, 0xb5, 0x5c, 0xbb, 0x04,
	0x8f, 0x15, 0xe6, 0x3c, 0x86, 0xc6, 0x61, 0x2e, 0x27, 0x11, 0x06, 0x69, 0x22, 0x58, 0x88, 0xdc,
	0x93, 0x69, 0x1e, 0x9c, 0x97, 0xe7, 0xb3, 0x65, 0xd0, 0xd7, 0x0a, 0x74, 0x8e, 0x00, 0x0e, 0x23,
	0x96, 0x95, 0x93, 0xaa, 0x6a, 0x65, 0x5d, 0x5f, 0xad, 0x9c, 0x3d, 0x68, 0x1d, 0xa9, 0x65, 0xeb,
	0x8f, 0x4a, 0xa2, 0xdb, 0x00, 0x6a, 0x77, 0x22, 0x4c, 0x06, 0xf2, 0xbc, 0x5c, 0xa9, 0x46, 0xec,
	0x0f, 0x5f, 0x68, 0xc0, 0xb9, 0x0f, 0xed, 0x33, 0x16, 0x67, 0xd1, 0x64, 0x42, 0x07, 0x6a, 0xfd,
	0x94, 0x07, 0xe3, 0x2c, 0xd2, 0x1d, 0xe7, 0xdf, 0x36, 0xac, 0xce, 0xe8, 0xd1, 0x0f, 0x2e, 0x12,
	0x9e, 0x42, 0x2b, 0xc2, 0xbe, 0xf4, 0xc6, 0x93, 0x17, 0xbe, 0x73, 0xb2, 0xad, 0x26, 0x18, 0x84,
	0x7e, 0x0e, 0x64, 0x5c, 0xfd, 0x19, 0x05, 0x5d, 0xbc, 0x8e, 0x82, 0xae, 0x0e, 0x66, 0x42, 0xf8,
	0x0a, 0x36, 0xa6, 0x5c, 0x19, 0xd3, 0x2d, 0x5d, 0x87, 0x6e, 0xbd, 0xea, 0x95, 0xa1, 0xfc, 0x0c,
	0xda, 0x9c, 0x0d, 0xce, 0x2b, 0xe1, 0xd5, 0xbe, 0x33, 0xbc, 0x96, 0x9e, 0x31, 0x8e, 0xef, 0x0c,
	0x36, 0xa7, 0x29, 0xc6, 0x6e, 0x2d, 0x5f, 0xc7, 0xad, 0xce, 0x14, 0x9b, 0xf1, 0xeb, 0x19, 0xb4,
	0xd2, 0x4c, 0xa5, 0x6c, 0xca, 0x8b, 0xc4, 0x58, 0xd1, 0x89, 0x71, 0x67, 0x46, 0x6f, 0x91, 0x5f,
	0xb2, 0x00, 0x5f, 0x95, 0x96, 0x3a, 0x3b, 0xec, 0xb4, 0xd2, 0xfb, 0x70, 0xd9, 0x51, 0xff, 0x71,
	0x65, 0x47, 0x0f, 0xb6, 0x8b, 0xef, 0xa8, 0x8b, 0xe0, 0x6a, 0x75, 0xd0, 0xb8, 0x76, 0x75, 0x70,
	0x73, 0x4c, 0xf3, 0xbd, 0xca, 0x0f, 0xf8, 0xd1, 0xe5, 0xc7, 0x53, 0x68, 0xf5, 0xb4, 0x82, 0x7a,
	0x99, 0x4e, 0xa5, 0x6e, 0x73, 0xde, 0xc6, 0x57, 0x45, 0xd6, 0xb5, 0x7b, 0x55, 0xc9, 0x7d, 0x0a,
	0xea, 0x4e, 0xb8, 0xc4, 0xa1, 0x21, 0xb0, 0xe7, 0x11, 0x54, 0x35, 0xcf, 0xb5, 0x83, 0xaa, 0x02,
	0x3e, 0x85, 0x56, 0x59, 0x31, 0x97, 0x04, 0xad, 0x79, 0x04, 0x55, 0x39, 0x74, 0x6d, 0x5e, 0x15,
	0x47, 0x17, 0x3a, 0x5c, 0xab, 0xa0, 0x67, 0x64, 0xaf, 0xe0, 0x69, 0x6b, 0x9e, 0x9d, 0x19, 0x9e,
	0x2b, 0x7a, 0xe9, 0x52, 0x7e, 0x55, 0x43, 0xbf, 0x84, 0xb5, 0xc1, 0x58, 0x95, 0x0c, 0xe1, 0xaa,
	0x26, 0xfc, 0xff, 0xd9, 0xc3, 0x32, 0xad, 0x92, 0x2e, 0x19, 0xcc, 0xea, 0xe6, 0x57, 0xb0, 0xce,
	0x2a, 0x22, 0x62, 0xe8, 0xc8, 0x3c, 0xff, 0xae, 0xaa, 0x8d, 0x4b, 0xd9, 0x55, 0x05, 0x7a, 0x0a,
	0xad, 0xa2, 0xfe, 0x33, 0x64, 0x6b, 0xf3, 0x16, 0xad, 0x2a, 0x3e, 0xae, 0x9d, 0x56, 0xa5, 0xe8,
	0x13, 0x80, 0x20, 0x1f, 0xcf, 0xa6, 0x7a, 0xf6, 0xd6, 0xcc, 0x9e, 0x19, 0x35, 0x70, 0x1b, 0xc1,
	0x58, 0x18, 0x9e, 0x40, 0x33, 0x88, 0x58, 0x66, 0x26, 0xae, 0xeb, 0x89, 0xdd, 0x99, 0x89, 0x63,
	0x49, 0x70, 0x21, 0x98, 0xc8, 0xc3, 0x01, 0xb4, 0xc3, 0xe2, 0x9a, 0x37, 0xb3, 0x3b, 0x7a, 0xf6,
	0xf6, 0xf4, 0xec, 0x29, 0x29, 0x70, 0x5b, 0xe1, 0x94, 0x32, 0x1c, 0xc3, 0xaa, 0x28, 0xaf, 0x7e,
	0x43, 0xb2, 0xa1, 0x49, 0x66, 0xb4, 0x72, 0x5a, 0x1f, 0xdc, 0xb6, 0x98, 0xd6, 0x0b, 0x0f, 0x6e,
	0x56, 0xb6, 0xb7, 0x37, 0xf2, 0x7c, 0x8e, 0xbe, 0x21, 0xdc, 0xd4, 0x84, 0x77, 0x3f, 0xb4, 0xcd,
	0xd5, 0x1a, 0xc5, 0xdd, 0x1c, 0xcc, 0xc5, 0x9d, 0xbf, 0x5a, 0x60, 0x57, 0xd5, 0x4e, 0xd5, 0x58,
	0xc3, 0x98, 0x99, 0xfa, 0x45, 0xb7, 0x15, 0x36, 0x52, 0x58, 0x51, 0x88, 0xea, 0x76, 0x61, 0xe7,
	0x0f, 0x4b, 0x11, 0xd7, 0xed, 0xc2, 0xce, 0x1f, 0x96, 0xaa, 0xad, 0xdb, 0xf3, 0xdf, 0xeb, 0xb5,
	0x1f, 0xfe, 0x5e, 0x7f, 0x10, 0xea, 0x92, 0xfa, 0xca, 0xbd, 0x47, 0x9b, 0xb0, 0x92, 0x27, 0x17,
	0x49, 0xfa, 0x3e, 0x21, 0x37, 0xe8, 0x8a, 0xfe, 0xad, 0x40, 0xac, 0xa2, 0x21, 0xc9, 0x82, 0x1a,
	0x2e, 0xff, 0x39, 0x90, 0x45, 0xda, 0x02, 0xfd, 0x47, 0x41, 0xff, 0x62, 0x20, 0x4b, 0x74, 0x0d,
	0x5a, 0x46, 0xe3, 0xf5, 0x6d, 0x4b, 0x6a, 0x0f, 0xfe, 0x55, 0x83, 0xf5, 0x39, 0xd7, 0xb5, 0xa2,
	0x39, 0xe5, 0xe9, 0x5b, 0x0c, 0x24, 0xb9, 0x41, 0x09, 0xd8, 0xc7, 0xc3, 0x2c, 0xe5, 0xf2, 0x75,
	0xfa, 0x85, 0x22, 0xb6, 0x28, 0x85, 0xf6, 0x49, 0xac, 0x90, 0x67, 0x3c, 0x8d, 0x35, 0xb6, 0x40,
	0x6f, 0xc3, 0xcd, 0x02, 0x7b, 0xe9, 0x67, 0xc6, 0xf3, 0xf1, 0xf0, 0x22, 0xdd, 0x80, 0x35, 0x43,
	0x72, 0x7c, 0xe6, 0x9e, 0x9c, 0x95, 0x3e, 0x6d, 0xc1, 0xfa, 0x84, 0x69, 0x32, 0x50, 0xa3, 0x6d,
	0x80, 0x23, 0xd6, 0x2f, 0x57, 0x83, 0xac, 0xd0, 0x55, 0x68, 0x9e, 0xf2, 0x74, 0xc8, 0x62, 0x26,
	0x47, 0x8f, 0x8f, 0x48, 0x9d, 0x02, 0x2c, 0x17, 0x97, 0x10, 0x69, 0xa8, 0xf6, 0xf1, 0xbb, 0xdc,
	0x8f, 0x04, 0x01, 0x6a, 0x43, 0xfd, 0x88, 0x09, 0x55, 0x8c, 0x49, 0xd2, 0x54, 0x34, 0xe3, 0x14,
	0x16, 0xc4, 0x56, 0x96, 0x6f, 0x98, 0x3c, 0x67, 0x09, 0x69, 0x29, 0xcb, 0xc3, 0x34, 0x91, 0x3e,
	0x4b, 0x04, 0x69, 0xab, 0x90, 0x0f, 0x79, 0x2a, 0x04, 0x0a, 0xb2, 0xaa, 0x3a, 0xba, 0xa2, 0x42,
	0x41, 0x88, 0xb2, 0x7b, 0x75, 0x89, 0x3c, 0xf2, 0x33, 0x41, 0xd6, 0x14, 0x43, 0x71, 0xfd, 0x12,
	0x5a, 0x7e, 0x4b, 0x17, 0x8c, 0x64, 0x5d, 0xad, 0x53, 0xf5, 0xba, 0x20, 0x1d, 0x5a, 0x87, 0x25,
	0x95, 0x7c, 0x64, 0x43, 0x6d, 0xd0, 0x61, 0x2e, 0xc9, 0x26, 0x5d, 0x87, 0xd5, 0x32, 0xa3, 0x0e,
	0x46, 0x45, 0xfd, 0x44, 0xb6, 0xd4, 0x7a, 0xea, 0xf7, 0x93, 0x30, 0xef, 0x27, 0x72, 0x8b, 0x6e,
	0xc3, 0x96, 0x79, 0x53, 0xcd, 0x4e, 0xd8, 0x1e, 0x4f, 0x90, 0x2c, 0x28, 0xb1, 0xdb, 0xca, 0x19,
	0x93, 0x66, 0xe4, 0x23, 0xb5, 0x5e, 0xa6, 0xf7, 0xea, 0xf9, 0x21, 0xd9, 0x51, 0x7e, 0x17, 0xf7,
	0x0f, 0xb9, 0xa3, 0x56, 0x65, 0x92, 0x40, 0xc4, 0xa1, 0x9d, 0xea, 0xeb, 0xa2, 0x48, 0x1c, 0xf2,
	0xb1, 0xa2, 0x30, 0x5b, 0xf6, 0xe6, 0xa2, 0x47, 0xee, 0xaa, 0x03, 0x34, 0xd9, 0x2c, 0x05, 0xdd,
	0x9b, 0xb6, 0x91, 0xe4, 0xfe, 0xac, 0x8d, 0x24, 0x3f, 0x51, 0x5b, 0x3f, 0x81, 0x9e, 0x63, 0x71,
	0x88, 0x76, 0xd5, 0x4a, 0x98, 0xa9, 0x06, 0xfc, 0xa9, 0x3a, 0x0f, 0x67, 0xa3, 0x58, 0x1d, 0x1e,
	0x16, 0x54, 0xf6, 0xff, 0x81, 0x72, 0xb9, 0x10, 0xad, 0xcf, 0xf3, 0x28, 0x22, 0x0f, 0x55, 0xb4,
	0x07, 0x69, 0x9e, 0x84, 0x3e, 0x1f, 0x91, 0x9f, 0xa9, 0xa5, 0xaf, 0x2a, 0x09, 0x79, 0xa4, 0xd9,
	0x93, 0x20, 0x4a, 0x05, 0x4b, 0x06, 0xc5, 0x5b, 0x8f, 0xec, 0x3d, 0xf8, 0x2d, 0xb4, 0xa7, 0xab,
	0x76, 0xda, 0x80, 0x9a, 0xab, 0x68, 0xc8, 0x0d, 0xd5, 0x3c, 0x50, 0x35, 0x3a, 0xb1, 0x54, 0xf3,
	0x25, 0x93, 0xc8, 0xc9, 0x82, 0x5a, 0xb6, 0xe2, 0x61, 0x46, 0x16, 0x1f, 0xdc, 0x84, 0xfa, 0x33,
	0x16, 0xa1, 0x9e, 0xd8, 0x82, 0x86, 0x3e, 0xaa, 0xea, 0x6d, 0x4f, 0x6e, 0x1c, 0xbc, 0x01, 0x12,
	0xa4, 0xf1, 0x54, 0xa6, 0x1f, 0xb4, 0x4c, 0x1a, 0x9c, 0x2a, 0xe4, 0xd4, 0xfa, 0xe6, 0xe1, 0x80,
	0xc9, 0xf3, 0xbc, 0xb7, 0x17, 0xa4, 0xf1, 0xfe, 0x00, 0xd3, 0x47, 0x03, 0x9e, 0x05, 0xfb, 0x7e,
	0xc6, 0xf6, 0x07, 0x69, 0xe4, 0x27, 0x83, 0xfd, 0xea, 0xcf, 0xcc, 0x3f, 0x2f, 0x2c, 0x3d, 0x7f,
	0x79, 0x7a, 0xd0, 0x5b, 0xd6, 0xc0, 0x2f, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x41, 0xa2, 0xae,
	0xb8, 0xea, 0x14, 0x00, 0x00,
}
