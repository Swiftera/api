// Code generated by protoc-gen-go. DO NOT EDIT.
// source: epl/protobuf/stac.proto

package protobuf // import "github.com/geo-grpc/api/golang/epl/protobuf"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AssetType int32

const (
	AssetType_UNKNOWN_ASSET AssetType = 0
	AssetType_JPEG          AssetType = 1
	AssetType_GEOTIFF       AssetType = 2
	AssetType_LERC          AssetType = 3
	AssetType_MRF           AssetType = 4
	AssetType_MRF_IDX       AssetType = 5
	AssetType_MRF_XML       AssetType = 6
	AssetType_CO_GEOTIFF    AssetType = 7
	AssetType_RAW           AssetType = 8
	AssetType_THUMBNAIL     AssetType = 9
	AssetType_TIFF          AssetType = 10
)

var AssetType_name = map[int32]string{
	0:  "UNKNOWN_ASSET",
	1:  "JPEG",
	2:  "GEOTIFF",
	3:  "LERC",
	4:  "MRF",
	5:  "MRF_IDX",
	6:  "MRF_XML",
	7:  "CO_GEOTIFF",
	8:  "RAW",
	9:  "THUMBNAIL",
	10: "TIFF",
}
var AssetType_value = map[string]int32{
	"UNKNOWN_ASSET": 0,
	"JPEG":          1,
	"GEOTIFF":       2,
	"LERC":          3,
	"MRF":           4,
	"MRF_IDX":       5,
	"MRF_XML":       6,
	"CO_GEOTIFF":    7,
	"RAW":           8,
	"THUMBNAIL":     9,
	"TIFF":          10,
}

func (x AssetType) String() string {
	return proto.EnumName(AssetType_name, int32(x))
}
func (AssetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{0}
}

type CloudPlatform int32

const (
	CloudPlatform_UNKNOWN_CLOUD_PLATFORM CloudPlatform = 0
	CloudPlatform_AWS                    CloudPlatform = 1
	CloudPlatform_GCP                    CloudPlatform = 2
	CloudPlatform_AZURE                  CloudPlatform = 3
)

var CloudPlatform_name = map[int32]string{
	0: "UNKNOWN_CLOUD_PLATFORM",
	1: "AWS",
	2: "GCP",
	3: "AZURE",
}
var CloudPlatform_value = map[string]int32{
	"UNKNOWN_CLOUD_PLATFORM": 0,
	"AWS":                    1,
	"GCP":                    2,
	"AZURE":                  3,
}

func (x CloudPlatform) String() string {
	return proto.EnumName(CloudPlatform_name, int32(x))
}
func (CloudPlatform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{1}
}

type Sar_Platform int32

const (
	Sar_UNKNOWN_PLATFORM Sar_Platform = 0
	Sar_ENVISAT          Sar_Platform = 1
	Sar_SENTINEL1A       Sar_Platform = 2
)

var Sar_Platform_name = map[int32]string{
	0: "UNKNOWN_PLATFORM",
	1: "ENVISAT",
	2: "SENTINEL1A",
}
var Sar_Platform_value = map[string]int32{
	"UNKNOWN_PLATFORM": 0,
	"ENVISAT":          1,
	"SENTINEL1A":       2,
}

func (x Sar_Platform) String() string {
	return proto.EnumName(Sar_Platform_name, int32(x))
}
func (Sar_Platform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{6, 0}
}

type Sar_Instrument int32

const (
	Sar_UNKNOWN_INSTRUMENT Sar_Instrument = 0
)

var Sar_Instrument_name = map[int32]string{
	0: "UNKNOWN_INSTRUMENT",
}
var Sar_Instrument_value = map[string]int32{
	"UNKNOWN_INSTRUMENT": 0,
}

func (x Sar_Instrument) String() string {
	return proto.EnumName(Sar_Instrument_name, int32(x))
}
func (Sar_Instrument) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{6, 1}
}

type Eo_Platform int32

const (
	Eo_UNKNOWN_PLATFORM Eo_Platform = 0
	Eo_LANDSAT_1        Eo_Platform = 2
	Eo_LANDSAT_2        Eo_Platform = 4
	Eo_LANDSAT_3        Eo_Platform = 8
	Eo_LANDSAT_123      Eo_Platform = 14
	Eo_LANDSAT_4        Eo_Platform = 16
	Eo_LANDSAT_5        Eo_Platform = 32
	Eo_LANDSAT_45       Eo_Platform = 48
	Eo_LANDSAT_7        Eo_Platform = 64
	Eo_LANDSAT_8        Eo_Platform = 128
	Eo_SWIFT_2          Eo_Platform = 256
)

var Eo_Platform_name = map[int32]string{
	0:   "UNKNOWN_PLATFORM",
	2:   "LANDSAT_1",
	4:   "LANDSAT_2",
	8:   "LANDSAT_3",
	14:  "LANDSAT_123",
	16:  "LANDSAT_4",
	32:  "LANDSAT_5",
	48:  "LANDSAT_45",
	64:  "LANDSAT_7",
	128: "LANDSAT_8",
	256: "SWIFT_2",
}
var Eo_Platform_value = map[string]int32{
	"UNKNOWN_PLATFORM": 0,
	"LANDSAT_1":        2,
	"LANDSAT_2":        4,
	"LANDSAT_3":        8,
	"LANDSAT_123":      14,
	"LANDSAT_4":        16,
	"LANDSAT_5":        32,
	"LANDSAT_45":       48,
	"LANDSAT_7":        64,
	"LANDSAT_8":        128,
	"SWIFT_2":          256,
}

func (x Eo_Platform) String() string {
	return proto.EnumName(Eo_Platform_name, int32(x))
}
func (Eo_Platform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{7, 0}
}

type Eo_Instrument int32

const (
	Eo_UNKNOWN_INSTRUMENT Eo_Instrument = 0
	Eo_OLI                Eo_Instrument = 2
	Eo_TIRS               Eo_Instrument = 4
	Eo_POM_1              Eo_Instrument = 8
)

var Eo_Instrument_name = map[int32]string{
	0: "UNKNOWN_INSTRUMENT",
	2: "OLI",
	4: "TIRS",
	8: "POM_1",
}
var Eo_Instrument_value = map[string]int32{
	"UNKNOWN_INSTRUMENT": 0,
	"OLI":                2,
	"TIRS":               4,
	"POM_1":              8,
}

func (x Eo_Instrument) String() string {
	return proto.EnumName(Eo_Instrument_name, int32(x))
}
func (Eo_Instrument) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{7, 1}
}

type Eo_Constellation int32

const (
	Eo_UNKNOWN_CONSTELLATION Eo_Constellation = 0
	Eo_LANDSAT               Eo_Constellation = 2
	Eo_NAIP                  Eo_Constellation = 4
	Eo_PNOA                  Eo_Constellation = 8
	Eo_SWIFT                 Eo_Constellation = 16
)

var Eo_Constellation_name = map[int32]string{
	0:  "UNKNOWN_CONSTELLATION",
	2:  "LANDSAT",
	4:  "NAIP",
	8:  "PNOA",
	16: "SWIFT",
}
var Eo_Constellation_value = map[string]int32{
	"UNKNOWN_CONSTELLATION": 0,
	"LANDSAT":               2,
	"NAIP":                  4,
	"PNOA":                  8,
	"SWIFT":                 16,
}

func (x Eo_Constellation) String() string {
	return proto.EnumName(Eo_Constellation_name, int32(x))
}
func (Eo_Constellation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{7, 2}
}

type Eo_Band int32

const (
	Eo_UNKNOWN_BAND  Eo_Band = 0
	Eo_COASTAL       Eo_Band = 2
	Eo_BLUE          Eo_Band = 4
	Eo_GREEN         Eo_Band = 8
	Eo_RED           Eo_Band = 16
	Eo_RGB           Eo_Band = 28
	Eo_NEAR_INFRARED Eo_Band = 32
	Eo_RGBIR         Eo_Band = 60
	Eo_SWIR_16       Eo_Band = 64
	Eo_SWIR_22       Eo_Band = 128
	Eo_PANCHROMATIC  Eo_Band = 256
	Eo_CIRRUS        Eo_Band = 512
	Eo_LWIR_11       Eo_Band = 1024
	Eo_LWIR_12       Eo_Band = 2048
)

var Eo_Band_name = map[int32]string{
	0:    "UNKNOWN_BAND",
	2:    "COASTAL",
	4:    "BLUE",
	8:    "GREEN",
	16:   "RED",
	28:   "RGB",
	32:   "NEAR_INFRARED",
	60:   "RGBIR",
	64:   "SWIR_16",
	128:  "SWIR_22",
	256:  "PANCHROMATIC",
	512:  "CIRRUS",
	1024: "LWIR_11",
	2048: "LWIR_12",
}
var Eo_Band_value = map[string]int32{
	"UNKNOWN_BAND":  0,
	"COASTAL":       2,
	"BLUE":          4,
	"GREEN":         8,
	"RED":           16,
	"RGB":           28,
	"NEAR_INFRARED": 32,
	"RGBIR":         60,
	"SWIR_16":       64,
	"SWIR_22":       128,
	"PANCHROMATIC":  256,
	"CIRRUS":        512,
	"LWIR_11":       1024,
	"LWIR_12":       2048,
}

func (x Eo_Band) String() string {
	return proto.EnumName(Eo_Band_name, int32(x))
}
func (Eo_Band) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{7, 3}
}

type StacSearchRequest struct {
	Id *StringField `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//    oneof
	Geometry             *GeometryData    `protobuf:"bytes,2,opt,name=geometry,proto3" json:"geometry,omitempty"`
	Bbox                 *EnvelopeData    `protobuf:"bytes,3,opt,name=bbox,proto3" json:"bbox,omitempty"`
	GeometryRequest      *GeometryRequest `protobuf:"bytes,4,opt,name=geometry_request,json=geometryRequest,proto3" json:"geometry_request,omitempty"`
	PropertiesRequest    *any.Any         `protobuf:"bytes,5,opt,name=properties_request,json=propertiesRequest,proto3" json:"properties_request,omitempty"`
	Datetime             *TimestampField  `protobuf:"bytes,6,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Observed             *TimestampField  `protobuf:"bytes,7,opt,name=observed,proto3" json:"observed,omitempty"`
	Processed            *TimestampField  `protobuf:"bytes,8,opt,name=processed,proto3" json:"processed,omitempty"`
	Updated              *TimestampField  `protobuf:"bytes,9,opt,name=updated,proto3" json:"updated,omitempty"`
	EoRequest            *EoRequest       `protobuf:"bytes,10,opt,name=eo_request,json=eoRequest,proto3" json:"eo_request,omitempty"`
	Limit                uint32           `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64           `protobuf:"varint,12,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StacSearchRequest) Reset()         { *m = StacSearchRequest{} }
func (m *StacSearchRequest) String() string { return proto.CompactTextString(m) }
func (*StacSearchRequest) ProtoMessage()    {}
func (*StacSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{0}
}
func (m *StacSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StacSearchRequest.Unmarshal(m, b)
}
func (m *StacSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StacSearchRequest.Marshal(b, m, deterministic)
}
func (dst *StacSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StacSearchRequest.Merge(dst, src)
}
func (m *StacSearchRequest) XXX_Size() int {
	return xxx_messageInfo_StacSearchRequest.Size(m)
}
func (m *StacSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StacSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StacSearchRequest proto.InternalMessageInfo

func (m *StacSearchRequest) GetId() *StringField {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StacSearchRequest) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *StacSearchRequest) GetBbox() *EnvelopeData {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *StacSearchRequest) GetGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.GeometryRequest
	}
	return nil
}

func (m *StacSearchRequest) GetPropertiesRequest() *any.Any {
	if m != nil {
		return m.PropertiesRequest
	}
	return nil
}

func (m *StacSearchRequest) GetDatetime() *TimestampField {
	if m != nil {
		return m.Datetime
	}
	return nil
}

func (m *StacSearchRequest) GetObserved() *TimestampField {
	if m != nil {
		return m.Observed
	}
	return nil
}

func (m *StacSearchRequest) GetProcessed() *TimestampField {
	if m != nil {
		return m.Processed
	}
	return nil
}

func (m *StacSearchRequest) GetUpdated() *TimestampField {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *StacSearchRequest) GetEoRequest() *EoRequest {
	if m != nil {
		return m.EoRequest
	}
	return nil
}

func (m *StacSearchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *StacSearchRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// Right now this isn't included in the response as it's a bit messy
type BandDetails struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CommonName           string               `protobuf:"bytes,2,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Gsd                  *wrappers.FloatValue `protobuf:"bytes,4,opt,name=gsd,proto3" json:"gsd,omitempty"`
	Accuracy             *wrappers.FloatValue `protobuf:"bytes,5,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	CenterWavelength     *wrappers.FloatValue `protobuf:"bytes,6,opt,name=center_wavelength,json=centerWavelength,proto3" json:"center_wavelength,omitempty"`
	FullWidthHalfMax     *wrappers.FloatValue `protobuf:"bytes,7,opt,name=full_width_half_max,json=fullWidthHalfMax,proto3" json:"full_width_half_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BandDetails) Reset()         { *m = BandDetails{} }
func (m *BandDetails) String() string { return proto.CompactTextString(m) }
func (*BandDetails) ProtoMessage()    {}
func (*BandDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{1}
}
func (m *BandDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandDetails.Unmarshal(m, b)
}
func (m *BandDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandDetails.Marshal(b, m, deterministic)
}
func (dst *BandDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandDetails.Merge(dst, src)
}
func (m *BandDetails) XXX_Size() int {
	return xxx_messageInfo_BandDetails.Size(m)
}
func (m *BandDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_BandDetails.DiscardUnknown(m)
}

var xxx_messageInfo_BandDetails proto.InternalMessageInfo

func (m *BandDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BandDetails) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *BandDetails) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BandDetails) GetGsd() *wrappers.FloatValue {
	if m != nil {
		return m.Gsd
	}
	return nil
}

func (m *BandDetails) GetAccuracy() *wrappers.FloatValue {
	if m != nil {
		return m.Accuracy
	}
	return nil
}

func (m *BandDetails) GetCenterWavelength() *wrappers.FloatValue {
	if m != nil {
		return m.CenterWavelength
	}
	return nil
}

func (m *BandDetails) GetFullWidthHalfMax() *wrappers.FloatValue {
	if m != nil {
		return m.FullWidthHalfMax
	}
	return nil
}

type Asset struct {
	Href string `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// https://github.com/radiantearth/stac-spec/blob/612ee4fb4f979c049d2416e7f5374a5301b8a277/extensions/eo/README.md
	EoBands   Eo_Band   `protobuf:"varint,3,opt,name=eo_bands,json=eoBands,proto3,enum=epl.protobuf.Eo_Band" json:"eo_bands,omitempty"`
	AssetType AssetType `protobuf:"varint,4,opt,name=asset_type,json=assetType,proto3,enum=epl.protobuf.AssetType" json:"asset_type,omitempty"`
	// non-standard
	CloudPlatform        CloudPlatform `protobuf:"varint,5,opt,name=cloud_platform,json=cloudPlatform,proto3,enum=epl.protobuf.CloudPlatform" json:"cloud_platform,omitempty"`
	BucketOwner          string        `protobuf:"bytes,6,opt,name=bucket_owner,json=bucketOwner,proto3" json:"bucket_owner,omitempty"`
	BucketRegion         string        `protobuf:"bytes,7,opt,name=bucket_region,json=bucketRegion,proto3" json:"bucket_region,omitempty"`
	Bucket               string        `protobuf:"bytes,8,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ObjectPath           string        `protobuf:"bytes,9,opt,name=object_path,json=objectPath,proto3" json:"object_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Asset) Reset()         { *m = Asset{} }
func (m *Asset) String() string { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()    {}
func (*Asset) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{2}
}
func (m *Asset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Asset.Unmarshal(m, b)
}
func (m *Asset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Asset.Marshal(b, m, deterministic)
}
func (dst *Asset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Asset.Merge(dst, src)
}
func (m *Asset) XXX_Size() int {
	return xxx_messageInfo_Asset.Size(m)
}
func (m *Asset) XXX_DiscardUnknown() {
	xxx_messageInfo_Asset.DiscardUnknown(m)
}

var xxx_messageInfo_Asset proto.InternalMessageInfo

func (m *Asset) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *Asset) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Asset) GetEoBands() Eo_Band {
	if m != nil {
		return m.EoBands
	}
	return Eo_UNKNOWN_BAND
}

func (m *Asset) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_UNKNOWN_ASSET
}

func (m *Asset) GetCloudPlatform() CloudPlatform {
	if m != nil {
		return m.CloudPlatform
	}
	return CloudPlatform_UNKNOWN_CLOUD_PLATFORM
}

func (m *Asset) GetBucketOwner() string {
	if m != nil {
		return m.BucketOwner
	}
	return ""
}

func (m *Asset) GetBucketRegion() string {
	if m != nil {
		return m.BucketRegion
	}
	return ""
}

func (m *Asset) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Asset) GetObjectPath() string {
	if m != nil {
		return m.ObjectPath
	}
	return ""
}

type StacMetadata struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 'type" ignored as this isn't geojson
	Geometry   *GeometryData        `protobuf:"bytes,3,opt,name=geometry,proto3" json:"geometry,omitempty"`
	Bbox       *EnvelopeData        `protobuf:"bytes,4,opt,name=bbox,proto3" json:"bbox,omitempty"`
	Properties *any.Any             `protobuf:"bytes,5,opt,name=properties,proto3" json:"properties,omitempty"`
	Assets     map[string]*Asset    `protobuf:"bytes,7,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Datetime   *timestamp.Timestamp `protobuf:"bytes,8,opt,name=datetime,proto3" json:"datetime,omitempty"`
	// non-standard
	Observed             *timestamp.Timestamp `protobuf:"bytes,9,opt,name=observed,proto3" json:"observed,omitempty"`
	Processed            *timestamp.Timestamp `protobuf:"bytes,11,opt,name=processed,proto3" json:"processed,omitempty"`
	Updated              *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Eo                   *Eo                  `protobuf:"bytes,13,opt,name=eo,proto3" json:"eo,omitempty"`
	Sar                  *Sar                 `protobuf:"bytes,14,opt,name=sar,proto3" json:"sar,omitempty"`
	Dtr                  *Dtr                 `protobuf:"bytes,15,opt,name=dtr,proto3" json:"dtr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StacMetadata) Reset()         { *m = StacMetadata{} }
func (m *StacMetadata) String() string { return proto.CompactTextString(m) }
func (*StacMetadata) ProtoMessage()    {}
func (*StacMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{3}
}
func (m *StacMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StacMetadata.Unmarshal(m, b)
}
func (m *StacMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StacMetadata.Marshal(b, m, deterministic)
}
func (dst *StacMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StacMetadata.Merge(dst, src)
}
func (m *StacMetadata) XXX_Size() int {
	return xxx_messageInfo_StacMetadata.Size(m)
}
func (m *StacMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_StacMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_StacMetadata proto.InternalMessageInfo

func (m *StacMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StacMetadata) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *StacMetadata) GetBbox() *EnvelopeData {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *StacMetadata) GetProperties() *any.Any {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *StacMetadata) GetAssets() map[string]*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *StacMetadata) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

func (m *StacMetadata) GetObserved() *timestamp.Timestamp {
	if m != nil {
		return m.Observed
	}
	return nil
}

func (m *StacMetadata) GetProcessed() *timestamp.Timestamp {
	if m != nil {
		return m.Processed
	}
	return nil
}

func (m *StacMetadata) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *StacMetadata) GetEo() *Eo {
	if m != nil {
		return m.Eo
	}
	return nil
}

func (m *StacMetadata) GetSar() *Sar {
	if m != nil {
		return m.Sar
	}
	return nil
}

func (m *StacMetadata) GetDtr() *Dtr {
	if m != nil {
		return m.Dtr
	}
	return nil
}

type Dtr struct {
	Start                *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Dtr) Reset()         { *m = Dtr{} }
func (m *Dtr) String() string { return proto.CompactTextString(m) }
func (*Dtr) ProtoMessage()    {}
func (*Dtr) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{4}
}
func (m *Dtr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dtr.Unmarshal(m, b)
}
func (m *Dtr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dtr.Marshal(b, m, deterministic)
}
func (dst *Dtr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dtr.Merge(dst, src)
}
func (m *Dtr) XXX_Size() int {
	return xxx_messageInfo_Dtr.Size(m)
}
func (m *Dtr) XXX_DiscardUnknown() {
	xxx_messageInfo_Dtr.DiscardUnknown(m)
}

var xxx_messageInfo_Dtr proto.InternalMessageInfo

func (m *Dtr) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Dtr) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

type StacUpsertResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	StatusCode           int32    `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	DataId               string   `protobuf:"bytes,3,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StacUpsertResponse) Reset()         { *m = StacUpsertResponse{} }
func (m *StacUpsertResponse) String() string { return proto.CompactTextString(m) }
func (*StacUpsertResponse) ProtoMessage()    {}
func (*StacUpsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{5}
}
func (m *StacUpsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StacUpsertResponse.Unmarshal(m, b)
}
func (m *StacUpsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StacUpsertResponse.Marshal(b, m, deterministic)
}
func (dst *StacUpsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StacUpsertResponse.Merge(dst, src)
}
func (m *StacUpsertResponse) XXX_Size() int {
	return xxx_messageInfo_StacUpsertResponse.Size(m)
}
func (m *StacUpsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StacUpsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StacUpsertResponse proto.InternalMessageInfo

func (m *StacUpsertResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StacUpsertResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *StacUpsertResponse) GetDataId() string {
	if m != nil {
		return m.DataId
	}
	return ""
}

type Sar struct {
	Platform             Sar_Platform `protobuf:"varint,1,opt,name=platform,proto3,enum=epl.protobuf.Sar_Platform" json:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Sar) Reset()         { *m = Sar{} }
func (m *Sar) String() string { return proto.CompactTextString(m) }
func (*Sar) ProtoMessage()    {}
func (*Sar) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{6}
}
func (m *Sar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sar.Unmarshal(m, b)
}
func (m *Sar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sar.Marshal(b, m, deterministic)
}
func (dst *Sar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sar.Merge(dst, src)
}
func (m *Sar) XXX_Size() int {
	return xxx_messageInfo_Sar.Size(m)
}
func (m *Sar) XXX_DiscardUnknown() {
	xxx_messageInfo_Sar.DiscardUnknown(m)
}

var xxx_messageInfo_Sar proto.InternalMessageInfo

func (m *Sar) GetPlatform() Sar_Platform {
	if m != nil {
		return m.Platform
	}
	return Sar_UNKNOWN_PLATFORM
}

type Eo struct {
	Epsg                 uint32               `protobuf:"varint,1,opt,name=epsg,proto3" json:"epsg,omitempty"`
	Platform             Eo_Platform          `protobuf:"varint,2,opt,name=platform,proto3,enum=epl.protobuf.Eo_Platform" json:"platform,omitempty"`
	Instrument           Eo_Instrument        `protobuf:"varint,3,opt,name=instrument,proto3,enum=epl.protobuf.Eo_Instrument" json:"instrument,omitempty"`
	Constellation        Eo_Constellation     `protobuf:"varint,4,opt,name=constellation,proto3,enum=epl.protobuf.Eo_Constellation" json:"constellation,omitempty"`
	SunAzimuth           *wrappers.FloatValue `protobuf:"bytes,5,opt,name=sun_azimuth,json=sunAzimuth,proto3" json:"sun_azimuth,omitempty"`
	SunElevation         *wrappers.FloatValue `protobuf:"bytes,6,opt,name=sun_elevation,json=sunElevation,proto3" json:"sun_elevation,omitempty"`
	Gsd                  *wrappers.FloatValue `protobuf:"bytes,7,opt,name=gsd,proto3" json:"gsd,omitempty"`
	OffNadir             *wrappers.FloatValue `protobuf:"bytes,8,opt,name=off_nadir,json=offNadir,proto3" json:"off_nadir,omitempty"`
	Azimuth              *wrappers.FloatValue `protobuf:"bytes,9,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	CloudCover           *wrappers.FloatValue `protobuf:"bytes,10,opt,name=cloud_cover,json=cloudCover,proto3" json:"cloud_cover,omitempty"`
	Bands                Eo_Band              `protobuf:"varint,11,opt,name=bands,proto3,enum=epl.protobuf.Eo_Band" json:"bands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Eo) Reset()         { *m = Eo{} }
func (m *Eo) String() string { return proto.CompactTextString(m) }
func (*Eo) ProtoMessage()    {}
func (*Eo) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{7}
}
func (m *Eo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eo.Unmarshal(m, b)
}
func (m *Eo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eo.Marshal(b, m, deterministic)
}
func (dst *Eo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eo.Merge(dst, src)
}
func (m *Eo) XXX_Size() int {
	return xxx_messageInfo_Eo.Size(m)
}
func (m *Eo) XXX_DiscardUnknown() {
	xxx_messageInfo_Eo.DiscardUnknown(m)
}

var xxx_messageInfo_Eo proto.InternalMessageInfo

func (m *Eo) GetEpsg() uint32 {
	if m != nil {
		return m.Epsg
	}
	return 0
}

func (m *Eo) GetPlatform() Eo_Platform {
	if m != nil {
		return m.Platform
	}
	return Eo_UNKNOWN_PLATFORM
}

func (m *Eo) GetInstrument() Eo_Instrument {
	if m != nil {
		return m.Instrument
	}
	return Eo_UNKNOWN_INSTRUMENT
}

func (m *Eo) GetConstellation() Eo_Constellation {
	if m != nil {
		return m.Constellation
	}
	return Eo_UNKNOWN_CONSTELLATION
}

func (m *Eo) GetSunAzimuth() *wrappers.FloatValue {
	if m != nil {
		return m.SunAzimuth
	}
	return nil
}

func (m *Eo) GetSunElevation() *wrappers.FloatValue {
	if m != nil {
		return m.SunElevation
	}
	return nil
}

func (m *Eo) GetGsd() *wrappers.FloatValue {
	if m != nil {
		return m.Gsd
	}
	return nil
}

func (m *Eo) GetOffNadir() *wrappers.FloatValue {
	if m != nil {
		return m.OffNadir
	}
	return nil
}

func (m *Eo) GetAzimuth() *wrappers.FloatValue {
	if m != nil {
		return m.Azimuth
	}
	return nil
}

func (m *Eo) GetCloudCover() *wrappers.FloatValue {
	if m != nil {
		return m.CloudCover
	}
	return nil
}

func (m *Eo) GetBands() Eo_Band {
	if m != nil {
		return m.Bands
	}
	return Eo_UNKNOWN_BAND
}

type EoRequest struct {
	Epsg                 int32            `protobuf:"varint,1,opt,name=epsg,proto3" json:"epsg,omitempty"`
	Platform             Eo_Platform      `protobuf:"varint,2,opt,name=platform,proto3,enum=epl.protobuf.Eo_Platform" json:"platform,omitempty"`
	Instrument           Eo_Instrument    `protobuf:"varint,3,opt,name=instrument,proto3,enum=epl.protobuf.Eo_Instrument" json:"instrument,omitempty"`
	Constellation        Eo_Constellation `protobuf:"varint,4,opt,name=constellation,proto3,enum=epl.protobuf.Eo_Constellation" json:"constellation,omitempty"`
	SunAzimuth           *FloatField      `protobuf:"bytes,5,opt,name=sun_azimuth,json=sunAzimuth,proto3" json:"sun_azimuth,omitempty"`
	SunElevation         *FloatField      `protobuf:"bytes,6,opt,name=sun_elevation,json=sunElevation,proto3" json:"sun_elevation,omitempty"`
	Gsd                  *FloatField      `protobuf:"bytes,7,opt,name=gsd,proto3" json:"gsd,omitempty"`
	OffNadir             *FloatField      `protobuf:"bytes,8,opt,name=off_nadir,json=offNadir,proto3" json:"off_nadir,omitempty"`
	Azimuth              *FloatField      `protobuf:"bytes,9,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	CloudCover           *FloatField      `protobuf:"bytes,10,opt,name=cloud_cover,json=cloudCover,proto3" json:"cloud_cover,omitempty"`
	Bands                Eo_Band          `protobuf:"varint,11,opt,name=bands,proto3,enum=epl.protobuf.Eo_Band" json:"bands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EoRequest) Reset()         { *m = EoRequest{} }
func (m *EoRequest) String() string { return proto.CompactTextString(m) }
func (*EoRequest) ProtoMessage()    {}
func (*EoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_83a4dab508ec3e2a, []int{8}
}
func (m *EoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EoRequest.Unmarshal(m, b)
}
func (m *EoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EoRequest.Marshal(b, m, deterministic)
}
func (dst *EoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EoRequest.Merge(dst, src)
}
func (m *EoRequest) XXX_Size() int {
	return xxx_messageInfo_EoRequest.Size(m)
}
func (m *EoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EoRequest proto.InternalMessageInfo

func (m *EoRequest) GetEpsg() int32 {
	if m != nil {
		return m.Epsg
	}
	return 0
}

func (m *EoRequest) GetPlatform() Eo_Platform {
	if m != nil {
		return m.Platform
	}
	return Eo_UNKNOWN_PLATFORM
}

func (m *EoRequest) GetInstrument() Eo_Instrument {
	if m != nil {
		return m.Instrument
	}
	return Eo_UNKNOWN_INSTRUMENT
}

func (m *EoRequest) GetConstellation() Eo_Constellation {
	if m != nil {
		return m.Constellation
	}
	return Eo_UNKNOWN_CONSTELLATION
}

func (m *EoRequest) GetSunAzimuth() *FloatField {
	if m != nil {
		return m.SunAzimuth
	}
	return nil
}

func (m *EoRequest) GetSunElevation() *FloatField {
	if m != nil {
		return m.SunElevation
	}
	return nil
}

func (m *EoRequest) GetGsd() *FloatField {
	if m != nil {
		return m.Gsd
	}
	return nil
}

func (m *EoRequest) GetOffNadir() *FloatField {
	if m != nil {
		return m.OffNadir
	}
	return nil
}

func (m *EoRequest) GetAzimuth() *FloatField {
	if m != nil {
		return m.Azimuth
	}
	return nil
}

func (m *EoRequest) GetCloudCover() *FloatField {
	if m != nil {
		return m.CloudCover
	}
	return nil
}

func (m *EoRequest) GetBands() Eo_Band {
	if m != nil {
		return m.Bands
	}
	return Eo_UNKNOWN_BAND
}

func init() {
	proto.RegisterType((*StacSearchRequest)(nil), "epl.protobuf.StacSearchRequest")
	proto.RegisterType((*BandDetails)(nil), "epl.protobuf.BandDetails")
	proto.RegisterType((*Asset)(nil), "epl.protobuf.Asset")
	proto.RegisterType((*StacMetadata)(nil), "epl.protobuf.StacMetadata")
	proto.RegisterMapType((map[string]*Asset)(nil), "epl.protobuf.StacMetadata.AssetsEntry")
	proto.RegisterType((*Dtr)(nil), "epl.protobuf.Dtr")
	proto.RegisterType((*StacUpsertResponse)(nil), "epl.protobuf.StacUpsertResponse")
	proto.RegisterType((*Sar)(nil), "epl.protobuf.Sar")
	proto.RegisterType((*Eo)(nil), "epl.protobuf.Eo")
	proto.RegisterType((*EoRequest)(nil), "epl.protobuf.EoRequest")
	proto.RegisterEnum("epl.protobuf.AssetType", AssetType_name, AssetType_value)
	proto.RegisterEnum("epl.protobuf.CloudPlatform", CloudPlatform_name, CloudPlatform_value)
	proto.RegisterEnum("epl.protobuf.Sar_Platform", Sar_Platform_name, Sar_Platform_value)
	proto.RegisterEnum("epl.protobuf.Sar_Instrument", Sar_Instrument_name, Sar_Instrument_value)
	proto.RegisterEnum("epl.protobuf.Eo_Platform", Eo_Platform_name, Eo_Platform_value)
	proto.RegisterEnum("epl.protobuf.Eo_Instrument", Eo_Instrument_name, Eo_Instrument_value)
	proto.RegisterEnum("epl.protobuf.Eo_Constellation", Eo_Constellation_name, Eo_Constellation_value)
	proto.RegisterEnum("epl.protobuf.Eo_Band", Eo_Band_name, Eo_Band_value)
}

func init() { proto.RegisterFile("epl/protobuf/stac.proto", fileDescriptor_stac_83a4dab508ec3e2a) }

var fileDescriptor_stac_83a4dab508ec3e2a = []byte{
	// 1811 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xcd, 0x72, 0x1b, 0xc7,
	0x11, 0x36, 0xfe, 0x08, 0xa0, 0x41, 0x50, 0xc3, 0xb1, 0x6c, 0x41, 0x94, 0x63, 0x33, 0x70, 0x2a,
	0x25, 0xcb, 0x31, 0x29, 0x42, 0x22, 0x4d, 0x3b, 0x76, 0x4a, 0x0b, 0x60, 0x41, 0x42, 0x01, 0x16,
	0xa8, 0x59, 0x50, 0x74, 0xf9, 0xb2, 0x35, 0xdc, 0x1d, 0x80, 0x88, 0x17, 0xbb, 0xeb, 0xdd, 0x01,
	0x25, 0xe6, 0xc4, 0xaa, 0xbc, 0x42, 0xce, 0x39, 0xf8, 0x2d, 0x72, 0xcc, 0x2b, 0xe4, 0x01, 0x72,
	0xc8, 0x5b, 0xe4, 0x96, 0x9a, 0xd9, 0x1f, 0x2c, 0xf8, 0x5f, 0xba, 0xf9, 0xa4, 0xe9, 0xe9, 0xef,
	0xeb, 0xed, 0xe9, 0xe9, 0xfe, 0x06, 0x14, 0x3c, 0x62, 0x9e, 0xbd, 0xed, 0xf9, 0x2e, 0x77, 0x4f,
	0xe6, 0xe3, 0xed, 0x80, 0x53, 0x73, 0x4b, 0x5a, 0x78, 0x95, 0x79, 0xf6, 0x56, 0xec, 0xd8, 0xf8,
	0x6c, 0xe2, 0xba, 0x13, 0x9b, 0x2d, 0x90, 0x7c, 0x3a, 0x63, 0x01, 0xa7, 0x33, 0x2f, 0xc4, 0x6c,
	0x7c, 0x7a, 0x19, 0xf0, 0xd6, 0xa7, 0x9e, 0xc7, 0xfc, 0x20, 0xf2, 0x3f, 0xbe, 0xec, 0xa7, 0xce,
	0x79, 0xe4, 0x7a, 0xb2, 0x94, 0xc2, 0x84, 0xb9, 0x33, 0xc6, 0xfd, 0xd8, 0x59, 0x5b, 0x72, 0xfe,
	0x3c, 0x67, 0xb1, 0xa7, 0xfe, 0xb7, 0x02, 0xac, 0xeb, 0x9c, 0x9a, 0x3a, 0xa3, 0xbe, 0x79, 0x4a,
	0xd8, 0xcf, 0x73, 0x16, 0x70, 0xfc, 0x05, 0x64, 0xa7, 0x56, 0x2d, 0xb3, 0x99, 0x79, 0x5a, 0x69,
	0x3c, 0xde, 0x4a, 0x9f, 0x61, 0x4b, 0xe7, 0xfe, 0xd4, 0x99, 0x74, 0xa6, 0xcc, 0xb6, 0x48, 0x76,
	0x6a, 0xe1, 0x3d, 0x28, 0xc5, 0x1f, 0xab, 0x65, 0x25, 0x61, 0x63, 0x99, 0x70, 0x10, 0x79, 0xdb,
	0x94, 0x53, 0x92, 0x60, 0xf1, 0x16, 0xe4, 0x4f, 0x4e, 0xdc, 0x77, 0xb5, 0xdc, 0x75, 0x1c, 0xd5,
	0x39, 0x63, 0xb6, 0xeb, 0x31, 0xc9, 0x91, 0x38, 0x7c, 0x08, 0x28, 0xe6, 0x1a, 0x7e, 0x98, 0x66,
	0x2d, 0x2f, 0xb9, 0xbf, 0xb9, 0xfe, 0x7b, 0xd1, 0x59, 0xc8, 0x83, 0xc9, 0xf2, 0x06, 0x6e, 0x01,
	0xf6, 0x7c, 0xd7, 0x63, 0x3e, 0x9f, 0xb2, 0x20, 0x89, 0x55, 0x90, 0xb1, 0x1e, 0x6e, 0x85, 0x15,
	0x5e, 0x84, 0x53, 0x9c, 0x73, 0xb2, 0xbe, 0xc0, 0xc7, 0x41, 0xf6, 0xa1, 0x64, 0x51, 0xce, 0xc4,
	0x05, 0xd6, 0x56, 0x24, 0xf5, 0x93, 0xe5, 0x34, 0x46, 0xf1, 0xd5, 0x86, 0xa5, 0x4a, 0xd0, 0x82,
	0xe9, 0x9e, 0x04, 0xcc, 0x3f, 0x63, 0x56, 0xad, 0x78, 0x1f, 0x66, 0x8c, 0xc6, 0xdf, 0x42, 0xd9,
	0xf3, 0x5d, 0x93, 0x05, 0x01, 0xb3, 0x6a, 0xa5, 0x7b, 0x50, 0x17, 0x70, 0xbc, 0x07, 0xc5, 0xb9,
	0x27, 0x72, 0xb0, 0x6a, 0xe5, 0x7b, 0x30, 0x63, 0x30, 0xde, 0x03, 0x60, 0x6e, 0x52, 0x24, 0x90,
	0xd4, 0x47, 0x97, 0x2e, 0xcb, 0x8d, 0x4b, 0x5d, 0x66, 0xf1, 0x12, 0x3f, 0x84, 0x82, 0x3d, 0x9d,
	0x4d, 0x79, 0xad, 0xb2, 0x99, 0x79, 0x5a, 0x25, 0xa1, 0x81, 0x3f, 0x86, 0x15, 0x77, 0x3c, 0x0e,
	0x18, 0xaf, 0xad, 0x6e, 0x66, 0x9e, 0xe6, 0x49, 0x64, 0xd5, 0xff, 0x9b, 0x85, 0x4a, 0x93, 0x3a,
	0x56, 0x9b, 0x71, 0x3a, 0xb5, 0x03, 0x8c, 0x21, 0xef, 0xd0, 0x19, 0x93, 0x1d, 0x58, 0x26, 0x72,
	0x8d, 0x3f, 0x83, 0x8a, 0xe9, 0xce, 0x66, 0xae, 0x63, 0x48, 0x57, 0x56, 0xba, 0x20, 0xdc, 0xd2,
	0x04, 0x60, 0x13, 0x2a, 0x16, 0x0b, 0x4c, 0x7f, 0xea, 0xf1, 0xa9, 0xeb, 0xc8, 0xc6, 0x2a, 0x93,
	0xf4, 0x16, 0xfe, 0x0a, 0x72, 0x93, 0xc0, 0x8a, 0xda, 0xe6, 0xc9, 0x95, 0xab, 0xee, 0xd8, 0x2e,
	0xe5, 0x6f, 0xa8, 0x3d, 0x67, 0x44, 0xe0, 0xf0, 0xd7, 0x50, 0xa2, 0xa6, 0x39, 0xf7, 0xa9, 0x79,
	0x1e, 0xb5, 0xc7, 0xad, 0x9c, 0x04, 0x8c, 0x0f, 0x61, 0xdd, 0x64, 0x0e, 0x67, 0xbe, 0xf1, 0x96,
	0x9e, 0x31, 0x9b, 0x39, 0x13, 0x7e, 0x1a, 0x75, 0xc9, 0xad, 0x11, 0x50, 0xc8, 0x3a, 0x4e, 0x48,
	0xf8, 0x35, 0x7c, 0x38, 0x9e, 0xdb, 0xb6, 0xf1, 0x76, 0x6a, 0xf1, 0x53, 0xe3, 0x94, 0xda, 0x63,
	0x63, 0x46, 0xdf, 0x45, 0x7d, 0x73, 0x7b, 0x2c, 0xc1, 0x3b, 0x16, 0xb4, 0x43, 0x6a, 0x8f, 0xfb,
	0xf4, 0x5d, 0xfd, 0x3f, 0x59, 0x28, 0x28, 0x41, 0xc0, 0xb8, 0x28, 0xef, 0xa9, 0xcf, 0xc6, 0x71,
	0x79, 0xc5, 0x5a, 0xec, 0xf1, 0x73, 0x2f, 0xae, 0xab, 0x5c, 0xe3, 0xe7, 0x50, 0x62, 0xae, 0x71,
	0x42, 0x1d, 0x2b, 0x90, 0xe5, 0x5c, 0x6b, 0x7c, 0x74, 0xf9, 0xea, 0xb7, 0xc4, 0xb5, 0x91, 0x22,
	0x73, 0xc5, 0xbf, 0x81, 0x68, 0x17, 0x2a, 0x3e, 0x61, 0xc8, 0x58, 0x79, 0xc9, 0xb9, 0xd4, 0x2e,
	0x32, 0x85, 0xd1, 0xb9, 0xc7, 0x48, 0x99, 0xc6, 0x4b, 0xdc, 0x84, 0x35, 0xd3, 0x76, 0xe7, 0x96,
	0xe1, 0xd9, 0x94, 0x8f, 0x5d, 0x7f, 0x26, 0x0b, 0xbe, 0xd6, 0x78, 0xb2, 0xcc, 0x6d, 0x09, 0xcc,
	0x30, 0x82, 0x90, 0xaa, 0x99, 0x36, 0xf1, 0x6f, 0x61, 0xf5, 0x64, 0x6e, 0xfe, 0xc4, 0xb8, 0xe1,
	0xbe, 0x75, 0x98, 0x2f, 0x0b, 0x5e, 0x26, 0x95, 0x70, 0x6f, 0x20, 0xb6, 0xf0, 0xe7, 0x50, 0x8d,
	0x20, 0x3e, 0x9b, 0x88, 0x26, 0x29, 0x4a, 0x4c, 0xc4, 0x23, 0x72, 0x4f, 0x34, 0x69, 0x68, 0xcb,
	0x19, 0x2b, 0x93, 0xc8, 0x12, 0x0d, 0xe8, 0x9e, 0xfc, 0x85, 0x99, 0xdc, 0xf0, 0x28, 0x3f, 0x95,
	0x63, 0x54, 0x26, 0x10, 0x6e, 0x0d, 0x29, 0x3f, 0xad, 0xff, 0xa3, 0x00, 0xab, 0x42, 0x4b, 0xfb,
	0x8c, 0x53, 0x8b, 0x72, 0x8a, 0xd7, 0x12, 0x19, 0x2d, 0x5f, 0xd1, 0xca, 0xdc, 0x7b, 0x68, 0x65,
	0xfe, 0x9e, 0x5a, 0xf9, 0x12, 0x60, 0xa1, 0x58, 0xb7, 0x2a, 0x5b, 0x0a, 0x87, 0xff, 0x04, 0x2b,
	0xf2, 0x42, 0x82, 0x5a, 0x71, 0x33, 0xf7, 0xb4, 0xd2, 0xf8, 0xfd, 0x65, 0xe1, 0x5f, 0x9c, 0x2c,
	0xbc, 0xc4, 0x40, 0x75, 0x84, 0xac, 0x46, 0x2c, 0x71, 0xba, 0x44, 0x12, 0x4b, 0x51, 0xa6, 0x97,
	0xbf, 0x99, 0xc8, 0x4c, 0x4a, 0x10, 0xf7, 0x52, 0x82, 0x58, 0xbe, 0x9b, 0x97, 0xc8, 0xe1, 0x7e,
	0x5a, 0x0e, 0x2b, 0x77, 0x12, 0x53, 0x62, 0xf8, 0x72, 0x21, 0x86, 0xab, 0x77, 0xf2, 0x12, 0x29,
	0xdc, 0x84, 0x2c, 0x73, 0x6b, 0x55, 0x49, 0x40, 0x57, 0x24, 0x30, 0xcb, 0x5c, 0xfc, 0x39, 0xe4,
	0x02, 0xea, 0xd7, 0xd6, 0x24, 0x64, 0xfd, 0x52, 0xf9, 0xa8, 0x4f, 0x84, 0x57, 0x80, 0x2c, 0xee,
	0xd7, 0x1e, 0x5c, 0x07, 0x6a, 0x73, 0x9f, 0x08, 0xef, 0x86, 0x06, 0x95, 0x54, 0x89, 0x31, 0x82,
	0xdc, 0x4f, 0xec, 0x3c, 0xea, 0x24, 0xb1, 0xc4, 0x5f, 0x40, 0xe1, 0x4c, 0xcc, 0x79, 0xf4, 0xe6,
	0x7e, 0x78, 0xcd, 0x8c, 0x91, 0x10, 0xf1, 0x6d, 0x76, 0x3f, 0xf3, 0x3a, 0x5f, 0x5a, 0x41, 0xc5,
	0x3a, 0x83, 0x5c, 0x9b, 0xfb, 0xf8, 0x39, 0x14, 0x02, 0x4e, 0x7d, 0x1e, 0x3d, 0xf0, 0xb7, 0x1d,
	0x3e, 0x04, 0xe2, 0x3f, 0x40, 0x8e, 0x39, 0x56, 0xf2, 0xbe, 0xdf, 0x8c, 0x17, 0xb0, 0xfa, 0x18,
	0xb0, 0x68, 0x96, 0x23, 0x2f, 0x60, 0x3e, 0x27, 0x2c, 0xf0, 0x5c, 0x27, 0x60, 0x62, 0xac, 0x02,
	0x4e, 0xf9, 0x3c, 0x88, 0x8e, 0x11, 0x59, 0x62, 0xac, 0xc2, 0x95, 0x61, 0xba, 0x56, 0x78, 0x9e,
	0x02, 0x81, 0x70, 0xab, 0xe5, 0x5a, 0x0c, 0x3f, 0x82, 0xa2, 0xe8, 0x39, 0x63, 0x6a, 0x45, 0x9a,
	0xbe, 0x22, 0xcc, 0xae, 0x55, 0xff, 0x25, 0x03, 0x39, 0x9d, 0xfa, 0xa2, 0x81, 0x12, 0xd9, 0xc8,
	0x48, 0xd9, 0xd8, 0xb8, 0x52, 0xfb, 0xad, 0x44, 0x35, 0x12, 0x6c, 0xfd, 0x7b, 0x28, 0x25, 0xe2,
	0xf1, 0x10, 0xd0, 0x91, 0xf6, 0x67, 0x6d, 0x70, 0xac, 0x19, 0xc3, 0x9e, 0x32, 0xea, 0x0c, 0x48,
	0x1f, 0x7d, 0x80, 0x2b, 0x50, 0x54, 0xb5, 0x37, 0x5d, 0x5d, 0x19, 0xa1, 0x0c, 0x5e, 0x03, 0xd0,
	0x55, 0x6d, 0xd4, 0xd5, 0xd4, 0xde, 0x8e, 0x82, 0xb2, 0xf5, 0xdf, 0x01, 0x74, 0x9d, 0x80, 0xfb,
	0xf3, 0x19, 0x73, 0xc4, 0xd3, 0x86, 0xe3, 0x00, 0x5d, 0x4d, 0x1f, 0x91, 0xa3, 0xbe, 0xaa, 0x8d,
	0xd0, 0x07, 0xf5, 0xff, 0x95, 0x20, 0xab, 0xba, 0x42, 0x5e, 0x99, 0x17, 0x4c, 0x64, 0x7e, 0x55,
	0x22, 0xd7, 0x78, 0x37, 0x95, 0x77, 0x56, 0xe6, 0xfd, 0xf8, 0x8a, 0xbc, 0x5e, 0x4d, 0x1b, 0xff,
	0x11, 0x60, 0x9a, 0x7c, 0x37, 0xd2, 0xe5, 0x27, 0x57, 0x88, 0x8b, 0xd4, 0x48, 0x0a, 0x8e, 0xdb,
	0x50, 0x35, 0x5d, 0x27, 0xe0, 0xcc, 0xb6, 0xa9, 0x7c, 0x26, 0x43, 0x8d, 0xfe, 0xf4, 0x0a, 0xbf,
	0x95, 0x46, 0x91, 0x65, 0x12, 0xfe, 0x0e, 0x2a, 0xc1, 0xdc, 0x31, 0xe8, 0x5f, 0xa7, 0xb3, 0x39,
	0x3f, 0xbd, 0xcf, 0xe3, 0x08, 0xc1, 0xdc, 0x51, 0x42, 0x38, 0x7e, 0x05, 0x55, 0xc1, 0x66, 0x36,
	0x3b, 0x0b, 0x73, 0xb8, 0xc7, 0xd3, 0xb8, 0x1a, 0xcc, 0x1d, 0x35, 0x26, 0xc4, 0x0f, 0x79, 0xf1,
	0x9e, 0x0f, 0xf9, 0x3e, 0x94, 0xdd, 0xf1, 0xd8, 0x70, 0xa8, 0x35, 0xf5, 0x23, 0x69, 0xba, 0xfd,
	0x25, 0x77, 0xc7, 0x63, 0x4d, 0x80, 0xf1, 0x2e, 0x14, 0xe3, 0x43, 0x96, 0xef, 0xe6, 0xc5, 0x58,
	0x51, 0x9f, 0xf0, 0x39, 0x33, 0xdd, 0x33, 0xe6, 0x47, 0x3f, 0x9b, 0x6e, 0xaf, 0x8f, 0xc4, 0xb7,
	0x04, 0x1c, 0x7f, 0x09, 0x85, 0xf0, 0xcd, 0xad, 0xdc, 0xf6, 0xe6, 0x86, 0x98, 0xfa, 0x3f, 0x33,
	0x77, 0x76, 0x71, 0x15, 0xca, 0x3d, 0x45, 0x6b, 0xeb, 0xca, 0xc8, 0xd8, 0x41, 0xd9, 0xb4, 0xd9,
	0x40, 0xf9, 0xb4, 0xf9, 0x02, 0x95, 0xf0, 0x03, 0xa8, 0x24, 0xe0, 0xc6, 0x0b, 0xb4, 0x96, 0xf6,
	0xbf, 0x44, 0x28, 0x6d, 0xee, 0xa2, 0x4d, 0x31, 0x14, 0x89, 0x77, 0x17, 0x3d, 0x4f, 0xbb, 0xbf,
	0x46, 0xaf, 0xf0, 0xda, 0xc2, 0xdc, 0x47, 0x17, 0x19, 0xbc, 0x0a, 0x45, 0xfd, 0xb8, 0xdb, 0x11,
	0x5f, 0xbe, 0xc8, 0xd6, 0x9b, 0xf7, 0x99, 0x20, 0x5c, 0x84, 0xdc, 0xa0, 0xd7, 0x45, 0x59, 0x5c,
	0x82, 0xfc, 0xa8, 0x4b, 0x74, 0x94, 0xc7, 0x65, 0x28, 0x0c, 0x07, 0x7d, 0x63, 0x07, 0x95, 0xea,
	0x6f, 0xa0, 0xba, 0xd4, 0xaa, 0xf8, 0x31, 0x7c, 0x14, 0x87, 0x69, 0x0d, 0x34, 0x7d, 0xa4, 0xf6,
	0x7a, 0xca, 0xa8, 0x3b, 0xd0, 0xc2, 0x71, 0x8e, 0xb2, 0x09, 0xa3, 0x69, 0x4a, 0x77, 0x88, 0xf2,
	0x62, 0x35, 0xd4, 0x06, 0x0a, 0x2a, 0x89, 0xb8, 0x32, 0x3d, 0x84, 0xea, 0xff, 0xca, 0x40, 0x5e,
	0xd4, 0x19, 0x23, 0x58, 0x8d, 0xe3, 0x35, 0x15, 0xad, 0x1d, 0x86, 0x69, 0x0d, 0x14, 0x7d, 0xa4,
	0xf4, 0xc2, 0x30, 0xcd, 0xde, 0x91, 0x1a, 0x26, 0x75, 0x40, 0x54, 0x55, 0x43, 0x25, 0x91, 0x32,
	0x51, 0xdb, 0x08, 0xc9, 0xc5, 0x41, 0x13, 0x7d, 0x82, 0xd7, 0xa1, 0xaa, 0xa9, 0x0a, 0x31, 0xba,
	0x5a, 0x87, 0x28, 0xc2, 0xb7, 0x29, 0xf0, 0xe4, 0xa0, 0xd9, 0x25, 0xe8, 0x3b, 0x11, 0x51, 0x3f,
	0xee, 0x12, 0x63, 0x67, 0x0f, 0xbd, 0x8a, 0x6a, 0x44, 0x8c, 0x46, 0x43, 0x54, 0x6c, 0x1d, 0x56,
	0x87, 0x8a, 0xd6, 0x3a, 0x24, 0x83, 0xbe, 0x32, 0xea, 0xb6, 0xd0, 0x45, 0x16, 0x57, 0x60, 0xa5,
	0xd5, 0x25, 0xe4, 0x48, 0x47, 0x17, 0x79, 0x81, 0xee, 0x49, 0xea, 0x0e, 0xba, 0x28, 0x2d, 0xac,
	0x06, 0xba, 0x40, 0xf5, 0x7f, 0xe7, 0xa1, 0x9c, 0xfc, 0x3a, 0x5f, 0x92, 0xa0, 0xc2, 0xaf, 0x5e,
	0x82, 0xbe, 0xb9, 0x4e, 0x82, 0x6a, 0xcb, 0x31, 0xe4, 0x7c, 0x85, 0x7f, 0xd0, 0xa4, 0xf5, 0xe7,
	0xfb, 0xeb, 0xf5, 0xe7, 0x66, 0xf2, 0xb2, 0xf8, 0x3c, 0x4b, 0x8b, 0xcf, 0xcd, 0x24, 0xa9, 0x3c,
	0xbb, 0x57, 0x95, 0xe7, 0x66, 0xc6, 0x42, 0x76, 0x1a, 0x97, 0x65, 0xe7, 0x66, 0x52, 0xa2, 0x39,
	0xdf, 0x5c, 0xa7, 0x39, 0xb7, 0x14, 0xe4, 0x3d, 0x05, 0xe7, 0xd9, 0xdf, 0x33, 0x50, 0x4e, 0x7e,
	0xc3, 0x8b, 0xbe, 0x8e, 0xa7, 0x43, 0xd1, 0x75, 0x55, 0xcc, 0x6b, 0x09, 0xf2, 0xaf, 0x87, 0xea,
	0x01, 0xca, 0x88, 0xb6, 0x3e, 0x50, 0x07, 0xa3, 0x6e, 0xa7, 0x13, 0x0e, 0x4a, 0x4f, 0x25, 0x2d,
	0x94, 0x13, 0x43, 0xd1, 0x27, 0x1d, 0x94, 0x17, 0xfe, 0x3e, 0xe9, 0x18, 0xdd, 0xf6, 0x0f, 0xa8,
	0x10, 0x1b, 0x3f, 0xf4, 0x7b, 0x68, 0x45, 0xc8, 0x4a, 0x6b, 0x60, 0xc4, 0xe4, 0xa2, 0x9c, 0x23,
	0xe5, 0x18, 0x95, 0x84, 0xbe, 0x8c, 0x0e, 0x8f, 0xfa, 0x4d, 0x4d, 0xe9, 0xf6, 0x50, 0x39, 0x94,
	0x84, 0x4e, 0x07, 0xc1, 0xb3, 0x43, 0xa8, 0x2e, 0xfd, 0x75, 0x80, 0x37, 0xe0, 0xe3, 0x44, 0x07,
	0x7a, 0x83, 0xa3, 0x76, 0x5a, 0x11, 0x8b, 0x90, 0x53, 0x8e, 0x75, 0x94, 0x11, 0x8b, 0x83, 0xd6,
	0x10, 0x65, 0xc5, 0x30, 0x2a, 0x3f, 0x1e, 0x11, 0x15, 0xe5, 0x9a, 0x3a, 0x20, 0xd3, 0x9d, 0x2d,
	0xd5, 0xa0, 0x59, 0x16, 0x3f, 0x68, 0x86, 0xc2, 0x1a, 0x66, 0x7e, 0xfc, 0x72, 0x32, 0xe5, 0xa7,
	0xf3, 0x93, 0x2d, 0xd3, 0x9d, 0x6d, 0x4f, 0x98, 0xfb, 0xd5, 0xc4, 0xf7, 0xcc, 0x6d, 0xea, 0x4d,
	0xb7, 0x27, 0xae, 0x4d, 0x9d, 0xc9, 0x76, 0xfa, 0x3f, 0x5b, 0x7e, 0xc9, 0xe6, 0xf5, 0xd1, 0xb0,
	0x79, 0xb2, 0x22, 0x37, 0x5e, 0xfc, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x60, 0x79, 0x98, 0x2a,
	0x12, 0x00, 0x00,
}
