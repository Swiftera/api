// Code generated by protoc-gen-go. DO NOT EDIT.
// source: epl/protobuf/stac.proto

package protobuf // import "github.com/geo-grpc/api/golang/epl/protobuf"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EOPlatform int32

const (
	EOPlatform_UNKNOWN_EO_PLATFORM EOPlatform = 0
	EOPlatform_LANDSAT_8           EOPlatform = 1
	EOPlatform_NAIP                EOPlatform = 2
)

var EOPlatform_name = map[int32]string{
	0: "UNKNOWN_EO_PLATFORM",
	1: "LANDSAT_8",
	2: "NAIP",
}
var EOPlatform_value = map[string]int32{
	"UNKNOWN_EO_PLATFORM": 0,
	"LANDSAT_8":           1,
	"NAIP":                2,
}

func (x EOPlatform) String() string {
	return proto.EnumName(EOPlatform_name, int32(x))
}
func (EOPlatform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{0}
}

type EOInstrument int32

const (
	EOInstrument_UNKNOWN_EO_INSTRUMENT EOInstrument = 0
)

var EOInstrument_name = map[int32]string{
	0: "UNKNOWN_EO_INSTRUMENT",
}
var EOInstrument_value = map[string]int32{
	"UNKNOWN_EO_INSTRUMENT": 0,
}

func (x EOInstrument) String() string {
	return proto.EnumName(EOInstrument_name, int32(x))
}
func (EOInstrument) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{1}
}

type EOBand int32

const (
	EOBand_UNKNOWN_BAND       EOBand = 0
	EOBand_COASTAL_BAND       EOBand = 2
	EOBand_BLUE_BAND          EOBand = 4
	EOBand_GREEN_BAND         EOBand = 8
	EOBand_RED_BAND           EOBand = 16
	EOBand_RGB_BANDS          EOBand = 28
	EOBand_NEAR_INFRARED_BAND EOBand = 32
	EOBand_RGBIR_BANDS        EOBand = 60
	EOBand_SWIR_16_BAND       EOBand = 64
	EOBand_SWIR_22_BAND       EOBand = 128
	EOBand_PANCHROMATIC_BAND  EOBand = 256
	EOBand_CIRRUS_BAND        EOBand = 512
	EOBand_LWIR_11_BAND       EOBand = 1024
	EOBand_LWIR_12_BAND       EOBand = 2048
)

var EOBand_name = map[int32]string{
	0:    "UNKNOWN_BAND",
	2:    "COASTAL_BAND",
	4:    "BLUE_BAND",
	8:    "GREEN_BAND",
	16:   "RED_BAND",
	28:   "RGB_BANDS",
	32:   "NEAR_INFRARED_BAND",
	60:   "RGBIR_BANDS",
	64:   "SWIR_16_BAND",
	128:  "SWIR_22_BAND",
	256:  "PANCHROMATIC_BAND",
	512:  "CIRRUS_BAND",
	1024: "LWIR_11_BAND",
	2048: "LWIR_12_BAND",
}
var EOBand_value = map[string]int32{
	"UNKNOWN_BAND":       0,
	"COASTAL_BAND":       2,
	"BLUE_BAND":          4,
	"GREEN_BAND":         8,
	"RED_BAND":           16,
	"RGB_BANDS":          28,
	"NEAR_INFRARED_BAND": 32,
	"RGBIR_BANDS":        60,
	"SWIR_16_BAND":       64,
	"SWIR_22_BAND":       128,
	"PANCHROMATIC_BAND":  256,
	"CIRRUS_BAND":        512,
	"LWIR_11_BAND":       1024,
	"LWIR_12_BAND":       2048,
}

func (x EOBand) String() string {
	return proto.EnumName(EOBand_name, int32(x))
}
func (EOBand) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{2}
}

type AssetType int32

const (
	AssetType_UNKNOWN_ASSET AssetType = 0
	AssetType_JPEG          AssetType = 1
	AssetType_GEOTIFF       AssetType = 2
	AssetType_LERC          AssetType = 3
	AssetType_MRF           AssetType = 4
	AssetType_MRF_IDX       AssetType = 5
	AssetType_MRF_XML       AssetType = 6
	AssetType_CO_GEOTIFF    AssetType = 7
)

var AssetType_name = map[int32]string{
	0: "UNKNOWN_ASSET",
	1: "JPEG",
	2: "GEOTIFF",
	3: "LERC",
	4: "MRF",
	5: "MRF_IDX",
	6: "MRF_XML",
	7: "CO_GEOTIFF",
}
var AssetType_value = map[string]int32{
	"UNKNOWN_ASSET": 0,
	"JPEG":          1,
	"GEOTIFF":       2,
	"LERC":          3,
	"MRF":           4,
	"MRF_IDX":       5,
	"MRF_XML":       6,
	"CO_GEOTIFF":    7,
}

func (x AssetType) String() string {
	return proto.EnumName(AssetType_name, int32(x))
}
func (AssetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{3}
}

type CloudPlatform int32

const (
	CloudPlatform_UNKNOWN_CLOUD_PLATFORM CloudPlatform = 0
	CloudPlatform_AWS                    CloudPlatform = 1
	CloudPlatform_GCP                    CloudPlatform = 2
	CloudPlatform_AZURE                  CloudPlatform = 3
)

var CloudPlatform_name = map[int32]string{
	0: "UNKNOWN_CLOUD_PLATFORM",
	1: "AWS",
	2: "GCP",
	3: "AZURE",
}
var CloudPlatform_value = map[string]int32{
	"UNKNOWN_CLOUD_PLATFORM": 0,
	"AWS":                    1,
	"GCP":                    2,
	"AZURE":                  3,
}

func (x CloudPlatform) String() string {
	return proto.EnumName(CloudPlatform_name, int32(x))
}
func (CloudPlatform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{4}
}

type StacSearchRequest struct {
	Id                *StringField `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit             uint32       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset            uint64       `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	PropertiesRequest *any.Any     `protobuf:"bytes,8,opt,name=properties_request,json=propertiesRequest,proto3" json:"properties_request,omitempty"`
	EoRequest         *EORequest   `protobuf:"bytes,9,opt,name=eo_request,json=eoRequest,proto3" json:"eo_request,omitempty"`
	//    oneof
	Bbox                 *EnvelopeData    `protobuf:"bytes,14,opt,name=bbox,proto3" json:"bbox,omitempty"`
	Geometry             *GeometryData    `protobuf:"bytes,15,opt,name=geometry,proto3" json:"geometry,omitempty"`
	GeometryRequest      *GeometryRequest `protobuf:"bytes,16,opt,name=geometry_request,json=geometryRequest,proto3" json:"geometry_request,omitempty"`
	Datetime             *TimestampField  `protobuf:"bytes,18,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Observed             *TimestampField  `protobuf:"bytes,19,opt,name=observed,proto3" json:"observed,omitempty"`
	Updated              *TimestampField  `protobuf:"bytes,20,opt,name=updated,proto3" json:"updated,omitempty"`
	SrcImgDate           *TimestampField  `protobuf:"bytes,201,opt,name=src_img_date,json=srcImgDate,proto3" json:"src_img_date,omitempty"`
	Usgsid               *StringField     `protobuf:"bytes,202,opt,name=usgsid,proto3" json:"usgsid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StacSearchRequest) Reset()         { *m = StacSearchRequest{} }
func (m *StacSearchRequest) String() string { return proto.CompactTextString(m) }
func (*StacSearchRequest) ProtoMessage()    {}
func (*StacSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{0}
}
func (m *StacSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StacSearchRequest.Unmarshal(m, b)
}
func (m *StacSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StacSearchRequest.Marshal(b, m, deterministic)
}
func (dst *StacSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StacSearchRequest.Merge(dst, src)
}
func (m *StacSearchRequest) XXX_Size() int {
	return xxx_messageInfo_StacSearchRequest.Size(m)
}
func (m *StacSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StacSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StacSearchRequest proto.InternalMessageInfo

func (m *StacSearchRequest) GetId() *StringField {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StacSearchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *StacSearchRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *StacSearchRequest) GetPropertiesRequest() *any.Any {
	if m != nil {
		return m.PropertiesRequest
	}
	return nil
}

func (m *StacSearchRequest) GetEoRequest() *EORequest {
	if m != nil {
		return m.EoRequest
	}
	return nil
}

func (m *StacSearchRequest) GetBbox() *EnvelopeData {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *StacSearchRequest) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *StacSearchRequest) GetGeometryRequest() *GeometryRequest {
	if m != nil {
		return m.GeometryRequest
	}
	return nil
}

func (m *StacSearchRequest) GetDatetime() *TimestampField {
	if m != nil {
		return m.Datetime
	}
	return nil
}

func (m *StacSearchRequest) GetObserved() *TimestampField {
	if m != nil {
		return m.Observed
	}
	return nil
}

func (m *StacSearchRequest) GetUpdated() *TimestampField {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *StacSearchRequest) GetSrcImgDate() *TimestampField {
	if m != nil {
		return m.SrcImgDate
	}
	return nil
}

func (m *StacSearchRequest) GetUsgsid() *StringField {
	if m != nil {
		return m.Usgsid
	}
	return nil
}

type EORequest struct {
	EoSunAzimuth         *FloatField `protobuf:"bytes,8,opt,name=eo_sun_azimuth,json=eoSunAzimuth,proto3" json:"eo_sun_azimuth,omitempty"`
	EoSunElevation       *FloatField `protobuf:"bytes,9,opt,name=eo_sun_elevation,json=eoSunElevation,proto3" json:"eo_sun_elevation,omitempty"`
	EoGsd                *FloatField `protobuf:"bytes,10,opt,name=eo_gsd,json=eoGsd,proto3" json:"eo_gsd,omitempty"`
	EoOffNadir           *FloatField `protobuf:"bytes,11,opt,name=eo_off_nadir,json=eoOffNadir,proto3" json:"eo_off_nadir,omitempty"`
	EoAzimuth            *FloatField `protobuf:"bytes,12,opt,name=eo_azimuth,json=eoAzimuth,proto3" json:"eo_azimuth,omitempty"`
	EoCloudCover         *FloatField `protobuf:"bytes,13,opt,name=eo_cloud_cover,json=eoCloudCover,proto3" json:"eo_cloud_cover,omitempty"`
	EoBands              EOBand      `protobuf:"varint,17,opt,name=eo_bands,json=eoBands,proto3,enum=epl.protobuf.EOBand" json:"eo_bands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EORequest) Reset()         { *m = EORequest{} }
func (m *EORequest) String() string { return proto.CompactTextString(m) }
func (*EORequest) ProtoMessage()    {}
func (*EORequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{1}
}
func (m *EORequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EORequest.Unmarshal(m, b)
}
func (m *EORequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EORequest.Marshal(b, m, deterministic)
}
func (dst *EORequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EORequest.Merge(dst, src)
}
func (m *EORequest) XXX_Size() int {
	return xxx_messageInfo_EORequest.Size(m)
}
func (m *EORequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EORequest.DiscardUnknown(m)
}

var xxx_messageInfo_EORequest proto.InternalMessageInfo

func (m *EORequest) GetEoSunAzimuth() *FloatField {
	if m != nil {
		return m.EoSunAzimuth
	}
	return nil
}

func (m *EORequest) GetEoSunElevation() *FloatField {
	if m != nil {
		return m.EoSunElevation
	}
	return nil
}

func (m *EORequest) GetEoGsd() *FloatField {
	if m != nil {
		return m.EoGsd
	}
	return nil
}

func (m *EORequest) GetEoOffNadir() *FloatField {
	if m != nil {
		return m.EoOffNadir
	}
	return nil
}

func (m *EORequest) GetEoAzimuth() *FloatField {
	if m != nil {
		return m.EoAzimuth
	}
	return nil
}

func (m *EORequest) GetEoCloudCover() *FloatField {
	if m != nil {
		return m.EoCloudCover
	}
	return nil
}

func (m *EORequest) GetEoBands() EOBand {
	if m != nil {
		return m.EoBands
	}
	return EOBand_UNKNOWN_BAND
}

// Right now this isn't included in the response as it's a bit messy
type BandDetails struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CommonName           string               `protobuf:"bytes,2,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Gsd                  *wrappers.FloatValue `protobuf:"bytes,4,opt,name=gsd,proto3" json:"gsd,omitempty"`
	Accuracy             *wrappers.FloatValue `protobuf:"bytes,5,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	CenterWavelength     *wrappers.FloatValue `protobuf:"bytes,6,opt,name=center_wavelength,json=centerWavelength,proto3" json:"center_wavelength,omitempty"`
	FullWidthHalfMax     *wrappers.FloatValue `protobuf:"bytes,7,opt,name=full_width_half_max,json=fullWidthHalfMax,proto3" json:"full_width_half_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BandDetails) Reset()         { *m = BandDetails{} }
func (m *BandDetails) String() string { return proto.CompactTextString(m) }
func (*BandDetails) ProtoMessage()    {}
func (*BandDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{2}
}
func (m *BandDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandDetails.Unmarshal(m, b)
}
func (m *BandDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandDetails.Marshal(b, m, deterministic)
}
func (dst *BandDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandDetails.Merge(dst, src)
}
func (m *BandDetails) XXX_Size() int {
	return xxx_messageInfo_BandDetails.Size(m)
}
func (m *BandDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_BandDetails.DiscardUnknown(m)
}

var xxx_messageInfo_BandDetails proto.InternalMessageInfo

func (m *BandDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BandDetails) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *BandDetails) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BandDetails) GetGsd() *wrappers.FloatValue {
	if m != nil {
		return m.Gsd
	}
	return nil
}

func (m *BandDetails) GetAccuracy() *wrappers.FloatValue {
	if m != nil {
		return m.Accuracy
	}
	return nil
}

func (m *BandDetails) GetCenterWavelength() *wrappers.FloatValue {
	if m != nil {
		return m.CenterWavelength
	}
	return nil
}

func (m *BandDetails) GetFullWidthHalfMax() *wrappers.FloatValue {
	if m != nil {
		return m.FullWidthHalfMax
	}
	return nil
}

type Asset struct {
	Href string `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// https://github.com/radiantearth/stac-spec/blob/612ee4fb4f979c049d2416e7f5374a5301b8a277/extensions/eo/README.md
	EoBands              EOBand        `protobuf:"varint,3,opt,name=eo_bands,json=eoBands,proto3,enum=epl.protobuf.EOBand" json:"eo_bands,omitempty"`
	AssetType            AssetType     `protobuf:"varint,4,opt,name=asset_type,json=assetType,proto3,enum=epl.protobuf.AssetType" json:"asset_type,omitempty"`
	CloudPlatform        CloudPlatform `protobuf:"varint,5,opt,name=cloud_platform,json=cloudPlatform,proto3,enum=epl.protobuf.CloudPlatform" json:"cloud_platform,omitempty"`
	BucketOwner          string        `protobuf:"bytes,6,opt,name=bucket_owner,json=bucketOwner,proto3" json:"bucket_owner,omitempty"`
	BucketRegion         string        `protobuf:"bytes,7,opt,name=bucket_region,json=bucketRegion,proto3" json:"bucket_region,omitempty"`
	Bucket               string        `protobuf:"bytes,8,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ObjectPath           string        `protobuf:"bytes,9,opt,name=object_path,json=objectPath,proto3" json:"object_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Asset) Reset()         { *m = Asset{} }
func (m *Asset) String() string { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()    {}
func (*Asset) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{3}
}
func (m *Asset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Asset.Unmarshal(m, b)
}
func (m *Asset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Asset.Marshal(b, m, deterministic)
}
func (dst *Asset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Asset.Merge(dst, src)
}
func (m *Asset) XXX_Size() int {
	return xxx_messageInfo_Asset.Size(m)
}
func (m *Asset) XXX_DiscardUnknown() {
	xxx_messageInfo_Asset.DiscardUnknown(m)
}

var xxx_messageInfo_Asset proto.InternalMessageInfo

func (m *Asset) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *Asset) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Asset) GetEoBands() EOBand {
	if m != nil {
		return m.EoBands
	}
	return EOBand_UNKNOWN_BAND
}

func (m *Asset) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_UNKNOWN_ASSET
}

func (m *Asset) GetCloudPlatform() CloudPlatform {
	if m != nil {
		return m.CloudPlatform
	}
	return CloudPlatform_UNKNOWN_CLOUD_PLATFORM
}

func (m *Asset) GetBucketOwner() string {
	if m != nil {
		return m.BucketOwner
	}
	return ""
}

func (m *Asset) GetBucketRegion() string {
	if m != nil {
		return m.BucketRegion
	}
	return ""
}

func (m *Asset) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Asset) GetObjectPath() string {
	if m != nil {
		return m.ObjectPath
	}
	return ""
}

type StacMetadata struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 'type" ignored as this isn't geojson
	Geometry             *GeometryData        `protobuf:"bytes,3,opt,name=geometry,proto3" json:"geometry,omitempty"`
	Bbox                 *EnvelopeData        `protobuf:"bytes,4,opt,name=bbox,proto3" json:"bbox,omitempty"`
	Properties           *any.Any             `protobuf:"bytes,5,opt,name=properties,proto3" json:"properties,omitempty"`
	Assets               map[string]*Asset    `protobuf:"bytes,7,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Datetime             *timestamp.Timestamp `protobuf:"bytes,8,opt,name=datetime,proto3" json:"datetime,omitempty"`
	DataObserved         *timestamp.Timestamp `protobuf:"bytes,9,opt,name=data_observed,json=dataObserved,proto3" json:"data_observed,omitempty"`
	DataObservedDuration *duration.Duration   `protobuf:"bytes,10,opt,name=data_observed_duration,json=dataObservedDuration,proto3" json:"data_observed_duration,omitempty"`
	MetadataUpdated      *timestamp.Timestamp `protobuf:"bytes,11,opt,name=metadata_updated,json=metadataUpdated,proto3" json:"metadata_updated,omitempty"`
	DataProcessed        *timestamp.Timestamp `protobuf:"bytes,12,opt,name=data_processed,json=dataProcessed,proto3" json:"data_processed,omitempty"`
	EoProperties         *EOProperties        `protobuf:"bytes,13,opt,name=eo_properties,json=eoProperties,proto3" json:"eo_properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StacMetadata) Reset()         { *m = StacMetadata{} }
func (m *StacMetadata) String() string { return proto.CompactTextString(m) }
func (*StacMetadata) ProtoMessage()    {}
func (*StacMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{4}
}
func (m *StacMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StacMetadata.Unmarshal(m, b)
}
func (m *StacMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StacMetadata.Marshal(b, m, deterministic)
}
func (dst *StacMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StacMetadata.Merge(dst, src)
}
func (m *StacMetadata) XXX_Size() int {
	return xxx_messageInfo_StacMetadata.Size(m)
}
func (m *StacMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_StacMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_StacMetadata proto.InternalMessageInfo

func (m *StacMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StacMetadata) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *StacMetadata) GetBbox() *EnvelopeData {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *StacMetadata) GetProperties() *any.Any {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *StacMetadata) GetAssets() map[string]*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *StacMetadata) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

func (m *StacMetadata) GetDataObserved() *timestamp.Timestamp {
	if m != nil {
		return m.DataObserved
	}
	return nil
}

func (m *StacMetadata) GetDataObservedDuration() *duration.Duration {
	if m != nil {
		return m.DataObservedDuration
	}
	return nil
}

func (m *StacMetadata) GetMetadataUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.MetadataUpdated
	}
	return nil
}

func (m *StacMetadata) GetDataProcessed() *timestamp.Timestamp {
	if m != nil {
		return m.DataProcessed
	}
	return nil
}

func (m *StacMetadata) GetEoProperties() *EOProperties {
	if m != nil {
		return m.EoProperties
	}
	return nil
}

type StacInsertResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	StatusCode           int32    `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StacInsertResponse) Reset()         { *m = StacInsertResponse{} }
func (m *StacInsertResponse) String() string { return proto.CompactTextString(m) }
func (*StacInsertResponse) ProtoMessage()    {}
func (*StacInsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{5}
}
func (m *StacInsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StacInsertResponse.Unmarshal(m, b)
}
func (m *StacInsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StacInsertResponse.Marshal(b, m, deterministic)
}
func (dst *StacInsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StacInsertResponse.Merge(dst, src)
}
func (m *StacInsertResponse) XXX_Size() int {
	return xxx_messageInfo_StacInsertResponse.Size(m)
}
func (m *StacInsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StacInsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StacInsertResponse proto.InternalMessageInfo

func (m *StacInsertResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StacInsertResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

type EOProperties struct {
	EoEpsg       uint32       `protobuf:"varint,1,opt,name=eo_epsg,json=eoEpsg,proto3" json:"eo_epsg,omitempty"`
	EoPlatform   EOPlatform   `protobuf:"varint,2,opt,name=eo_platform,json=eoPlatform,proto3,enum=epl.protobuf.EOPlatform" json:"eo_platform,omitempty"`
	EoInstrument EOInstrument `protobuf:"varint,3,opt,name=eo_instrument,json=eoInstrument,proto3,enum=epl.protobuf.EOInstrument" json:"eo_instrument,omitempty"`
	// Difference from current STAC definition: properties are not nested beneath a properties object
	EoSunAzimuth   *wrappers.FloatValue `protobuf:"bytes,4,opt,name=eo_sun_azimuth,json=eoSunAzimuth,proto3" json:"eo_sun_azimuth,omitempty"`
	EoSunElevation *wrappers.FloatValue `protobuf:"bytes,5,opt,name=eo_sun_elevation,json=eoSunElevation,proto3" json:"eo_sun_elevation,omitempty"`
	EoGsd          *wrappers.FloatValue `protobuf:"bytes,6,opt,name=eo_gsd,json=eoGsd,proto3" json:"eo_gsd,omitempty"`
	EoOffNadir     *wrappers.FloatValue `protobuf:"bytes,7,opt,name=eo_off_nadir,json=eoOffNadir,proto3" json:"eo_off_nadir,omitempty"`
	EoAzimuth      *wrappers.FloatValue `protobuf:"bytes,8,opt,name=eo_azimuth,json=eoAzimuth,proto3" json:"eo_azimuth,omitempty"`
	EoCloudCover   *wrappers.FloatValue `protobuf:"bytes,9,opt,name=eo_cloud_cover,json=eoCloudCover,proto3" json:"eo_cloud_cover,omitempty"`
	// Difference from current STAC definition: bands are just the enums instead of the bandDetails
	// STAC has bands defined twice. once in assets and once in properties. should probably just be
	// once.
	EoBands              EOBand   `protobuf:"varint,10,opt,name=eo_bands,json=eoBands,proto3,enum=epl.protobuf.EOBand" json:"eo_bands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EOProperties) Reset()         { *m = EOProperties{} }
func (m *EOProperties) String() string { return proto.CompactTextString(m) }
func (*EOProperties) ProtoMessage()    {}
func (*EOProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_4fb9fcb00fe2c669, []int{6}
}
func (m *EOProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EOProperties.Unmarshal(m, b)
}
func (m *EOProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EOProperties.Marshal(b, m, deterministic)
}
func (dst *EOProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EOProperties.Merge(dst, src)
}
func (m *EOProperties) XXX_Size() int {
	return xxx_messageInfo_EOProperties.Size(m)
}
func (m *EOProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_EOProperties.DiscardUnknown(m)
}

var xxx_messageInfo_EOProperties proto.InternalMessageInfo

func (m *EOProperties) GetEoEpsg() uint32 {
	if m != nil {
		return m.EoEpsg
	}
	return 0
}

func (m *EOProperties) GetEoPlatform() EOPlatform {
	if m != nil {
		return m.EoPlatform
	}
	return EOPlatform_UNKNOWN_EO_PLATFORM
}

func (m *EOProperties) GetEoInstrument() EOInstrument {
	if m != nil {
		return m.EoInstrument
	}
	return EOInstrument_UNKNOWN_EO_INSTRUMENT
}

func (m *EOProperties) GetEoSunAzimuth() *wrappers.FloatValue {
	if m != nil {
		return m.EoSunAzimuth
	}
	return nil
}

func (m *EOProperties) GetEoSunElevation() *wrappers.FloatValue {
	if m != nil {
		return m.EoSunElevation
	}
	return nil
}

func (m *EOProperties) GetEoGsd() *wrappers.FloatValue {
	if m != nil {
		return m.EoGsd
	}
	return nil
}

func (m *EOProperties) GetEoOffNadir() *wrappers.FloatValue {
	if m != nil {
		return m.EoOffNadir
	}
	return nil
}

func (m *EOProperties) GetEoAzimuth() *wrappers.FloatValue {
	if m != nil {
		return m.EoAzimuth
	}
	return nil
}

func (m *EOProperties) GetEoCloudCover() *wrappers.FloatValue {
	if m != nil {
		return m.EoCloudCover
	}
	return nil
}

func (m *EOProperties) GetEoBands() EOBand {
	if m != nil {
		return m.EoBands
	}
	return EOBand_UNKNOWN_BAND
}

func init() {
	proto.RegisterType((*StacSearchRequest)(nil), "epl.protobuf.StacSearchRequest")
	proto.RegisterType((*EORequest)(nil), "epl.protobuf.EORequest")
	proto.RegisterType((*BandDetails)(nil), "epl.protobuf.BandDetails")
	proto.RegisterType((*Asset)(nil), "epl.protobuf.Asset")
	proto.RegisterType((*StacMetadata)(nil), "epl.protobuf.StacMetadata")
	proto.RegisterMapType((map[string]*Asset)(nil), "epl.protobuf.StacMetadata.AssetsEntry")
	proto.RegisterType((*StacInsertResponse)(nil), "epl.protobuf.StacInsertResponse")
	proto.RegisterType((*EOProperties)(nil), "epl.protobuf.EOProperties")
	proto.RegisterEnum("epl.protobuf.EOPlatform", EOPlatform_name, EOPlatform_value)
	proto.RegisterEnum("epl.protobuf.EOInstrument", EOInstrument_name, EOInstrument_value)
	proto.RegisterEnum("epl.protobuf.EOBand", EOBand_name, EOBand_value)
	proto.RegisterEnum("epl.protobuf.AssetType", AssetType_name, AssetType_value)
	proto.RegisterEnum("epl.protobuf.CloudPlatform", CloudPlatform_name, CloudPlatform_value)
}

func init() { proto.RegisterFile("epl/protobuf/stac.proto", fileDescriptor_stac_4fb9fcb00fe2c669) }

var fileDescriptor_stac_4fb9fcb00fe2c669 = []byte{
	// 1702 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xcd, 0x72, 0xdb, 0xc8,
	0x11, 0x36, 0xff, 0xc1, 0xe6, 0x8f, 0xa1, 0xb1, 0x56, 0x86, 0xe5, 0x4d, 0x56, 0x51, 0xaa, 0x52,
	0xb2, 0x52, 0x2b, 0xd5, 0x32, 0x29, 0xaf, 0xe3, 0x4a, 0xbc, 0x01, 0x49, 0x48, 0xa2, 0x22, 0xfe,
	0xd4, 0x90, 0x8a, 0xb6, 0xf6, 0x82, 0x1a, 0x02, 0x43, 0x12, 0x59, 0x10, 0x83, 0x05, 0x86, 0xb2,
	0x95, 0x93, 0x4e, 0x79, 0x90, 0x1c, 0xf2, 0x2e, 0xce, 0x29, 0xe7, 0x54, 0xe5, 0x92, 0x37, 0x48,
	0x55, 0x1e, 0x20, 0x35, 0x03, 0x80, 0x7f, 0x92, 0x43, 0xee, 0x89, 0xd3, 0x3d, 0xdf, 0xd7, 0x8d,
	0xe9, 0xe9, 0xe9, 0x6e, 0xc2, 0x73, 0xea, 0xbb, 0xa7, 0x7e, 0xc0, 0x38, 0x1b, 0xce, 0x46, 0xa7,
	0x21, 0x27, 0xd6, 0x89, 0x94, 0x50, 0x99, 0xfa, 0xee, 0x49, 0xb2, 0xb1, 0xff, 0xc5, 0x98, 0xb1,
	0xb1, 0x4b, 0x17, 0x48, 0xee, 0x4c, 0x69, 0xc8, 0xc9, 0xd4, 0x8f, 0x30, 0xfb, 0x3f, 0x5d, 0x07,
	0xd8, 0xb3, 0x80, 0x70, 0x87, 0x79, 0x9f, 0xda, 0x7f, 0x1f, 0x10, 0xdf, 0xa7, 0x41, 0x18, 0xef,
	0xbf, 0x58, 0xdf, 0x27, 0xde, 0x5d, 0xbc, 0xf5, 0x72, 0xe5, 0x13, 0xc7, 0x94, 0x4d, 0x29, 0x0f,
	0x92, 0x4d, 0x6d, 0x65, 0xf3, 0x87, 0x19, 0x4d, 0x76, 0x0e, 0xff, 0x99, 0x83, 0x9d, 0x3e, 0x27,
	0x56, 0x9f, 0x92, 0xc0, 0x9a, 0x60, 0xfa, 0xc3, 0x8c, 0x86, 0x1c, 0xbd, 0x82, 0xb4, 0x63, 0x6b,
	0xa9, 0x83, 0xd4, 0x51, 0xa9, 0xf6, 0xe2, 0x64, 0xf9, 0x8c, 0x27, 0x7d, 0x1e, 0x38, 0xde, 0xf8,
	0xcc, 0xa1, 0xae, 0x8d, 0xd3, 0x8e, 0x8d, 0x76, 0x21, 0xe7, 0x3a, 0x53, 0x87, 0x6b, 0xe9, 0x83,
	0xd4, 0x51, 0x05, 0x47, 0x02, 0xda, 0x83, 0x3c, 0x1b, 0x8d, 0x42, 0xca, 0xb5, 0xcc, 0x41, 0xea,
	0x28, 0x8b, 0x63, 0x09, 0x35, 0x00, 0xf9, 0x01, 0xf3, 0x69, 0xc0, 0x1d, 0x1a, 0x9a, 0x41, 0xe4,
	0x4e, 0x53, 0xa4, 0xa3, 0xdd, 0x93, 0xe8, 0x74, 0x0b, 0x5f, 0xba, 0x77, 0x87, 0x77, 0x16, 0xf8,
	0xe4, 0xeb, 0x5e, 0x03, 0x50, 0x36, 0x27, 0x17, 0x25, 0xf9, 0xf9, 0xea, 0x57, 0x1a, 0xdd, 0x18,
	0x8c, 0x8b, 0x94, 0x25, 0xbc, 0x13, 0xc8, 0x0e, 0x87, 0xec, 0x83, 0x56, 0x95, 0x8c, 0xfd, 0x35,
	0x86, 0x77, 0x4b, 0x5d, 0xe6, 0xd3, 0x26, 0xe1, 0x04, 0x4b, 0x1c, 0x7a, 0x0d, 0x4a, 0x12, 0x47,
	0xed, 0xe9, 0x63, 0x9c, 0xf3, 0x78, 0x57, 0x72, 0xe6, 0x58, 0x74, 0x01, 0x6a, 0xb2, 0x9e, 0x7f,
	0xa5, 0x2a, 0xf9, 0x3f, 0x79, 0x9c, 0x9f, 0x7c, 0xeb, 0xd3, 0xf1, 0xaa, 0x02, 0xbd, 0x01, 0xc5,
	0x26, 0x9c, 0x8a, 0x34, 0xd2, 0x90, 0xb4, 0xf0, 0xf9, 0xaa, 0x85, 0x41, 0x92, 0x60, 0xd1, 0x85,
	0xcc, 0xd1, 0x82, 0xc9, 0x86, 0x21, 0x0d, 0x6e, 0xa9, 0xad, 0x3d, 0xdb, 0x86, 0x99, 0xa0, 0xd1,
	0x6b, 0x28, 0xcc, 0x7c, 0x61, 0xc7, 0xd6, 0x76, 0xb7, 0x20, 0x26, 0x60, 0xf4, 0x0d, 0x94, 0xc3,
	0xc0, 0x32, 0x9d, 0xe9, 0xd8, 0x14, 0x0a, 0xed, 0x63, 0x6a, 0x0b, 0x36, 0x84, 0x81, 0xd5, 0x9a,
	0x8e, 0x9b, 0x84, 0x53, 0x54, 0x83, 0xfc, 0x2c, 0x1c, 0x87, 0x8e, 0xad, 0xfd, 0x7d, 0x63, 0xe6,
	0xc5, 0xc8, 0xcb, 0xac, 0x92, 0x55, 0xf3, 0x97, 0x59, 0x25, 0xaf, 0x2a, 0x97, 0x39, 0xe5, 0x33,
	0xf5, 0x63, 0xea, 0xb2, 0xa8, 0xfc, 0x37, 0xa3, 0xde, 0xdf, 0xdf, 0xdf, 0xa7, 0x0f, 0xff, 0x96,
	0x81, 0xe2, 0x3c, 0x13, 0xd0, 0x3b, 0xa8, 0x52, 0x66, 0x86, 0x33, 0xcf, 0x24, 0x7f, 0x76, 0xa6,
	0x33, 0x3e, 0x89, 0xf3, 0x4e, 0x5b, 0x75, 0x73, 0xe6, 0x32, 0xc2, 0x23, 0x2f, 0x65, 0xca, 0xfa,
	0x33, 0x4f, 0x8f, 0xd0, 0xa8, 0x0e, 0x6a, 0xcc, 0xa7, 0x2e, 0xbd, 0x95, 0xcf, 0x36, 0x4e, 0xbe,
	0x4f, 0x5b, 0xa8, 0x4a, 0x0b, 0x46, 0x82, 0x47, 0xa7, 0x90, 0xa7, 0xcc, 0x1c, 0x87, 0xb6, 0x06,
	0x1b, 0x98, 0x39, 0xca, 0xce, 0x43, 0x1b, 0xbd, 0x85, 0x32, 0x65, 0x26, 0x1b, 0x8d, 0x4c, 0x8f,
	0xd8, 0x4e, 0xa0, 0x95, 0x36, 0xd0, 0x80, 0xb2, 0xee, 0x68, 0xd4, 0x11, 0x58, 0xf4, 0xb5, 0x7c,
	0x27, 0xc9, 0x61, 0xcb, 0x1b, 0x98, 0x45, 0xca, 0x92, 0x93, 0x46, 0x91, 0xb2, 0x5c, 0x36, 0xb3,
	0x4d, 0x8b, 0xdd, 0xd2, 0x40, 0xab, 0x6c, 0x8e, 0x54, 0x43, 0xc0, 0x1b, 0x02, 0x8d, 0x4e, 0x41,
	0xa1, 0xcc, 0x1c, 0x12, 0xcf, 0x0e, 0xb5, 0x9d, 0x83, 0xd4, 0x51, 0xb5, 0xb6, 0xbb, 0xfe, 0x3c,
	0xeb, 0xc4, 0xb3, 0x71, 0x81, 0x32, 0xf1, 0x1b, 0x1e, 0xfe, 0x3b, 0x0d, 0x25, 0xb1, 0x6a, 0x52,
	0x4e, 0x1c, 0x37, 0x44, 0x08, 0xb2, 0x1e, 0x99, 0x52, 0x59, 0x81, 0x8a, 0x58, 0xae, 0xd1, 0x17,
	0x50, 0xb2, 0xd8, 0x74, 0xca, 0x3c, 0x53, 0x6e, 0xa5, 0xe5, 0x16, 0x44, 0xaa, 0x8e, 0x00, 0x1c,
	0x40, 0xc9, 0xa6, 0xa1, 0x15, 0x38, 0xbe, 0xbc, 0x9a, 0x8c, 0x04, 0x2c, 0xab, 0xd0, 0x97, 0x90,
	0x11, 0xa1, 0xcf, 0xca, 0xc3, 0xbc, 0x7c, 0x50, 0x6e, 0xe4, 0x79, 0xfe, 0x48, 0xdc, 0x19, 0xc5,
	0x02, 0x87, 0xbe, 0x06, 0x85, 0x58, 0xd6, 0x2c, 0x20, 0xd6, 0x9d, 0x96, 0xdb, 0xcc, 0x99, 0x83,
	0xd1, 0x05, 0xec, 0x58, 0xd4, 0xe3, 0x34, 0x30, 0xdf, 0x93, 0x5b, 0xea, 0x52, 0x6f, 0xcc, 0x27,
	0x5a, 0x7e, 0xb3, 0x05, 0x35, 0x62, 0xdd, 0xcc, 0x49, 0xe8, 0x12, 0x9e, 0x8d, 0x66, 0xae, 0x6b,
	0xbe, 0x77, 0x6c, 0x3e, 0x31, 0x27, 0xc4, 0x1d, 0x99, 0x53, 0xf2, 0x41, 0x2b, 0x6c, 0x61, 0x4b,
	0xf0, 0x6e, 0x04, 0xed, 0x82, 0xb8, 0xa3, 0x36, 0xf9, 0x70, 0xf8, 0xaf, 0x34, 0xe4, 0xf4, 0x50,
	0x54, 0x61, 0x04, 0xd9, 0x49, 0x40, 0x47, 0x49, 0x78, 0xc5, 0x5a, 0xe8, 0xf8, 0x9d, 0x9f, 0xc4,
	0x55, 0xae, 0x57, 0xee, 0x31, 0xb3, 0xc5, 0x3d, 0x8a, 0xca, 0x4c, 0x84, 0x07, 0x53, 0x9a, 0xca,
	0x4a, 0xca, 0x5a, 0x65, 0x96, 0x5f, 0x30, 0xb8, 0xf3, 0x29, 0x2e, 0x92, 0x64, 0x89, 0xea, 0x50,
	0x8d, 0xb2, 0xcd, 0x77, 0x09, 0x1f, 0xb1, 0x60, 0x2a, 0xe3, 0x5d, 0xad, 0xbd, 0x5c, 0xe5, 0xca,
	0x14, 0xeb, 0xc5, 0x10, 0x5c, 0xb1, 0x96, 0x45, 0xf4, 0x33, 0x28, 0x0f, 0x67, 0xd6, 0xf7, 0x94,
	0x9b, 0xec, 0xbd, 0x47, 0x03, 0x19, 0xef, 0x22, 0x2e, 0x45, 0xba, 0xae, 0x50, 0xa1, 0x9f, 0x43,
	0x25, 0x86, 0x04, 0x74, 0x2c, 0x72, 0xa4, 0x20, 0x31, 0x31, 0x0f, 0x4b, 0x9d, 0x68, 0x5d, 0x91,
	0x2c, 0xcb, 0x43, 0x11, 0xc7, 0x92, 0xc8, 0x3f, 0x36, 0xfc, 0x13, 0xb5, 0xb8, 0xe9, 0x13, 0x3e,
	0x91, 0x2f, 0xbf, 0x88, 0x21, 0x52, 0xf5, 0x08, 0x9f, 0x1c, 0xfe, 0x27, 0x07, 0x65, 0xd1, 0x4a,
	0xdb, 0x94, 0x13, 0x9b, 0x70, 0x82, 0xaa, 0xf3, 0x2e, 0x5a, 0x94, 0xad, 0x72, 0xb9, 0x9f, 0x64,
	0x7e, 0x44, 0x3f, 0x49, 0xfa, 0x56, 0x76, 0xcb, 0xbe, 0xf5, 0x6b, 0x80, 0x45, 0xd3, 0x8c, 0x33,
	0xf7, 0xf1, 0xe6, 0xba, 0x84, 0x43, 0xef, 0x20, 0x2f, 0x2f, 0x24, 0xd4, 0x0a, 0x07, 0x99, 0xa3,
	0x52, 0xed, 0x17, 0xeb, 0xd5, 0x77, 0x71, 0xb2, 0xe8, 0x12, 0x43, 0xc3, 0x13, 0xad, 0x2a, 0x66,
	0x89, 0xd3, 0xcd, 0x7b, 0x95, 0x12, 0x7f, 0xe9, 0xba, 0xcf, 0x79, 0xf5, 0x5f, 0xea, 0x54, 0xdf,
	0x40, 0x45, 0xd8, 0x34, 0xe7, 0xed, 0xaa, 0xb8, 0x91, 0x5c, 0x16, 0x84, 0x6e, 0xd2, 0xb0, 0xba,
	0xb0, 0xb7, 0x62, 0xc0, 0x4c, 0x86, 0xaa, 0xb8, 0xc6, 0xbe, 0x78, 0x60, 0xa9, 0x19, 0x03, 0xf0,
	0xee, 0xb2, 0xa1, 0x44, 0x8b, 0x0c, 0x50, 0xa7, 0xf1, 0x49, 0xcd, 0xa4, 0x15, 0x96, 0x36, 0x7e,
	0xd4, 0xd3, 0x84, 0x73, 0x1d, 0x37, 0x44, 0x1d, 0xaa, 0xd2, 0x84, 0x1f, 0x30, 0x8b, 0x86, 0x21,
	0xb5, 0xe3, 0x12, 0xfc, 0xff, 0x8c, 0xc8, 0x50, 0xf4, 0x12, 0x82, 0x88, 0x0d, 0x65, 0xe6, 0xd2,
	0x65, 0x56, 0x1e, 0x4d, 0x81, 0x6e, 0x6f, 0x31, 0x23, 0x95, 0x29, 0x5b, 0x48, 0xfb, 0x1d, 0x28,
	0x2d, 0xdd, 0x15, 0x52, 0x21, 0xf3, 0x3d, 0xbd, 0x8b, 0x53, 0x52, 0x2c, 0xd1, 0x2b, 0xc8, 0xdd,
	0x8a, 0x7a, 0x21, 0xdf, 0x7d, 0xa9, 0xf6, 0xec, 0x91, 0xc7, 0x8a, 0x23, 0xc4, 0xdb, 0xf4, 0x9b,
	0x94, 0xec, 0xb4, 0x85, 0x4b, 0x45, 0xa9, 0xc6, 0x1d, 0xb6, 0x0d, 0x48, 0x24, 0x46, 0xcb, 0x0b,
	0x69, 0xc0, 0x31, 0x0d, 0x7d, 0xe6, 0x85, 0x54, 0x3c, 0xa1, 0x90, 0x13, 0x3e, 0x0b, 0x63, 0x4f,
	0xb1, 0x24, 0x9e, 0x50, 0xb4, 0x32, 0x2d, 0x66, 0x47, 0x2e, 0x73, 0x18, 0x22, 0x55, 0x83, 0xd9,
	0xf4, 0xf0, 0x1f, 0x59, 0x28, 0x2f, 0x9f, 0x06, 0x3d, 0x87, 0x02, 0x65, 0x26, 0xf5, 0xc3, 0xb1,
	0x34, 0x55, 0xc1, 0x79, 0xca, 0x0c, 0x3f, 0x1c, 0xa3, 0xdf, 0x40, 0x49, 0x44, 0x26, 0x29, 0x17,
	0x69, 0x59, 0x2e, 0xb4, 0x07, 0x71, 0x49, 0x6a, 0x05, 0x50, 0x36, 0x2f, 0x14, 0x51, 0x50, 0x1d,
	0x2f, 0xe4, 0xc1, 0x6c, 0x4a, 0x3d, 0x1e, 0x97, 0xb6, 0x07, 0x41, 0x6d, 0xcd, 0x11, 0x22, 0xa8,
	0x0b, 0x49, 0x5c, 0xec, 0xda, 0x20, 0xb1, 0x45, 0x47, 0x59, 0x9d, 0x25, 0x8c, 0x47, 0x66, 0x89,
	0x2d, 0x5a, 0xcc, 0xfa, 0x38, 0x51, 0x9b, 0x8f, 0x13, 0x5b, 0x74, 0x97, 0x78, 0xa2, 0xf8, 0xdd,
	0xda, 0x44, 0xb1, 0x45, 0x2f, 0x59, 0x1e, 0x2a, 0xde, 0xae, 0x0c, 0x15, 0xca, 0x66, 0xf2, 0xd2,
	0x5c, 0xa1, 0x3f, 0x98, 0x2b, 0x8a, 0x5b, 0x05, 0xee, 0x13, 0xa3, 0x05, 0x6c, 0xd1, 0x92, 0x8e,
	0xdf, 0x01, 0x2c, 0xf2, 0x00, 0x3d, 0x87, 0x67, 0xd7, 0x9d, 0x3f, 0x74, 0xba, 0x37, 0x1d, 0xd3,
	0xe8, 0x9a, 0xbd, 0x2b, 0x7d, 0x70, 0xd6, 0xc5, 0x6d, 0xf5, 0x09, 0xaa, 0x40, 0xf1, 0x4a, 0xef,
	0x34, 0xfb, 0xfa, 0xc0, 0x7c, 0xa3, 0xa6, 0x90, 0x02, 0xd9, 0x8e, 0xde, 0xea, 0xa9, 0xe9, 0xe3,
	0x57, 0x22, 0x23, 0x97, 0x2e, 0xff, 0x05, 0x7c, 0xb6, 0x64, 0xa1, 0xd5, 0xe9, 0x0f, 0xf0, 0x75,
	0xdb, 0xe8, 0x0c, 0xd4, 0x27, 0xc7, 0x7f, 0x49, 0x43, 0x3e, 0x72, 0x8f, 0x54, 0x28, 0x27, 0xa8,
	0xba, 0xde, 0x69, 0xaa, 0x4f, 0x84, 0xa6, 0xd1, 0xd5, 0xfb, 0x03, 0xfd, 0x2a, 0xd2, 0xa4, 0x85,
	0xcb, 0xfa, 0xd5, 0xb5, 0x11, 0x89, 0x59, 0x54, 0x05, 0x38, 0xc7, 0x86, 0x11, 0x13, 0x14, 0x54,
	0x06, 0x05, 0x1b, 0xcd, 0x48, 0x52, 0x05, 0x18, 0x9f, 0xd7, 0xa5, 0xd4, 0x57, 0x3f, 0x47, 0x7b,
	0x80, 0x3a, 0x86, 0x8e, 0xcd, 0x56, 0xe7, 0x0c, 0xeb, 0x73, 0xd8, 0x01, 0x7a, 0x0a, 0x25, 0x7c,
	0x5e, 0x6f, 0xe1, 0x18, 0xf8, 0x5b, 0xe1, 0xb6, 0x7f, 0xd3, 0xc2, 0xe6, 0x57, 0xaf, 0x23, 0xc8,
	0xef, 0xd1, 0x4e, 0xac, 0xa9, 0xd5, 0x22, 0xcd, 0x7d, 0x0a, 0xed, 0xc1, 0x4e, 0x4f, 0xef, 0x34,
	0x2e, 0x70, 0xb7, 0xad, 0x0f, 0x5a, 0x8d, 0x58, 0x9f, 0x46, 0x2a, 0x94, 0x1a, 0x2d, 0x8c, 0xaf,
	0xfb, 0xb1, 0x26, 0x2b, 0xc8, 0x57, 0xd2, 0xdc, 0x57, 0xb1, 0x4a, 0x59, 0xa8, 0x12, 0x7b, 0xea,
	0x71, 0x00, 0xc5, 0x79, 0x9b, 0x47, 0x3b, 0x50, 0x49, 0x42, 0xa1, 0xf7, 0xfb, 0xc6, 0x40, 0x7d,
	0x22, 0xa2, 0x7b, 0xd9, 0x33, 0xce, 0xd5, 0x14, 0x2a, 0x41, 0xe1, 0xdc, 0xe8, 0x0e, 0x5a, 0x67,
	0x67, 0x6a, 0x5a, 0xa8, 0xaf, 0x0c, 0xdc, 0x50, 0x33, 0xa8, 0x00, 0x99, 0x36, 0x3e, 0x53, 0xb3,
	0x62, 0xbf, 0x8d, 0xcf, 0xcc, 0x56, 0xf3, 0x5b, 0x35, 0x97, 0x08, 0xdf, 0xb6, 0xaf, 0xd4, 0xbc,
	0x08, 0x57, 0xa3, 0x6b, 0x26, 0xe4, 0xc2, 0xf1, 0x05, 0x54, 0x56, 0xc6, 0x03, 0xb4, 0x0f, 0x7b,
	0x89, 0xdf, 0xc6, 0x55, 0xf7, 0xba, 0xb9, 0x7c, 0xdb, 0x05, 0xc8, 0xe8, 0x37, 0x7d, 0x35, 0x25,
	0x16, 0xe7, 0x8d, 0x9e, 0x9a, 0x46, 0x45, 0xc8, 0xe9, 0xdf, 0x5d, 0x63, 0x43, 0xcd, 0xd4, 0xfb,
	0xa0, 0x5a, 0x6c, 0xba, 0x92, 0x55, 0xf5, 0xa2, 0xa8, 0x72, 0x3d, 0x21, 0xf5, 0x52, 0xdf, 0xfd,
	0x72, 0xec, 0xf0, 0xc9, 0x6c, 0x78, 0x62, 0xb1, 0xa9, 0xf8, 0xa3, 0xfd, 0xe5, 0x38, 0xf0, 0xad,
	0x53, 0xe2, 0x3b, 0xa7, 0x63, 0xe6, 0x12, 0x6f, 0x7c, 0xba, 0xfc, 0x67, 0xfb, 0xaf, 0xe9, 0x6c,
	0x7f, 0xd0, 0xab, 0x0f, 0xf3, 0x52, 0xf1, 0xab, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x4a,
	0x9c, 0x16, 0x4a, 0x10, 0x00, 0x00,
}
