// Code generated by protoc-gen-go. DO NOT EDIT.
// source: epl/protobuf/stac.proto

package protobuf // import "github.com/geo-grpc/api/golang/epl/protobuf"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RelationshipType int32

const (
	RelationshipType_UNKNOWN_FIELD_REL   RelationshipType = 0
	RelationshipType_FIELD_EQUALS        RelationshipType = 2
	RelationshipType_FIELD_NOT_EQUAL     RelationshipType = 4
	RelationshipType_FIELD_LESS_EQUAL    RelationshipType = 8
	RelationshipType_FIELD_GREATER_EQUAL RelationshipType = 16
	RelationshipType_FIELD_LESS          RelationshipType = 32
	RelationshipType_FIELD_GREATER       RelationshipType = 64
	RelationshipType_FIELD_RANGE         RelationshipType = 128
	RelationshipType_FIELD_NOT_RANGE     RelationshipType = 256
)

var RelationshipType_name = map[int32]string{
	0:   "UNKNOWN_FIELD_REL",
	2:   "FIELD_EQUALS",
	4:   "FIELD_NOT_EQUAL",
	8:   "FIELD_LESS_EQUAL",
	16:  "FIELD_GREATER_EQUAL",
	32:  "FIELD_LESS",
	64:  "FIELD_GREATER",
	128: "FIELD_RANGE",
	256: "FIELD_NOT_RANGE",
}
var RelationshipType_value = map[string]int32{
	"UNKNOWN_FIELD_REL":   0,
	"FIELD_EQUALS":        2,
	"FIELD_NOT_EQUAL":     4,
	"FIELD_LESS_EQUAL":    8,
	"FIELD_GREATER_EQUAL": 16,
	"FIELD_LESS":          32,
	"FIELD_GREATER":       64,
	"FIELD_RANGE":         128,
	"FIELD_NOT_RANGE":     256,
}

func (x RelationshipType) Enum() *RelationshipType {
	p := new(RelationshipType)
	*p = x
	return p
}
func (x RelationshipType) String() string {
	return proto.EnumName(RelationshipType_name, int32(x))
}
func (x *RelationshipType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RelationshipType_value, data, "RelationshipType")
	if err != nil {
		return err
	}
	*x = RelationshipType(value)
	return nil
}
func (RelationshipType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{0}
}

type SortDirection int32

const (
	SortDirection_NOT_SORTED SortDirection = 0
	SortDirection_DESCENDING SortDirection = 1
	SortDirection_ASCENDING  SortDirection = 2
)

var SortDirection_name = map[int32]string{
	0: "NOT_SORTED",
	1: "DESCENDING",
	2: "ASCENDING",
}
var SortDirection_value = map[string]int32{
	"NOT_SORTED": 0,
	"DESCENDING": 1,
	"ASCENDING":  2,
}

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}
func (x SortDirection) String() string {
	return proto.EnumName(SortDirection_name, int32(x))
}
func (x *SortDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SortDirection_value, data, "SortDirection")
	if err != nil {
		return err
	}
	*x = SortDirection(value)
	return nil
}
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{1}
}

type EO_PLATFORM int32

const (
	EO_PLATFORM_UNKNOWN_PLATFORM EO_PLATFORM = 0
	EO_PLATFORM_LANDSAT_8        EO_PLATFORM = 1
	EO_PLATFORM_NAIP             EO_PLATFORM = 2
)

var EO_PLATFORM_name = map[int32]string{
	0: "UNKNOWN_PLATFORM",
	1: "LANDSAT_8",
	2: "NAIP",
}
var EO_PLATFORM_value = map[string]int32{
	"UNKNOWN_PLATFORM": 0,
	"LANDSAT_8":        1,
	"NAIP":             2,
}

func (x EO_PLATFORM) Enum() *EO_PLATFORM {
	p := new(EO_PLATFORM)
	*p = x
	return p
}
func (x EO_PLATFORM) String() string {
	return proto.EnumName(EO_PLATFORM_name, int32(x))
}
func (x *EO_PLATFORM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EO_PLATFORM_value, data, "EO_PLATFORM")
	if err != nil {
		return err
	}
	*x = EO_PLATFORM(value)
	return nil
}
func (EO_PLATFORM) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{2}
}

type EO_INSTRUMENT int32

const (
	EO_INSTRUMENT_UNKNOWN_INSTRUMENT EO_INSTRUMENT = 0
)

var EO_INSTRUMENT_name = map[int32]string{
	0: "UNKNOWN_INSTRUMENT",
}
var EO_INSTRUMENT_value = map[string]int32{
	"UNKNOWN_INSTRUMENT": 0,
}

func (x EO_INSTRUMENT) Enum() *EO_INSTRUMENT {
	p := new(EO_INSTRUMENT)
	*p = x
	return p
}
func (x EO_INSTRUMENT) String() string {
	return proto.EnumName(EO_INSTRUMENT_name, int32(x))
}
func (x *EO_INSTRUMENT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EO_INSTRUMENT_value, data, "EO_INSTRUMENT")
	if err != nil {
		return err
	}
	*x = EO_INSTRUMENT(value)
	return nil
}
func (EO_INSTRUMENT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{3}
}

type EO_BAND int32

const (
	EO_BAND_UNKNOWN_BAND       EO_BAND = 0
	EO_BAND_COASTAL_BAND       EO_BAND = 2
	EO_BAND_BLUE_BAND          EO_BAND = 4
	EO_BAND_GREEN_BAND         EO_BAND = 8
	EO_BAND_RED_BAND           EO_BAND = 16
	EO_BAND_RGB_BANDS          EO_BAND = 28
	EO_BAND_NEAR_INFRARED_BAND EO_BAND = 32
	EO_BAND_RGBIR_BANDS        EO_BAND = 60
	EO_BAND_SWIR_16_BAND       EO_BAND = 64
	EO_BAND_SWIR_22_BAND       EO_BAND = 128
	EO_BAND_PANCHROMATIC_BAND  EO_BAND = 256
	EO_BAND_CIRRUS_BAND        EO_BAND = 512
	EO_BAND_LWIR_11_BAND       EO_BAND = 1024
	EO_BAND_LWIR_12_BAND       EO_BAND = 2048
)

var EO_BAND_name = map[int32]string{
	0:    "UNKNOWN_BAND",
	2:    "COASTAL_BAND",
	4:    "BLUE_BAND",
	8:    "GREEN_BAND",
	16:   "RED_BAND",
	28:   "RGB_BANDS",
	32:   "NEAR_INFRARED_BAND",
	60:   "RGBIR_BANDS",
	64:   "SWIR_16_BAND",
	128:  "SWIR_22_BAND",
	256:  "PANCHROMATIC_BAND",
	512:  "CIRRUS_BAND",
	1024: "LWIR_11_BAND",
	2048: "LWIR_12_BAND",
}
var EO_BAND_value = map[string]int32{
	"UNKNOWN_BAND":       0,
	"COASTAL_BAND":       2,
	"BLUE_BAND":          4,
	"GREEN_BAND":         8,
	"RED_BAND":           16,
	"RGB_BANDS":          28,
	"NEAR_INFRARED_BAND": 32,
	"RGBIR_BANDS":        60,
	"SWIR_16_BAND":       64,
	"SWIR_22_BAND":       128,
	"PANCHROMATIC_BAND":  256,
	"CIRRUS_BAND":        512,
	"LWIR_11_BAND":       1024,
	"LWIR_12_BAND":       2048,
}

func (x EO_BAND) Enum() *EO_BAND {
	p := new(EO_BAND)
	*p = x
	return p
}
func (x EO_BAND) String() string {
	return proto.EnumName(EO_BAND_name, int32(x))
}
func (x *EO_BAND) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EO_BAND_value, data, "EO_BAND")
	if err != nil {
		return err
	}
	*x = EO_BAND(value)
	return nil
}
func (EO_BAND) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{4}
}

type ASSET_TYPE int32

const (
	ASSET_TYPE_UNKNOWN_ASSET ASSET_TYPE = 0
	ASSET_TYPE_JPEG          ASSET_TYPE = 1
	ASSET_TYPE_GEOTIFF       ASSET_TYPE = 2
	ASSET_TYPE_LERC          ASSET_TYPE = 3
	ASSET_TYPE_MRF           ASSET_TYPE = 4
	ASSET_TYPE_MRF_IDX       ASSET_TYPE = 5
	ASSET_TYPE_MRF_XML       ASSET_TYPE = 6
)

var ASSET_TYPE_name = map[int32]string{
	0: "UNKNOWN_ASSET",
	1: "JPEG",
	2: "GEOTIFF",
	3: "LERC",
	4: "MRF",
	5: "MRF_IDX",
	6: "MRF_XML",
}
var ASSET_TYPE_value = map[string]int32{
	"UNKNOWN_ASSET": 0,
	"JPEG":          1,
	"GEOTIFF":       2,
	"LERC":          3,
	"MRF":           4,
	"MRF_IDX":       5,
	"MRF_XML":       6,
}

func (x ASSET_TYPE) Enum() *ASSET_TYPE {
	p := new(ASSET_TYPE)
	*p = x
	return p
}
func (x ASSET_TYPE) String() string {
	return proto.EnumName(ASSET_TYPE_name, int32(x))
}
func (x *ASSET_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ASSET_TYPE_value, data, "ASSET_TYPE")
	if err != nil {
		return err
	}
	*x = ASSET_TYPE(value)
	return nil
}
func (ASSET_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{5}
}

type IAAS int32

const (
	IAAS_UNKNOWN_IAAS IAAS = 0
	IAAS_AWS          IAAS = 1
	IAAS_GCP          IAAS = 2
	IAAS_AZURE        IAAS = 3
)

var IAAS_name = map[int32]string{
	0: "UNKNOWN_IAAS",
	1: "AWS",
	2: "GCP",
	3: "AZURE",
}
var IAAS_value = map[string]int32{
	"UNKNOWN_IAAS": 0,
	"AWS":          1,
	"GCP":          2,
	"AZURE":        3,
}

func (x IAAS) Enum() *IAAS {
	p := new(IAAS)
	*p = x
	return p
}
func (x IAAS) String() string {
	return proto.EnumName(IAAS_name, int32(x))
}
func (x *IAAS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IAAS_value, data, "IAAS")
	if err != nil {
		return err
	}
	*x = IAAS(value)
	return nil
}
func (IAAS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{6}
}

type FloatField struct {
	Value                *float32          `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
	RelType              *RelationshipType `protobuf:"varint,2,opt,name=rel_type,json=relType,enum=epl.protobuf.RelationshipType" json:"rel_type,omitempty"`
	RangeValue           *float32          `protobuf:"fixed32,3,opt,name=range_value,json=rangeValue" json:"range_value,omitempty"`
	SortBy               *bool             `protobuf:"varint,4,opt,name=sort_by,json=sortBy" json:"sort_by,omitempty"`
	SortDirection        *SortDirection    `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FloatField) Reset()         { *m = FloatField{} }
func (m *FloatField) String() string { return proto.CompactTextString(m) }
func (*FloatField) ProtoMessage()    {}
func (*FloatField) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{0}
}
func (m *FloatField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatField.Unmarshal(m, b)
}
func (m *FloatField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatField.Marshal(b, m, deterministic)
}
func (dst *FloatField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatField.Merge(dst, src)
}
func (m *FloatField) XXX_Size() int {
	return xxx_messageInfo_FloatField.Size(m)
}
func (m *FloatField) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatField.DiscardUnknown(m)
}

var xxx_messageInfo_FloatField proto.InternalMessageInfo

func (m *FloatField) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *FloatField) GetRelType() RelationshipType {
	if m != nil && m.RelType != nil {
		return *m.RelType
	}
	return RelationshipType_UNKNOWN_FIELD_REL
}

func (m *FloatField) GetRangeValue() float32 {
	if m != nil && m.RangeValue != nil {
		return *m.RangeValue
	}
	return 0
}

func (m *FloatField) GetSortBy() bool {
	if m != nil && m.SortBy != nil {
		return *m.SortBy
	}
	return false
}

func (m *FloatField) GetSortDirection() SortDirection {
	if m != nil && m.SortDirection != nil {
		return *m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

type DoubleField struct {
	Value                *float64          `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	RelType              *RelationshipType `protobuf:"varint,2,opt,name=rel_type,json=relType,enum=epl.protobuf.RelationshipType" json:"rel_type,omitempty"`
	RangeValue           *float64          `protobuf:"fixed64,3,opt,name=range_value,json=rangeValue" json:"range_value,omitempty"`
	SortBy               *bool             `protobuf:"varint,4,opt,name=sort_by,json=sortBy" json:"sort_by,omitempty"`
	SortDirection        *SortDirection    `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DoubleField) Reset()         { *m = DoubleField{} }
func (m *DoubleField) String() string { return proto.CompactTextString(m) }
func (*DoubleField) ProtoMessage()    {}
func (*DoubleField) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{1}
}
func (m *DoubleField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleField.Unmarshal(m, b)
}
func (m *DoubleField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleField.Marshal(b, m, deterministic)
}
func (dst *DoubleField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleField.Merge(dst, src)
}
func (m *DoubleField) XXX_Size() int {
	return xxx_messageInfo_DoubleField.Size(m)
}
func (m *DoubleField) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleField.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleField proto.InternalMessageInfo

func (m *DoubleField) GetValue() float64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *DoubleField) GetRelType() RelationshipType {
	if m != nil && m.RelType != nil {
		return *m.RelType
	}
	return RelationshipType_UNKNOWN_FIELD_REL
}

func (m *DoubleField) GetRangeValue() float64 {
	if m != nil && m.RangeValue != nil {
		return *m.RangeValue
	}
	return 0
}

func (m *DoubleField) GetSortBy() bool {
	if m != nil && m.SortBy != nil {
		return *m.SortBy
	}
	return false
}

func (m *DoubleField) GetSortDirection() SortDirection {
	if m != nil && m.SortDirection != nil {
		return *m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

type StringField struct {
	Value                *string           `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	RelType              *RelationshipType `protobuf:"varint,2,opt,name=rel_type,json=relType,enum=epl.protobuf.RelationshipType" json:"rel_type,omitempty"`
	RangeValue           *string           `protobuf:"bytes,3,opt,name=range_value,json=rangeValue" json:"range_value,omitempty"`
	SortBy               *bool             `protobuf:"varint,4,opt,name=sort_by,json=sortBy" json:"sort_by,omitempty"`
	SortDirection        *SortDirection    `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StringField) Reset()         { *m = StringField{} }
func (m *StringField) String() string { return proto.CompactTextString(m) }
func (*StringField) ProtoMessage()    {}
func (*StringField) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{2}
}
func (m *StringField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringField.Unmarshal(m, b)
}
func (m *StringField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringField.Marshal(b, m, deterministic)
}
func (dst *StringField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringField.Merge(dst, src)
}
func (m *StringField) XXX_Size() int {
	return xxx_messageInfo_StringField.Size(m)
}
func (m *StringField) XXX_DiscardUnknown() {
	xxx_messageInfo_StringField.DiscardUnknown(m)
}

var xxx_messageInfo_StringField proto.InternalMessageInfo

func (m *StringField) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *StringField) GetRelType() RelationshipType {
	if m != nil && m.RelType != nil {
		return *m.RelType
	}
	return RelationshipType_UNKNOWN_FIELD_REL
}

func (m *StringField) GetRangeValue() string {
	if m != nil && m.RangeValue != nil {
		return *m.RangeValue
	}
	return ""
}

func (m *StringField) GetSortBy() bool {
	if m != nil && m.SortBy != nil {
		return *m.SortBy
	}
	return false
}

func (m *StringField) GetSortDirection() SortDirection {
	if m != nil && m.SortDirection != nil {
		return *m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

type TimestampField struct {
	Value                *timestamp.Timestamp `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	RelType              *RelationshipType    `protobuf:"varint,2,opt,name=rel_type,json=relType,enum=epl.protobuf.RelationshipType" json:"rel_type,omitempty"`
	RangeValue           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=range_value,json=rangeValue" json:"range_value,omitempty"`
	SortBy               *bool                `protobuf:"varint,4,opt,name=sort_by,json=sortBy" json:"sort_by,omitempty"`
	SortDirection        *SortDirection       `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimestampField) Reset()         { *m = TimestampField{} }
func (m *TimestampField) String() string { return proto.CompactTextString(m) }
func (*TimestampField) ProtoMessage()    {}
func (*TimestampField) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{3}
}
func (m *TimestampField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampField.Unmarshal(m, b)
}
func (m *TimestampField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampField.Marshal(b, m, deterministic)
}
func (dst *TimestampField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampField.Merge(dst, src)
}
func (m *TimestampField) XXX_Size() int {
	return xxx_messageInfo_TimestampField.Size(m)
}
func (m *TimestampField) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampField.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampField proto.InternalMessageInfo

func (m *TimestampField) GetValue() *timestamp.Timestamp {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TimestampField) GetRelType() RelationshipType {
	if m != nil && m.RelType != nil {
		return *m.RelType
	}
	return RelationshipType_UNKNOWN_FIELD_REL
}

func (m *TimestampField) GetRangeValue() *timestamp.Timestamp {
	if m != nil {
		return m.RangeValue
	}
	return nil
}

func (m *TimestampField) GetSortBy() bool {
	if m != nil && m.SortBy != nil {
		return *m.SortBy
	}
	return false
}

func (m *TimestampField) GetSortDirection() SortDirection {
	if m != nil && m.SortDirection != nil {
		return *m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

type GeometryField struct {
	//    oneof
	Geometry             *GeometryData        `protobuf:"bytes,1,opt,name=geometry" json:"geometry,omitempty"`
	GeometryBag          *GeometryBagData     `protobuf:"bytes,2,opt,name=geometry_bag,json=geometryBag" json:"geometry_bag,omitempty"`
	GeometryOperator     *OperatorRequest     `protobuf:"bytes,3,opt,name=geometry_operator,json=geometryOperator" json:"geometry_operator,omitempty"`
	RelationalOperator   *ServiceOperatorType `protobuf:"varint,4,opt,name=relational_operator,json=relationalOperator,enum=epl.protobuf.ServiceOperatorType" json:"relational_operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GeometryField) Reset()         { *m = GeometryField{} }
func (m *GeometryField) String() string { return proto.CompactTextString(m) }
func (*GeometryField) ProtoMessage()    {}
func (*GeometryField) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{4}
}
func (m *GeometryField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryField.Unmarshal(m, b)
}
func (m *GeometryField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryField.Marshal(b, m, deterministic)
}
func (dst *GeometryField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryField.Merge(dst, src)
}
func (m *GeometryField) XXX_Size() int {
	return xxx_messageInfo_GeometryField.Size(m)
}
func (m *GeometryField) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryField.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryField proto.InternalMessageInfo

func (m *GeometryField) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *GeometryField) GetGeometryBag() *GeometryBagData {
	if m != nil {
		return m.GeometryBag
	}
	return nil
}

func (m *GeometryField) GetGeometryOperator() *OperatorRequest {
	if m != nil {
		return m.GeometryOperator
	}
	return nil
}

func (m *GeometryField) GetRelationalOperator() ServiceOperatorType {
	if m != nil && m.RelationalOperator != nil {
		return *m.RelationalOperator
	}
	return ServiceOperatorType_Project
}

type MetadataRequest struct {
	Id                   *StringField    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Limit                *uint32         `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset               *uint64         `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	EoSunAzimuth         *FloatField     `protobuf:"bytes,8,opt,name=eo_sun_azimuth,json=eoSunAzimuth" json:"eo_sun_azimuth,omitempty"`
	EoSunElevation       *FloatField     `protobuf:"bytes,9,opt,name=eo_sun_elevation,json=eoSunElevation" json:"eo_sun_elevation,omitempty"`
	EoGsd                *FloatField     `protobuf:"bytes,10,opt,name=eo_gsd,json=eoGsd" json:"eo_gsd,omitempty"`
	EoOffNadir           *FloatField     `protobuf:"bytes,11,opt,name=eo_off_nadir,json=eoOffNadir" json:"eo_off_nadir,omitempty"`
	EoAzimuth            *FloatField     `protobuf:"bytes,12,opt,name=eo_azimuth,json=eoAzimuth" json:"eo_azimuth,omitempty"`
	EoCloudCover         *FloatField     `protobuf:"bytes,13,opt,name=eo_cloud_cover,json=eoCloudCover" json:"eo_cloud_cover,omitempty"`
	Bbox                 *EnvelopeData   `protobuf:"bytes,14,opt,name=bbox" json:"bbox,omitempty"`
	Geometry             *GeometryField  `protobuf:"bytes,15,opt,name=geometry" json:"geometry,omitempty"`
	EoBands              *EO_BAND        `protobuf:"varint,16,opt,name=eo_bands,json=eoBands,enum=epl.protobuf.EO_BAND" json:"eo_bands,omitempty"`
	SrcImgDate           *TimestampField `protobuf:"bytes,201,opt,name=src_img_date,json=srcImgDate" json:"src_img_date,omitempty"`
	Usgsid               *StringField    `protobuf:"bytes,202,opt,name=usgsid" json:"usgsid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetadataRequest) Reset()         { *m = MetadataRequest{} }
func (m *MetadataRequest) String() string { return proto.CompactTextString(m) }
func (*MetadataRequest) ProtoMessage()    {}
func (*MetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{5}
}
func (m *MetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataRequest.Unmarshal(m, b)
}
func (m *MetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataRequest.Marshal(b, m, deterministic)
}
func (dst *MetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataRequest.Merge(dst, src)
}
func (m *MetadataRequest) XXX_Size() int {
	return xxx_messageInfo_MetadataRequest.Size(m)
}
func (m *MetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataRequest proto.InternalMessageInfo

func (m *MetadataRequest) GetId() *StringField {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MetadataRequest) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *MetadataRequest) GetOffset() uint64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *MetadataRequest) GetEoSunAzimuth() *FloatField {
	if m != nil {
		return m.EoSunAzimuth
	}
	return nil
}

func (m *MetadataRequest) GetEoSunElevation() *FloatField {
	if m != nil {
		return m.EoSunElevation
	}
	return nil
}

func (m *MetadataRequest) GetEoGsd() *FloatField {
	if m != nil {
		return m.EoGsd
	}
	return nil
}

func (m *MetadataRequest) GetEoOffNadir() *FloatField {
	if m != nil {
		return m.EoOffNadir
	}
	return nil
}

func (m *MetadataRequest) GetEoAzimuth() *FloatField {
	if m != nil {
		return m.EoAzimuth
	}
	return nil
}

func (m *MetadataRequest) GetEoCloudCover() *FloatField {
	if m != nil {
		return m.EoCloudCover
	}
	return nil
}

func (m *MetadataRequest) GetBbox() *EnvelopeData {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *MetadataRequest) GetGeometry() *GeometryField {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *MetadataRequest) GetEoBands() EO_BAND {
	if m != nil && m.EoBands != nil {
		return *m.EoBands
	}
	return EO_BAND_UNKNOWN_BAND
}

func (m *MetadataRequest) GetSrcImgDate() *TimestampField {
	if m != nil {
		return m.SrcImgDate
	}
	return nil
}

func (m *MetadataRequest) GetUsgsid() *StringField {
	if m != nil {
		return m.Usgsid
	}
	return nil
}

// Right now this isn't included in the response as it's a bit messy
type BandDetails struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CommonName           *string  `protobuf:"bytes,2,opt,name=common_name,json=commonName" json:"common_name,omitempty"`
	Description          *string  `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Gsd                  *float32 `protobuf:"fixed32,4,opt,name=gsd" json:"gsd,omitempty"`
	Accuracy             *float32 `protobuf:"fixed32,5,opt,name=accuracy" json:"accuracy,omitempty"`
	CenterWavelength     *float32 `protobuf:"fixed32,6,opt,name=center_wavelength,json=centerWavelength" json:"center_wavelength,omitempty"`
	FullWidthHalfMax     *float32 `protobuf:"fixed32,7,opt,name=full_width_half_max,json=fullWidthHalfMax" json:"full_width_half_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BandDetails) Reset()         { *m = BandDetails{} }
func (m *BandDetails) String() string { return proto.CompactTextString(m) }
func (*BandDetails) ProtoMessage()    {}
func (*BandDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{6}
}
func (m *BandDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandDetails.Unmarshal(m, b)
}
func (m *BandDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandDetails.Marshal(b, m, deterministic)
}
func (dst *BandDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandDetails.Merge(dst, src)
}
func (m *BandDetails) XXX_Size() int {
	return xxx_messageInfo_BandDetails.Size(m)
}
func (m *BandDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_BandDetails.DiscardUnknown(m)
}

var xxx_messageInfo_BandDetails proto.InternalMessageInfo

func (m *BandDetails) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BandDetails) GetCommonName() string {
	if m != nil && m.CommonName != nil {
		return *m.CommonName
	}
	return ""
}

func (m *BandDetails) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *BandDetails) GetGsd() float32 {
	if m != nil && m.Gsd != nil {
		return *m.Gsd
	}
	return 0
}

func (m *BandDetails) GetAccuracy() float32 {
	if m != nil && m.Accuracy != nil {
		return *m.Accuracy
	}
	return 0
}

func (m *BandDetails) GetCenterWavelength() float32 {
	if m != nil && m.CenterWavelength != nil {
		return *m.CenterWavelength
	}
	return 0
}

func (m *BandDetails) GetFullWidthHalfMax() float32 {
	if m != nil && m.FullWidthHalfMax != nil {
		return *m.FullWidthHalfMax
	}
	return 0
}

type Asset struct {
	Href                 *string     `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	AssetType            *ASSET_TYPE `protobuf:"varint,2,opt,name=asset_type,json=assetType,enum=epl.protobuf.ASSET_TYPE" json:"asset_type,omitempty"`
	EoBand               *EO_BAND    `protobuf:"varint,3,opt,name=eo_band,json=eoBand,enum=epl.protobuf.EO_BAND" json:"eo_band,omitempty"`
	BucketIaasHost       *IAAS       `protobuf:"varint,4,opt,name=bucket_iaas_host,json=bucketIaasHost,enum=epl.protobuf.IAAS" json:"bucket_iaas_host,omitempty"`
	BucketOwner          *string     `protobuf:"bytes,5,opt,name=bucket_owner,json=bucketOwner" json:"bucket_owner,omitempty"`
	BucketRegion         *string     `protobuf:"bytes,6,opt,name=bucket_region,json=bucketRegion" json:"bucket_region,omitempty"`
	BucketRef            *string     `protobuf:"bytes,7,opt,name=bucket_ref,json=bucketRef" json:"bucket_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Asset) Reset()         { *m = Asset{} }
func (m *Asset) String() string { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()    {}
func (*Asset) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{7}
}
func (m *Asset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Asset.Unmarshal(m, b)
}
func (m *Asset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Asset.Marshal(b, m, deterministic)
}
func (dst *Asset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Asset.Merge(dst, src)
}
func (m *Asset) XXX_Size() int {
	return xxx_messageInfo_Asset.Size(m)
}
func (m *Asset) XXX_DiscardUnknown() {
	xxx_messageInfo_Asset.DiscardUnknown(m)
}

var xxx_messageInfo_Asset proto.InternalMessageInfo

func (m *Asset) GetHref() string {
	if m != nil && m.Href != nil {
		return *m.Href
	}
	return ""
}

func (m *Asset) GetAssetType() ASSET_TYPE {
	if m != nil && m.AssetType != nil {
		return *m.AssetType
	}
	return ASSET_TYPE_UNKNOWN_ASSET
}

func (m *Asset) GetEoBand() EO_BAND {
	if m != nil && m.EoBand != nil {
		return *m.EoBand
	}
	return EO_BAND_UNKNOWN_BAND
}

func (m *Asset) GetBucketIaasHost() IAAS {
	if m != nil && m.BucketIaasHost != nil {
		return *m.BucketIaasHost
	}
	return IAAS_UNKNOWN_IAAS
}

func (m *Asset) GetBucketOwner() string {
	if m != nil && m.BucketOwner != nil {
		return *m.BucketOwner
	}
	return ""
}

func (m *Asset) GetBucketRegion() string {
	if m != nil && m.BucketRegion != nil {
		return *m.BucketRegion
	}
	return ""
}

func (m *Asset) GetBucketRef() string {
	if m != nil && m.BucketRef != nil {
		return *m.BucketRef
	}
	return ""
}

type MetadataResult struct {
	Id           *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	EoPlatform   *EO_PLATFORM      `protobuf:"varint,2,opt,name=eo_platform,json=eoPlatform,enum=epl.protobuf.EO_PLATFORM" json:"eo_platform,omitempty"`
	EoInstrument *EO_INSTRUMENT    `protobuf:"varint,3,opt,name=eo_instrument,json=eoInstrument,enum=epl.protobuf.EO_INSTRUMENT" json:"eo_instrument,omitempty"`
	EoEpsg       *uint32           `protobuf:"varint,4,opt,name=eo_epsg,json=eoEpsg" json:"eo_epsg,omitempty"`
	Assets       map[string]*Asset `protobuf:"bytes,6,rep,name=assets" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Difference from current STAC definition: properties are not nested beneath a properties object
	EoSunAzimuth   *float32         `protobuf:"fixed32,8,opt,name=eo_sun_azimuth,json=eoSunAzimuth" json:"eo_sun_azimuth,omitempty"`
	EoSunElevation *float32         `protobuf:"fixed32,9,opt,name=eo_sun_elevation,json=eoSunElevation" json:"eo_sun_elevation,omitempty"`
	EoGsd          *float32         `protobuf:"fixed32,10,opt,name=eo_gsd,json=eoGsd" json:"eo_gsd,omitempty"`
	EoOffNadir     *float32         `protobuf:"fixed32,11,opt,name=eo_off_nadir,json=eoOffNadir" json:"eo_off_nadir,omitempty"`
	EoAzimuth      *float32         `protobuf:"fixed32,12,opt,name=eo_azimuth,json=eoAzimuth" json:"eo_azimuth,omitempty"`
	EoCloudCover   *float32         `protobuf:"fixed32,13,opt,name=eo_cloud_cover,json=eoCloudCover" json:"eo_cloud_cover,omitempty"`
	Bbox           *EnvelopeData    `protobuf:"bytes,14,opt,name=bbox" json:"bbox,omitempty"`
	Geometry       *GeometryBagData `protobuf:"bytes,15,opt,name=geometry" json:"geometry,omitempty"`
	// Difference from current STAC definition: bands are just the enums instead of the bandDetails
	// STAC has bands defined twice. once in assets and once in properties. should probably just be
	// once.
	EoBands              *EO_BAND             `protobuf:"varint,16,opt,name=eo_bands,json=eoBands,enum=epl.protobuf.EO_BAND" json:"eo_bands,omitempty"`
	SrcImgDate           *timestamp.Timestamp `protobuf:"bytes,201,opt,name=src_img_date,json=srcImgDate" json:"src_img_date,omitempty"`
	Usgsid               *string              `protobuf:"bytes,202,opt,name=usgsid" json:"usgsid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetadataResult) Reset()         { *m = MetadataResult{} }
func (m *MetadataResult) String() string { return proto.CompactTextString(m) }
func (*MetadataResult) ProtoMessage()    {}
func (*MetadataResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_stac_42a8e6305ea1b8d4, []int{8}
}
func (m *MetadataResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataResult.Unmarshal(m, b)
}
func (m *MetadataResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataResult.Marshal(b, m, deterministic)
}
func (dst *MetadataResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataResult.Merge(dst, src)
}
func (m *MetadataResult) XXX_Size() int {
	return xxx_messageInfo_MetadataResult.Size(m)
}
func (m *MetadataResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataResult.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataResult proto.InternalMessageInfo

func (m *MetadataResult) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MetadataResult) GetEoPlatform() EO_PLATFORM {
	if m != nil && m.EoPlatform != nil {
		return *m.EoPlatform
	}
	return EO_PLATFORM_UNKNOWN_PLATFORM
}

func (m *MetadataResult) GetEoInstrument() EO_INSTRUMENT {
	if m != nil && m.EoInstrument != nil {
		return *m.EoInstrument
	}
	return EO_INSTRUMENT_UNKNOWN_INSTRUMENT
}

func (m *MetadataResult) GetEoEpsg() uint32 {
	if m != nil && m.EoEpsg != nil {
		return *m.EoEpsg
	}
	return 0
}

func (m *MetadataResult) GetAssets() map[string]*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *MetadataResult) GetEoSunAzimuth() float32 {
	if m != nil && m.EoSunAzimuth != nil {
		return *m.EoSunAzimuth
	}
	return 0
}

func (m *MetadataResult) GetEoSunElevation() float32 {
	if m != nil && m.EoSunElevation != nil {
		return *m.EoSunElevation
	}
	return 0
}

func (m *MetadataResult) GetEoGsd() float32 {
	if m != nil && m.EoGsd != nil {
		return *m.EoGsd
	}
	return 0
}

func (m *MetadataResult) GetEoOffNadir() float32 {
	if m != nil && m.EoOffNadir != nil {
		return *m.EoOffNadir
	}
	return 0
}

func (m *MetadataResult) GetEoAzimuth() float32 {
	if m != nil && m.EoAzimuth != nil {
		return *m.EoAzimuth
	}
	return 0
}

func (m *MetadataResult) GetEoCloudCover() float32 {
	if m != nil && m.EoCloudCover != nil {
		return *m.EoCloudCover
	}
	return 0
}

func (m *MetadataResult) GetBbox() *EnvelopeData {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *MetadataResult) GetGeometry() *GeometryBagData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *MetadataResult) GetEoBands() EO_BAND {
	if m != nil && m.EoBands != nil {
		return *m.EoBands
	}
	return EO_BAND_UNKNOWN_BAND
}

func (m *MetadataResult) GetSrcImgDate() *timestamp.Timestamp {
	if m != nil {
		return m.SrcImgDate
	}
	return nil
}

func (m *MetadataResult) GetUsgsid() string {
	if m != nil && m.Usgsid != nil {
		return *m.Usgsid
	}
	return ""
}

func init() {
	proto.RegisterType((*FloatField)(nil), "epl.protobuf.FloatField")
	proto.RegisterType((*DoubleField)(nil), "epl.protobuf.DoubleField")
	proto.RegisterType((*StringField)(nil), "epl.protobuf.StringField")
	proto.RegisterType((*TimestampField)(nil), "epl.protobuf.TimestampField")
	proto.RegisterType((*GeometryField)(nil), "epl.protobuf.GeometryField")
	proto.RegisterType((*MetadataRequest)(nil), "epl.protobuf.MetadataRequest")
	proto.RegisterType((*BandDetails)(nil), "epl.protobuf.BandDetails")
	proto.RegisterType((*Asset)(nil), "epl.protobuf.Asset")
	proto.RegisterType((*MetadataResult)(nil), "epl.protobuf.MetadataResult")
	proto.RegisterMapType((map[string]*Asset)(nil), "epl.protobuf.MetadataResult.AssetsEntry")
	proto.RegisterEnum("epl.protobuf.RelationshipType", RelationshipType_name, RelationshipType_value)
	proto.RegisterEnum("epl.protobuf.SortDirection", SortDirection_name, SortDirection_value)
	proto.RegisterEnum("epl.protobuf.EO_PLATFORM", EO_PLATFORM_name, EO_PLATFORM_value)
	proto.RegisterEnum("epl.protobuf.EO_INSTRUMENT", EO_INSTRUMENT_name, EO_INSTRUMENT_value)
	proto.RegisterEnum("epl.protobuf.EO_BAND", EO_BAND_name, EO_BAND_value)
	proto.RegisterEnum("epl.protobuf.ASSET_TYPE", ASSET_TYPE_name, ASSET_TYPE_value)
	proto.RegisterEnum("epl.protobuf.IAAS", IAAS_name, IAAS_value)
}

func init() { proto.RegisterFile("epl/protobuf/stac.proto", fileDescriptor_stac_42a8e6305ea1b8d4) }

var fileDescriptor_stac_42a8e6305ea1b8d4 = []byte{
	// 1722 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x72, 0xe3, 0xc6,
	0x11, 0x16, 0x20, 0x8a, 0x02, 0x9b, 0x3f, 0x3b, 0x1a, 0xed, 0x0f, 0xad, 0xf5, 0xc6, 0xb2, 0xe2,
	0xaa, 0xc8, 0x72, 0x99, 0xb2, 0x55, 0x15, 0xff, 0x6c, 0x36, 0x8e, 0x40, 0x12, 0xe4, 0x52, 0xa1,
	0x40, 0x65, 0x40, 0x45, 0xce, 0x5e, 0x50, 0x43, 0x70, 0x08, 0xa1, 0x0c, 0x72, 0x18, 0x00, 0xd4,
	0xae, 0x72, 0x52, 0xe5, 0x92, 0x47, 0xc8, 0x3d, 0x95, 0x4b, 0x1e, 0xc5, 0x7e, 0x85, 0xe4, 0x19,
	0x72, 0xca, 0x03, 0xa4, 0x66, 0x00, 0x90, 0x84, 0x44, 0x5b, 0x07, 0xdb, 0x7b, 0x9b, 0xfe, 0xe6,
	0xeb, 0x1e, 0x76, 0x4f, 0xf7, 0x37, 0x28, 0xc2, 0x13, 0x36, 0xf5, 0x0f, 0xa7, 0x01, 0x8f, 0xf8,
	0x60, 0x36, 0x3a, 0x0c, 0x23, 0xea, 0xd4, 0xa4, 0x85, 0x4b, 0x6c, 0xea, 0xd7, 0xd2, 0x8d, 0x9d,
	0xf7, 0x5c, 0xce, 0x5d, 0x9f, 0x2d, 0x98, 0x91, 0x37, 0x66, 0x61, 0x44, 0xc7, 0xd3, 0x98, 0xb3,
	0xf3, 0x34, 0x13, 0xc7, 0x65, 0x7c, 0xcc, 0xa2, 0xe0, 0x3a, 0xde, 0xdc, 0xfb, 0xb7, 0x02, 0xd0,
	0xf2, 0x39, 0x8d, 0x5a, 0x1e, 0xf3, 0x87, 0xf8, 0x21, 0x6c, 0x5c, 0x51, 0x7f, 0xc6, 0xaa, 0xca,
	0xae, 0xb2, 0xaf, 0x92, 0xd8, 0xc0, 0x5f, 0x82, 0x16, 0x30, 0xdf, 0x8e, 0xae, 0xa7, 0xac, 0xaa,
	0xee, 0x2a, 0xfb, 0x95, 0xa3, 0x5f, 0xd4, 0x96, 0x7f, 0x43, 0x8d, 0x30, 0x9f, 0x46, 0x1e, 0x9f,
	0x84, 0x97, 0xde, 0xb4, 0x7f, 0x3d, 0x65, 0x64, 0x33, 0x60, 0xbe, 0x58, 0xe0, 0xf7, 0xa0, 0x18,
	0xd0, 0x89, 0xcb, 0xec, 0x38, 0xec, 0xba, 0x0c, 0x0b, 0x12, 0xfa, 0xa3, 0x8c, 0xfd, 0x04, 0x36,
	0x43, 0x1e, 0x44, 0xf6, 0xe0, 0xba, 0x9a, 0xdb, 0x55, 0xf6, 0x35, 0x92, 0x17, 0x66, 0xfd, 0x1a,
	0xd7, 0xa1, 0x22, 0x37, 0x86, 0x5e, 0xc0, 0x1c, 0x11, 0xbc, 0xba, 0x21, 0x8f, 0x7e, 0x9a, 0x3d,
	0xda, 0xe2, 0x41, 0xd4, 0x4c, 0x29, 0xa4, 0x1c, 0x2e, 0x9b, 0x7b, 0xff, 0x51, 0xa0, 0xd8, 0xe4,
	0xb3, 0x81, 0xcf, 0x56, 0xa4, 0xa7, 0xfc, 0x3c, 0xe9, 0x29, 0x6f, 0x37, 0x3d, 0x2b, 0x0a, 0xbc,
	0x89, 0xbb, 0x22, 0xbd, 0xc2, 0xcf, 0x93, 0x5e, 0xe1, 0xed, 0xa5, 0xf7, 0x77, 0x15, 0x2a, 0xfd,
	0xb4, 0x99, 0xe3, 0x0c, 0x3f, 0x59, 0xce, 0xb0, 0x78, 0xb4, 0x53, 0x8b, 0x9b, 0x7f, 0x11, 0x70,
	0xce, 0xff, 0x09, 0xb2, 0xff, 0xcd, 0xdd, 0xec, 0x7f, 0xf8, 0xc8, 0xb7, 0x56, 0x99, 0x7f, 0xa9,
	0x50, 0x6e, 0x27, 0x83, 0x1c, 0x17, 0xe6, 0x33, 0xd0, 0xd2, 0xc9, 0x9e, 0xd7, 0x26, 0x13, 0x2f,
	0xa5, 0x37, 0x69, 0x44, 0xc9, 0x9c, 0x8b, 0x8f, 0xa1, 0x94, 0xae, 0xed, 0x01, 0x75, 0x65, 0x89,
	0x8a, 0x47, 0xcf, 0x56, 0xfb, 0xd6, 0xa9, 0x2b, 0xdd, 0x8b, 0xee, 0x02, 0xc0, 0x27, 0xb0, 0x35,
	0x8f, 0xc0, 0xa7, 0x2c, 0xa0, 0x11, 0x0f, 0x92, 0x5a, 0xdd, 0x0a, 0xd3, 0x4b, 0x76, 0x09, 0xfb,
	0xf3, 0x8c, 0x85, 0x11, 0x41, 0xa9, 0x5f, 0xba, 0x81, 0x09, 0x6c, 0x07, 0xc9, 0x75, 0x50, 0x7f,
	0x11, 0x2d, 0x27, 0x0b, 0xf4, 0xfe, 0xad, 0x02, 0xb1, 0xe0, 0xca, 0x73, 0x58, 0xea, 0x2b, 0xaf,
	0x0e, 0x2f, 0xbc, 0x53, 0x7c, 0xef, 0xaf, 0x79, 0x78, 0x70, 0xca, 0x22, 0x3a, 0x14, 0xbf, 0x3c,
	0x3e, 0x19, 0x7f, 0x08, 0xaa, 0x37, 0x4c, 0xea, 0xf4, 0xce, 0xad, 0xb0, 0x8b, 0x79, 0x22, 0xaa,
	0x27, 0x67, 0xca, 0xf7, 0xc6, 0x5e, 0x24, 0x2b, 0x53, 0x26, 0xb1, 0x81, 0x1f, 0x43, 0x9e, 0x8f,
	0x46, 0x21, 0x8b, 0x64, 0xa6, 0x39, 0x92, 0x58, 0xf8, 0x2b, 0xa8, 0x30, 0x6e, 0x87, 0xb3, 0x89,
	0x4d, 0xff, 0xe2, 0x8d, 0x67, 0xd1, 0x65, 0x55, 0x93, 0x87, 0x54, 0xb3, 0x87, 0x2c, 0x14, 0x97,
	0x94, 0x18, 0xb7, 0x66, 0x13, 0x3d, 0x66, 0xe3, 0x3a, 0xa0, 0xc4, 0x9f, 0xf9, 0xec, 0x4a, 0xa6,
	0x52, 0x2d, 0xdc, 0x13, 0xa1, 0x22, 0x23, 0x18, 0x29, 0x1f, 0x1f, 0x42, 0x9e, 0x71, 0xdb, 0x0d,
	0x87, 0x55, 0xb8, 0xc7, 0x73, 0x83, 0xf1, 0x76, 0x38, 0xc4, 0xcf, 0xa1, 0xc4, 0xb8, 0xcd, 0x47,
	0x23, 0x7b, 0x42, 0x87, 0x5e, 0x50, 0x2d, 0xde, 0xe3, 0x06, 0x8c, 0xf7, 0x46, 0x23, 0x53, 0x70,
	0xf1, 0xe7, 0x00, 0x8c, 0xcf, 0x93, 0x2d, 0xdd, 0xe3, 0x59, 0x60, 0x3c, 0xcd, 0x34, 0xae, 0x94,
	0xe3, 0xf3, 0xd9, 0xd0, 0x76, 0xf8, 0x15, 0x0b, 0xaa, 0xe5, 0xfb, 0x2b, 0xd5, 0x10, 0xf4, 0x86,
	0x60, 0xe3, 0x1a, 0xe4, 0x06, 0x03, 0xfe, 0xa6, 0x5a, 0x59, 0xd5, 0xec, 0xc6, 0xe4, 0x8a, 0xf9,
	0x7c, 0xca, 0x64, 0xb7, 0x4a, 0x1e, 0xfe, 0x7c, 0x69, 0x40, 0x1e, 0x48, 0x9f, 0xa7, 0xab, 0x9b,
	0x3c, 0x3e, 0x6c, 0x31, 0x21, 0x9f, 0x80, 0xc6, 0xb8, 0x3d, 0xa0, 0x93, 0x61, 0x58, 0x45, 0xb2,
	0x11, 0x1f, 0xdd, 0x3a, 0xac, 0x67, 0xd7, 0x75, 0xb3, 0x49, 0x36, 0x19, 0xaf, 0x0b, 0x16, 0xfe,
	0x1d, 0x94, 0xc2, 0xc0, 0xb1, 0xbd, 0xb1, 0x6b, 0x0f, 0x69, 0xc4, 0xaa, 0xdf, 0xc6, 0x8d, 0xf6,
	0x6e, 0xd6, 0x2d, 0xab, 0x6c, 0x04, 0xc2, 0xc0, 0xe9, 0x8c, 0xc5, 0x7c, 0x31, 0x7c, 0x04, 0xf9,
	0x59, 0xe8, 0x86, 0xde, 0xb0, 0xfa, 0xdd, 0xbd, 0x3d, 0x9a, 0x30, 0x4f, 0x72, 0x5a, 0x0e, 0xe5,
	0x4f, 0x72, 0x5a, 0x1e, 0x69, 0x27, 0x1b, 0xda, 0x43, 0xf4, 0xad, 0x72, 0x52, 0xd0, 0xfe, 0xb7,
	0x8e, 0x6e, 0x6e, 0x6e, 0x6e, 0xd4, 0xbd, 0xff, 0x2a, 0x50, 0x14, 0x3f, 0xae, 0xc9, 0x22, 0xea,
	0xf9, 0x21, 0xc6, 0x90, 0x9b, 0xd0, 0x71, 0xfa, 0x50, 0xc8, 0xb5, 0x10, 0x7b, 0x87, 0x8f, 0xc7,
	0x7c, 0x62, 0xcb, 0x2d, 0x35, 0x16, 0xfb, 0x18, 0x32, 0x05, 0x61, 0x17, 0x8a, 0x43, 0x16, 0x3a,
	0x81, 0x37, 0x95, 0x7d, 0x19, 0xbf, 0x06, 0xcb, 0x10, 0x46, 0xb0, 0x2e, 0xfa, 0x2e, 0x27, 0x5f,
	0x79, 0xb1, 0xc4, 0x3b, 0xa0, 0x51, 0xc7, 0x99, 0x05, 0xd4, 0xb9, 0x96, 0x3a, 0xa7, 0x92, 0xb9,
	0x8d, 0x3f, 0x82, 0x2d, 0x87, 0x4d, 0x22, 0x16, 0xd8, 0xaf, 0xe9, 0x15, 0xf3, 0xd9, 0xc4, 0x8d,
	0x2e, 0xab, 0x79, 0x49, 0x42, 0xf1, 0xc6, 0xc5, 0x1c, 0xc7, 0x1f, 0xc3, 0xf6, 0x68, 0xe6, 0xfb,
	0xf6, 0x6b, 0x6f, 0x18, 0x5d, 0xda, 0x97, 0xd4, 0x1f, 0xd9, 0x63, 0xfa, 0xa6, 0xba, 0x19, 0xd3,
	0xc5, 0xd6, 0x85, 0xd8, 0x79, 0x49, 0xfd, 0xd1, 0x29, 0x7d, 0x23, 0x14, 0x72, 0x43, 0x0f, 0xc5,
	0x48, 0x62, 0xc8, 0x5d, 0x06, 0x6c, 0x94, 0xa6, 0x2a, 0xd6, 0xa2, 0x6b, 0xa9, 0xd8, 0x5c, 0x7e,
	0x16, 0x6e, 0x35, 0x9e, 0x6e, 0x59, 0x46, 0xdf, 0xee, 0xff, 0xe9, 0xcc, 0x20, 0x05, 0xc9, 0x95,
	0x4f, 0x42, 0x0d, 0x36, 0x93, 0x66, 0x90, 0xe9, 0x7f, 0x6f, 0x2f, 0xe4, 0xe3, 0x5e, 0xc0, 0x2f,
	0x00, 0x0d, 0x66, 0xce, 0x37, 0x2c, 0xb2, 0x3d, 0x4a, 0x43, 0xfb, 0x92, 0x87, 0x51, 0xa2, 0x66,
	0x38, 0xeb, 0xd8, 0xd1, 0x75, 0x8b, 0x54, 0x62, 0x6e, 0x87, 0xd2, 0xf0, 0x25, 0x0f, 0x23, 0xfc,
	0x3e, 0x94, 0x12, 0x6f, 0xfe, 0x7a, 0xc2, 0x02, 0x59, 0xc0, 0x02, 0x29, 0xc6, 0x58, 0x4f, 0x40,
	0xf8, 0x97, 0x50, 0x4e, 0x28, 0x01, 0x73, 0xc5, 0xad, 0xe4, 0x25, 0x27, 0xf1, 0x23, 0x12, 0xc3,
	0xcf, 0x00, 0xe6, 0xa4, 0x91, 0x2c, 0x59, 0x81, 0x14, 0x52, 0xc6, 0x68, 0xef, 0x9f, 0x79, 0xa8,
	0x2c, 0x14, 0x32, 0x9c, 0xf9, 0x11, 0xae, 0xcc, 0x05, 0xb2, 0x20, 0x55, 0xf0, 0x39, 0x14, 0x19,
	0xb7, 0xa7, 0x3e, 0x8d, 0x46, 0x3c, 0x18, 0x27, 0x15, 0x7b, 0xe7, 0x4e, 0xee, 0x67, 0x5d, 0xbd,
	0xdf, 0xea, 0x91, 0x53, 0x21, 0x11, 0x67, 0x09, 0x19, 0x1f, 0x43, 0x99, 0x71, 0xdb, 0x9b, 0x84,
	0x51, 0x30, 0x1b, 0xb3, 0x49, 0x94, 0x54, 0xee, 0xe9, 0x1d, 0xef, 0x8e, 0x69, 0xf5, 0xc9, 0xf9,
	0xa9, 0x61, 0xf6, 0xc5, 0xac, 0x77, 0xe6, 0x0e, 0xe2, 0x2d, 0x65, 0xdc, 0x66, 0xd3, 0xd0, 0x95,
	0xc5, 0x2b, 0x8b, 0xf2, 0x1a, 0xd3, 0xd0, 0xc5, 0xc7, 0x90, 0x97, 0x77, 0x13, 0x56, 0xf3, 0xbb,
	0xeb, 0xfb, 0xc5, 0xa3, 0xfd, 0x6c, 0xcc, 0x6c, 0x52, 0x35, 0xd9, 0x0f, 0xa1, 0x31, 0x89, 0x82,
	0x6b, 0x92, 0xf8, 0xe1, 0x0f, 0x56, 0x0a, 0xb6, 0x7a, 0x4b, 0x96, 0xf7, 0xbf, 0x47, 0x96, 0xd5,
	0x3b, 0xe2, 0xfb, 0x28, 0x23, 0xbe, 0x6a, 0x2a, 0xb1, 0xbb, 0x2b, 0x24, 0x56, 0xcd, 0x08, 0xe9,
	0xb3, 0x3b, 0x42, 0xaa, 0x2e, 0xcb, 0xe5, 0x07, 0x2b, 0xe5, 0x52, 0xfd, 0x91, 0xa2, 0xf8, 0xe5,
	0x1d, 0x51, 0xbc, 0xe7, 0xe5, 0xff, 0x31, 0xb2, 0xf8, 0xdb, 0xd5, 0xb2, 0xf8, 0x83, 0x1f, 0x54,
	0x4b, 0xa2, 0xf8, 0x24, 0x2b, 0x8a, 0x85, 0x54, 0xf9, 0x76, 0x4c, 0x28, 0x2e, 0xdd, 0xac, 0xd0,
	0xa0, 0x6f, 0xd8, 0x75, 0xd2, 0xbb, 0x62, 0x89, 0x3f, 0x4c, 0x3f, 0x1a, 0xe3, 0x8f, 0x9b, 0xed,
	0x5b, 0x83, 0x2e, 0x7c, 0x93, 0xaf, 0xc5, 0xe7, 0xea, 0x17, 0xca, 0x49, 0x4e, 0xdb, 0x40, 0xf9,
	0x93, 0x0d, 0x6d, 0x2b, 0xab, 0xa1, 0x07, 0xdf, 0x29, 0x80, 0x6e, 0x7f, 0x2c, 0xe2, 0x47, 0xb0,
	0x75, 0x6e, 0xfe, 0xde, 0xec, 0x5d, 0x98, 0x76, 0xab, 0x63, 0x74, 0x9b, 0x36, 0x31, 0xba, 0x68,
	0x0d, 0x23, 0x28, 0xc5, 0xa6, 0xf1, 0x87, 0x73, 0xbd, 0x6b, 0x21, 0x15, 0x6f, 0xc3, 0x83, 0x18,
	0x31, 0x7b, 0xfd, 0x18, 0x45, 0x39, 0xfc, 0x10, 0x50, 0x0c, 0x76, 0x0d, 0xcb, 0x4a, 0x50, 0x0d,
	0x3f, 0x81, 0xed, 0x18, 0x6d, 0x13, 0x43, 0xef, 0x1b, 0x24, 0xd9, 0x40, 0xb8, 0x02, 0xb0, 0xa0,
	0xa3, 0x5d, 0xbc, 0x05, 0xe5, 0x0c, 0x11, 0x1d, 0x63, 0x04, 0xc5, 0xe4, 0x77, 0xe8, 0x66, 0xdb,
	0x40, 0x37, 0x0a, 0x7e, 0xb8, 0x7c, 0x70, 0x82, 0xaa, 0x07, 0x5f, 0x41, 0x39, 0xf3, 0x85, 0x29,
	0x62, 0x0b, 0x82, 0xd5, 0x23, 0x7d, 0xa3, 0x89, 0xd6, 0x84, 0xdd, 0x34, 0xac, 0x86, 0x61, 0x36,
	0x3b, 0x66, 0x1b, 0x29, 0xb8, 0x0c, 0x05, 0x7d, 0x6e, 0xaa, 0x07, 0x2f, 0xa0, 0xb8, 0x34, 0xef,
	0x22, 0x91, 0xb4, 0x0c, 0x29, 0x86, 0xd6, 0x84, 0x4f, 0x57, 0x37, 0x9b, 0x96, 0xde, 0xb7, 0xbf,
	0x40, 0x0a, 0xd6, 0x20, 0x67, 0xea, 0x9d, 0x33, 0xa4, 0x1e, 0xfc, 0x0a, 0xca, 0x99, 0x79, 0xc7,
	0x8f, 0x01, 0xa7, 0xfe, 0x0b, 0x14, 0xad, 0x1d, 0xfc, 0x4d, 0x85, 0xcd, 0xa4, 0x91, 0x44, 0x4d,
	0x53, 0x8e, 0xb0, 0xe3, 0x2a, 0x37, 0x7a, 0xba, 0xd5, 0xd7, 0xbb, 0x31, 0xa2, 0x8a, 0x13, 0xeb,
	0xdd, 0x73, 0x23, 0x36, 0x73, 0x22, 0x89, 0x36, 0x31, 0x8c, 0xc4, 0x41, 0xc3, 0x25, 0xd0, 0x88,
	0xd1, 0x8c, 0x2d, 0x24, 0xc8, 0xa4, 0x5d, 0x97, 0x96, 0x85, 0xde, 0x15, 0xbf, 0xc1, 0x34, 0x74,
	0x62, 0x77, 0xcc, 0x16, 0xd1, 0xe7, 0xb4, 0x5d, 0xfc, 0x00, 0x8a, 0xa4, 0x5d, 0xef, 0x90, 0x84,
	0xf8, 0x42, 0x1c, 0x6b, 0x5d, 0x74, 0x88, 0xfd, 0xe9, 0x67, 0x31, 0xe5, 0x18, 0x6f, 0x25, 0xc8,
	0xd1, 0x51, 0x8c, 0xdc, 0x28, 0xf8, 0x31, 0x6c, 0x9d, 0xe9, 0x66, 0xe3, 0x25, 0xe9, 0x9d, 0xea,
	0xfd, 0x4e, 0x23, 0xc1, 0x55, 0x71, 0x41, 0x8d, 0x0e, 0x21, 0xe7, 0x56, 0x82, 0xe4, 0x84, 0x73,
	0x57, 0x86, 0xfb, 0x34, 0x81, 0xb4, 0x05, 0x94, 0xc6, 0x43, 0x07, 0x0e, 0xc0, 0xe2, 0x49, 0x12,
	0x37, 0x9f, 0xd6, 0x42, 0xa2, 0x68, 0x4d, 0x54, 0xf7, 0xe4, 0xcc, 0x10, 0x57, 0x55, 0x84, 0xcd,
	0xb6, 0xd1, 0xeb, 0x77, 0x5a, 0x2d, 0xa4, 0x0a, 0xb8, 0x6b, 0x90, 0x06, 0x5a, 0xc7, 0x9b, 0xb0,
	0x7e, 0x4a, 0x5a, 0x28, 0x27, 0xf6, 0x4f, 0x49, 0xcb, 0xee, 0x34, 0xbf, 0x46, 0x1b, 0xa9, 0xf1,
	0xf5, 0x69, 0x17, 0xe5, 0x0f, 0x7e, 0x0d, 0x39, 0xf1, 0x10, 0x2d, 0x97, 0x5a, 0xd8, 0x68, 0x4d,
	0x38, 0xeb, 0x17, 0x16, 0x52, 0xc4, 0xa2, 0xdd, 0x38, 0x43, 0x2a, 0x2e, 0xc0, 0x86, 0xfe, 0xea,
	0x9c, 0x18, 0x68, 0xbd, 0xfe, 0x0a, 0x1e, 0x39, 0x7c, 0x9c, 0x1d, 0xab, 0x30, 0xa2, 0x4e, 0xbd,
	0x64, 0x45, 0xd4, 0x49, 0x55, 0xf8, 0x4c, 0x79, 0xf5, 0x91, 0xeb, 0x45, 0x97, 0xb3, 0x41, 0xcd,
	0xe1, 0xe3, 0x43, 0x97, 0xf1, 0x8f, 0xdd, 0x60, 0xea, 0x1c, 0xd2, 0xa9, 0x77, 0xe8, 0x72, 0x9f,
	0x4e, 0xdc, 0xc3, 0xe5, 0x7f, 0x2a, 0xfe, 0xa1, 0xae, 0x5b, 0xfd, 0xc6, 0xff, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x30, 0xc9, 0xa9, 0x47, 0x06, 0x11, 0x00, 0x00,
}
