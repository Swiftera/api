/*
Copyright 2017-2019 Echo Park Labs

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

For additional information, contact:

email: info@echoparklabs.io
*/

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.epl.protobuf";
option java_outer_classname = "StacProto";
option objc_class_prefix = "STPB";
option go_package = "github.com/geo-grpc/api/golang/epl/protobuf";

package epl.protobuf;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/any.proto";

import "epl/protobuf/geometry.proto";
import "epl/protobuf/query.proto";

/**
 * Spatio-Temporal Asset Catalog Item. This data item has a spatial and temporal extent. It has a unique identifier
 * downloadable assets. It may have an extension with details beyond the spatial and temporal extents. It may have
 * additional properties in the properties field
 */
message StacItem {
    // Provider identifier. As most geospatial assets are already defined by some identification scheme by the data provider it is recommended to simply use that ID. Data providers are advised to include sufficient information to make their IDs globally unique, including things like unique satellite IDs.
    string id = 1;

    // 'type" ignored as this isn't geojson

    // the spatial shape of the item. must have a spatial reference defined.
    epl.protobuf.GeometryData geometry = 3;
    // the bounding box of the spatial shape of the item. must have a spatial reference defined.
    epl.protobuf.EnvelopeData bbox = 4;
    // the properties of an item that are not defined within the stac specification. Requires marshalling and un-marshalling https://developers.google.com/protocol-buffers/docs/proto3#any
    google.protobuf.Any properties = 5;

    // links ignored because we're using grpc, but maybe it shouldn't be in cases of using protobuf without grpc?
    reserved 6;

    // Dictionary of asset objects that can be downloaded, each with a unique key. Some pre-defined keys are listed in the chapter 'Asset types'.
    map<string, Asset> assets = 7;

    // The searchable date and time of the assets, in UTC
    google.protobuf.Timestamp datetime = 8;

    // (optional) A human readable title describing the item.
    string title = 9;
    // (optional) The id of the STAC Collection this Item references to (see collection relation type below). This field is required if such a relation type is present. This field provides an easy way for a user to search for any Items that belong in a specified Collection.
    string collection = 10;

    // non-standard
    google.protobuf.Timestamp observed = 11;
    google.protobuf.Timestamp processed = 12;
    google.protobuf.Timestamp updated = 13;

    Eo eo = 14;
    Sar sar = 15;
    Dtr dtr = 16;
}

message StacRequest {
    StringField id = 1;

    //    oneof
    epl.protobuf.GeometryData geometry = 2;
    epl.protobuf.EnvelopeData bbox = 3;
    epl.protobuf.GeometryRequest geometry_request = 4;
    // end oneof

    google.protobuf.Any properties_request = 5;

    TimestampField datetime = 6;
    TimestampField observed = 7;
    TimestampField processed = 8;
    TimestampField updated = 9;

    EoRequest eo_request = 10;

    uint32 limit = 11;
    uint64 offset = 12;
}

/*
https://groups.google.com/forum/#!topic/protobuf/bO2L6-_t91Q
When mixing proto2 and proto3, there's a checklist of don't (like no 'required' fields)
1. All fields should be optional.
2. Do not use custom default values.
3. All enums should have first element with tag = 0.
4. Do not use extension for anything except custom options.
*/

// Right now this isn't included in the response as it's a bit messy
message BandDetails {
    string name = 1;
    string common_name = 2;
    string description = 3;
    google.protobuf.FloatValue gsd = 4;
    google.protobuf.FloatValue accuracy = 5;
    google.protobuf.FloatValue center_wavelength = 6;
    google.protobuf.FloatValue full_width_half_max = 7;
}

message Asset {
    string href = 1;
    string type = 2;
    // https://github.com/radiantearth/stac-spec/blob/612ee4fb4f979c049d2416e7f5374a5301b8a277/extensions/eo/README.md
    Eo.Band eo_bands = 3;

    AssetType asset_type = 4;

    // non-standard
    CloudPlatform cloud_platform = 5;
    string bucket_owner = 6;
    string bucket_region = 7;
    string bucket = 8;
    string object_path = 9;
}

message Dtr {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
}

message StacUpsertResponse {
    string status = 1;
    int32 status_code = 2;
    string data_id = 3;
}

message Sar {
    enum Platform {
        UNKNOWN_PLATFORM = 0;
        ENVISAT = 1;
        SENTINEL_1A = 2;
    }
    Platform platform = 1;

    enum Instrument {
        UNKNOWN_INSTRUMENT = 0;
    }
}

message Eo {
    enum Platform {
        UNKNOWN_PLATFORM = 0;
        LANDSAT_1 = 2;
        LANDSAT_2 = 4;
        LANDSAT_3 = 8;
        LANDSAT_123 = 14;
        LANDSAT_4 = 16;
        LANDSAT_5 = 32;
        LANDSAT_45 = 48;
        LANDSAT_7 = 64;
        LANDSAT_8 = 128;
        SWIFT_2 = 256;
    }

    enum Instrument {
        UNKNOWN_INSTRUMENT = 0;
        OLI = 2;
        TIRS = 4;
        POM_1 = 8;
    }

    enum Constellation {
        UNKNOWN_CONSTELLATION = 0;
        LANDSAT = 2;
        NAIP = 4;
        PNOA = 8;
        SWIFT = 16;
    }

    enum Band {
        UNKNOWN_BAND = 0;
        COASTAL = 2;
        BLUE = 4;
        GREEN = 8;
        RED = 16;
        RGB = 28;
        NEAR_INFRARED = 32;
        RGBIR = 60;
        SWIR_16 = 64;
        SWIR_22 = 128;
        PANCHROMATIC = 256;
        CIRRUS = 512;
        LWIR_11 = 1024;
        LWIR_12 = 2048;
    }

    uint32 epsg = 1;
    Platform platform = 2;
    Instrument instrument = 3;
    Constellation constellation = 4;

    google.protobuf.FloatValue sun_azimuth = 5;
    google.protobuf.FloatValue sun_elevation = 6;
    google.protobuf.FloatValue gsd = 7;
    google.protobuf.FloatValue off_nadir = 8;
    google.protobuf.FloatValue azimuth = 9;
    google.protobuf.FloatValue cloud_cover = 10;

    Band bands = 11;
}

message EoRequest {
    int32 epsg = 1;
    Eo.Platform platform = 2;
    Eo.Instrument instrument = 3;
    Eo.Constellation constellation = 4;

    FloatField sun_azimuth = 5;
    FloatField sun_elevation = 6;
    FloatField gsd = 7;
    FloatField off_nadir = 8;
    FloatField azimuth = 9;
    FloatField cloud_cover = 10;

    Eo.Band bands = 11;
}

enum AssetType {
    UNKNOWN_ASSET = 0;
    JPEG = 1;
    GEOTIFF = 2;
    LERC = 3;
    MRF = 4;
    MRF_IDX = 5;
    MRF_XML = 6;
    CO_GEOTIFF = 7;
    RAW = 8;
    THUMBNAIL = 9;
    TIFF = 10;
}

enum CloudPlatform {
    UNKNOWN_CLOUD_PLATFORM = 0;
    AWS = 1;
    GCP = 2;
    AZURE = 3;
}